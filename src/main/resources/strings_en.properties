language.name=English
language.code=en
empty=empty
yes=yes
no=no
or=or
paused=paused
playing=playing
looped=looped
loopedQueue=loopedQueue
message.botpermission.missing=🔒 You are missing the following permission: `%permission%`
message.discordpermission.missing=🔒 I am missing the following discord-permission: %permissions%
message.discordpermissions.missing=🔒 I am missing the following discord-permissions: %permissions%
message.discordchannelpermission.missing=🔒 I am missing the following discord-permission in **%channel%**: %permissions%
message.discordchannelpermissions.missing=🔒 I am missing the following discord-permissions in **%channel%**: %permissions%
message.discordcategorypermission.missing=🔒 I am missing the following discord-permission in the category **%category%**: %permissions%
message.discordcategorypermissions.missing=🔒 I am missing the following discord-permissions in the category **%category%**: %permissions%
message.command.usage=Correct usage: `%syntax%`
message.help.state=Positive states are `on`, `enable`, `enabled`, `true`, `yes`.\nNegative states are `off`, `disable`, `disabled`, `false`, `no`.
message.notaguildid=**%input%** is not a valid guildId
message.numbertobig=**%arg%** is to big
message.exception=This caused an exception, if it keeps occuring please check https://status.discordapp.com/ or contact melijn support, caseId: %caseId%


message.unknown.number=**%arg%** is not a valid number
message.unknown.timezone=`%arg%` is not a valid timezone: https://garygregory.wordpress.com/2013/06/18/what-are-the-java-timezone-ids/
message.unknown.language=**%arg%** is not a valid language
message.unknown.boolean=**%arg%** is not a valid boolean state
message.unknown.timeduration=**%arg%** is not a valid timeDuration
message.unknown.timeunit=**%arg%** is not a valid timeunit
message.unknown.permstate=**%arg%** is not a valid Permission State, states are: Allow, Default, Deny
message.unknown.user=**%arg%** is not a valid user
message.unknown.member=**%arg%** is not a valid member
message.unknown.role=`%arg%` is not a valid role
message.unknown.roletype=**%arg%** is not a valid roleType
message.unknown.gaintype=**%arg%** is not a valid gainType
message.unknown.userorrole=`%arg%` is not a valid user or role
message.unknown.color=`%arg%` is not a valid color, correct format is `#XXXXXX` with X being a hexadecimal value
message.unknown.permissionnode=**%arg%** is not a valid permission node
message.unknown.commandnode=**%arg%** is not a valid command node
message.unknown.commandstate=**%arg%** is not a valid Command State, states are: Enabled, Disabled
message.unknown.channelcommandstate=**%arg%** is not a valid Command State, states are: Enabled, Default, Disabled
message.unknown.punishmenttype=**%arg%** is not a valid punishment type
message.unknown.verificationtype=**%arg%** is not a valid verification type
message.unknown.channeltype=**%arg%** is not a valid channel type
message.unknown.emojioremote=**%arg%** was not an emote or emoji OR I don't share a server with that emote
message.unknown.textchannel=**%arg%** is not a valid text channel
message.unknown.punishgroup=**%arg%** is not a valid punishment group
message.unknown.ccid=**%arg%** is not a valid custom command id
message.unknown.filtergroup=**%arg%** is not a valid filter group
message.unknown.permissiontype=**%arg%** is not a valid permission type
message.deleted.user=deleted user
message.view.isempty=The message you were trying to view has no content
message.pgremoved=The punishment group which you had selected has been removed, select with `%prefix%pg select <pgName>`
message.nopgselected=You don't have a punishment group selected, select with `%prefix%pg select <pgName>`
message.ccremoved=The custom command which you had selected has been removed, select with `%prefix%cc select <ccId>`
message.noccselected=You don't have a custom command selected, select with `%prefix%cc select <ccId>`
message.notconfirm=The arguments do not match "confirm"
message.notset.role.unverified=No unverified role is set, set one with `>setRole unverified <role>`
message.number.notinrange=**%arg%** does not lay between %start% and %end%
message.filetoobig=The file was to big: **%size%**, max is **%max%**
message.interact.member.hierarchyexception=I cannot interact with **%user%**, this member has a role which is higher or equal then my highest role 
message.interact.member.isbot=I cannot interact with **%user%**, this user is a bot
message.notimage=The supplied url **%url%** does not point to an image
message.notagif=The supplied url **%url%** does not point to a gif


message.feature.requires.premium=The feature `%feature%` requires you to be a donator, become one with `>donate`
message.feature.requires.premium.guild=The feature `%feature%` requires the guild to be linked to a donator, become one with `>donate` & link the server with `>donate linkGuild`
premium.feature.volume.over.150=volume over 150
premium.feature.cc.limit=up to 100 custom commands
premium.feature.privateprefix.limit=up to %premiumLimit% private prefixes instead of %limit%
premium.feature.prefix.limit=up to %premiumLimit% guild prefixes instead of %limit%

message.unknown.integer=**%arg%** is not a valid integer, a valid integer is a number between -2^31 and 2^31
message.tosmall.integer=**%arg%** is to small, minimum is **%min%**
message.tobig.integer=**%arg%** is to big, maximum is **%max%**


message.unknown.float=**%arg%** is not a valid float, a valid float is an integer (number between -2^31 and 2^31) but with a decimal point somewhere
message.tosmall.float=**%arg%** is to small, minimum is **%min%**
message.tobig.float=**%arg%** is to big, maximum is **%max%**


message.runcondition.guildonly=This command can only be used in servers/guilds
message.runcondition.failed.user.supporter=This command requires you to support our bot `>donate`
message.runcondition.failed.guild.supporter=This command requires that this guild is linked to a donator `>donate linkGuild`
message.runcondition.failed.voted=This command can only be used for a period of 24h after voting, vote link: **%url%**
message.runcondition.failed.devonly=This command can only be used by the bot owners
message.runcondition.failed.playingtracknotnull=There is no track playing
message.runcondition.failed.vc=You need to be in a VoiceChannel
message.runcondition.failed.vcbot=To use this command one of the following conditions must be met:\
  \n- I'm in the same VoiceChannel as you\
  \n- I'm disconnected\
  \n- You have the `music.bypass.samevc` permission

message.runcondition.failed.vcbotalone=To use this command one of the following conditions must be met:\
  \n- I'm in the same VoiceChannel as you and you're the only one listening\
  \n- I'm disconnected and you're in a VoiceChannel\
  \n- I'm in another VoiceChannel where no one is listening\
  \n- You have the `music.bypass.vcbotalone` permission

message.runcondition.failed.botalone=To use this command one of the following conditions must be met:\
  \n- I'm in another VoiceChannel where no one is listening\
  \n- I'm disconnected\
  \n- You have the `music.bypass.botalone` permission
message.runcondition.failed.nsfw=This command can only be used in NSFW channels

message.cooldown=You have to wait **%cooldown%** more seconds

command.remove.syntax=%prefix%remove <ints*>
command.remove.description=Removes tracks from the queue
command.remove.removed=Removed **%count%** tracks from the queue:
command.remove.help=Args:\
  \n- ints: a sequence of numbers split by a comma, ranges are also supported 5,6,7-8,9\
  \nExamples:\
  \n- `%prefix%remove 5` Removes track 5\
  \n- `%prefix%remove 5,6` Removes track 5 and 6\
  \n- `%prefix%remove 5-7,8` Removes track 5,6,7 and 8\
  \n- `%prefix%remove 5-6` Removes track 5 and 6


command.filter.syntax=%prefix%filter <allowed | denied>
command.filter.description=Manages filters


command.filter.allowed.syntax=%prefix%filter allowed <add | remove | removeByIndex | list>
command.filter.allowed.description=%prefix%filter allowed <add | remove | removeByIndex | list>


command.filter.allowed.add.syntax=%prefix%filter allowed add <filterGroup*> <filter: string*>
command.filter.allowed.add.description=Adds an allowed filter the specified filter group
command.filter.allowed.add.success=Added an allowed filter to **%filterGroup%** with content:\n%filter%
command.filter.allowed.add.help=Args:\
  \n%help.arg.filtergroup%\
  \n%help.arg.filter%\
  \nExamples:\
  \n- `%prefix%filter allowed add introduction notABadWord` adds "notABadWord" to the allowed list of the "introduction" filter group


command.filter.allowed.remove.syntax=%prefix%filter allowed remove <filterGroup*> <filter*>
command.filter.allowed.remove.description=Removes an allowed filter from the specified filter group
command.filter.allowed.remove.success=Removed an allowed filter from **%filterGroup%** with content:\n%filter%
command.filter.allowed.remove.help=Args:\
  \n%help.arg.filtergroup%\
  \n%help.arg.filter%\
  \nExamples:\
  \n- `%prefix%filter allowed remove introduction notABadWord` removes "notABadWord" from the allowed list of the "introduction" filter group


command.filter.allowed.removebyindex.syntax=%prefix%filter allowed removeByIndex <filterGroup*> <filterIndex: int*>
command.filter.allowed.removebyindex.description=Removes allowed filters by index
command.filter.allowed.removebyindex.success=Removed the allowed filter at **%index%** in **%filterGroup%** with content:\n%filter%
command.filter.allowed.removebyindex.help=Args:\
  \n%help.arg.filtergroup%\
  \n%help.arg.int%, filterIndex: can be shown with `%prefix%allowedFilters list`\
  \nExamples:\
  \n- `%prefix%filter allowed removeByIndex #bots 0` removes entry at index 0 from the bot channel's allowed list


command.filter.allowed.list.syntax=%prefix%filter allowed list <filterGroup*>
command.filter.allowed.list.description=Shows the list of allowed filters
command.filter.allowed.list.success.channel=List of allowed filters in **%filterGroup%**:
command.filter.allowed.list.help=Args:\
  \n%help.arg.filtergroup%\
  \nExamples:\
  \n- `%prefix%allowedFilters list introduction` Shows the allowed filters in the introduction filter group


command.filter.denied.syntax=%prefix%filter denied <add | remove | removeByIndex | list>
command.filter.denied.description=%prefix%filter denied <add | remove | removeByIndex | list>


command.filter.denied.add.syntax=%prefix%filter denied add <filterGroup*> <filter: string*>
command.filter.denied.add.description=Adds an denied filter the specified filter group
command.filter.denied.add.success=Added an denied filter to **%filterGroup%** with content:\n%filter%
command.filter.denied.add.help=Args:\
  \n%help.arg.filtergroup%\
  \n%help.arg.filter%\
  \nExamples:\
  \n- `%prefix%filter denied add introduction notABadWord` adds "notABadWord" to the denied list of the "introduction" filter group


command.filter.denied.remove.syntax=%prefix%filter denied remove <filterGroup*> <filter*>
command.filter.denied.remove.description=Removes an denied filter from the specified filter group
command.filter.denied.remove.success=Removed an denied filter from **%filterGroup%** with content:\n%filter%
command.filter.denied.remove.help=Args:\
  \n%help.arg.filtergroup%\
  \n%help.arg.filter%\
  \nExamples:\
  \n- `%prefix%filter denied remove introduction notABadWord` removes "notABadWord" from the denied list of the "introduction" filter group


command.filter.denied.removebyindex.syntax=%prefix%filter denied removeByIndex <filterGroup*> <filterIndex: int*>
command.filter.denied.removebyindex.description=Removes denied filters by index
command.filter.denied.removebyindex.success=Removed the denied filter at **%index%** in **%filterGroup%** with content:\n%filter%
command.filter.denied.removebyindex.help=Args:\
  \n%help.arg.filtergroup%\
  \n%help.arg.int%, filterIndex: can be shown with `%prefix%deniedFilters list`\
  \nExamples:\
  \n- `%prefix%filter denied removeByIndex #bots 0` removes entry at index 0 from the bot channel's denied list


command.filter.denied.list.syntax=%prefix%filter denied list <filterGroup*>
command.filter.denied.list.description=Shows the list of denied filters
command.filter.denied.list.success=List of denied filters in **%filterGroup%**:
command.filter.denied.list.help=Args:\
  \n%help.arg.filtergroup%\
  \nExamples:\
  \n- `%prefix%deniedFilters list introduction` Shows the denied filters in the introduction filter group


command.filtergroup.syntax=%prefix%filterGroup <add | remove | list | select | setTriggerPoints | addChannel | removeChannel | listChannels | setState>
command.filtergroup.description=Manages the filter groups


command.filtergroup.add.syntax=%prefix%filterGroup add <filterGroup: string*> [points: int*] [filterMode*] [state: boolean*]
command.filtergroup.add.description=Adds a filter group
command.filtergroup.add.added=Added the filter group (name: **%filterGroupName%**, points: **%points%**, mode: **%mode%**, state: **%state%**)
command.filtergroup.add.help=Args:\
  \n%help.arg.string%, filterGroupName: name of a new filter group\
  \n%help.arg.int%, points: number the user should get when violating a filter in this group\
  \n%help.arg.boolean%, whether the filter group should be active\
  \n%help.arg.filtermode%\
  \nExamples:\
  \n- `%prefix%filterGroup add minor` Adds the filter group "minor" with 1 point for violating and is enabled\
  \n- `%prefix%filterGroup add medium 2` Adds the filter group "medium" with 2 points for violating and is enabled\
  \n- `%prefix%filterGroup add major 3 no_wrap false` Adds the filter group "major" with 3 points for violating with no_wrap mode and is disabled


command.filtergroup.remove.syntax=%prefix%filterGroup remove <filterGroup*>
command.filtergroup.remove.description=Removes filter groups
command.filtergroup.remove.removed=Removed the filter group named **%filterGroupName%**
command.filtergroup.remove.help=Args:\
  \n%help.arg.filtergroup%\
  \nExamples:\
  \n- `%prefix%filterGroup remove minor` Removed the filter group named minor


command.filtergroup.list.syntax=%prefix%filterGroup list
command.filtergroup.list.description=Lists all the filter groups and their details
command.filtergroup.list.title=Filter Groups


command.filtergroup.select.syntax=%prefix%filterGroup select <filterGroup*>
command.filtergroup.select.description=Selects filter groups for use in other subcommands
command.filtergroup.select.selected=Selected the filter group named **%filterGroupName%**
command.filtergroup.select.help=Args:\
  \n%help.arg.filtergroup%\
  \nExamples:\
  \n- `%prefix%filterGroup select medium` Selects the filter group "medium"


command.filtergroup.settriggerpoints.syntax=%prefix%filterGroup setTriggerPoints <points: int*>
command.filtergroup.settriggerpoints.description=Sets the points for violating the filters in the selected group
command.filtergroup.settriggerpoints.set=The points have been set to **%arg%**
command.filtergroup.settriggerpoints.help=Args:\
  \n%help.arg.filtergroup%\
  \nExamples:\
  \n- `%prefix%filterGroup setTriggerPoints 3` Sets the points to 3 for so users who violate the filter group get 3 points


command.filtergroup.addchannel.syntax=%prefix%filterGroup addChannel <textChannel* | all>
command.filtergroup.addchannel.description=Adds a channel for the bot to monitor for filter violations of filters of the selected filter group
command.filtergroup.addchannel.added=Added the channel **%channel%** to the filter group
command.filtergroup.addchannel.added.all=Added all the channels to the filter group
command.filtergroup.addchannel.help=Args:\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%filterGroup addChannel #general` Sets the selected filter group to be enforced in #general\
  \n- `%prefix%filterGroup addChannel all` Sets the selected filter group to be enforced in all text channels


command.filtergroup.removechannel.syntax=%prefix%filterGroup removeChannel <textChannel*>
command.filtergroup.removechannel.description=Removes a channel for the bot to monitor for filter violations of filters of the selected filter group
command.filtergroup.removechannel.added=Removed the channel **%channel%** from the filter group
command.filtergroup.removechannel.help=Args:\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%filterGroup removeChannel #general` Sets the selected filter group to be not be enforced in #general


command.filtergroup.listchannels.syntax=%prefix%filterGroup listChannels
command.filtergroup.listchannels.description=Lists the channels in which the filters of the filter group are active
command.filtergroup.listchannels.title=Filter Group Channels


command.filtergroup.setstate.syntax=%prefix%filterGroup setState <state: boolean*>
command.filtergroup.setstate.description=Manages the state of the selected filter group
command.filtergroup.setstate.enabled=Enabled the selected filter group
command.filtergroup.setstate.disabled=Disabled the selected filter group
command.filtergroup.setstate.help=Args:\
  \n%help.arg.boolean%, state: whether the filters of the selected group should be active\
  \nExamples:\
  \n- `%prefix%filterGroup setState true` Enables the filter group\
  \n- `%prefix%filterGroup setState false` Disables the filter group


command.filtergroup.setmode.syntax=%prefix%filterGroup setMode <filterMode*>
command.filtergroup.setmode.description=Manages the mode of the selected filter group
command.filtergroup.setmode.set=The filter mode of the selected filter group has been set to **%mode%**
command.filtergroup.setmode.help=Args:\
  \n%help.arg.filtermode%\
  \nExamples:\
  \n- `%prefix%filterGroup setMode no_wrap` sets the mode to no_wrap\
  \n- `%prefix%filterGroup setMode default` Sets the mode to default


command.setfiltermode.syntax=%prefix%setFilterMode <global | channel>
command.setfiltermode.description=Sets how the filters works


command.setfiltermode.channel.syntax=%prefix%setFilterMode channel <textChannel*> [filterMode* | null]
command.setfiltermode.channel.description=Manages the channel filter mode
command.setfiltermode.channel.set=The filter mode of **%channel%** has been set to **%mode%**
command.setfiltermode.channel.unset=The filter mode of **%channel%** has been unset
command.setfiltermode.channel.show=The filter mode of **%channel%** is set to **%mode%**
command.setfiltermode.channel.help=Args:\
  \n%help.arg.textchannel%\
  \n%help.arg.filtermode%\
  \nExamples:\
  \n- `%prefix%setFilterMode channel #general` Shows the filter mode of #general\
  \n- `%prefix%setFilterMode channel #general null` Unsets the filter mode of #general\
  \n- `%prefix%setFilterMode channel #general NO_WRAP` Sets the filter to not wrap


command.setfiltermode.global.syntax=%prefix%setFilterMode global [filterMode* | null]
command.setfiltermode.global.description=Manages the global filter mode
command.setfiltermode.global.set=The global filter mode has been set to **%mode%**
command.setfiltermode.global.unset=The global filter mode has been unset
command.setfiltermode.global.show=The global filter mode is set to **%mode%**
command.setfiltermode.global.help=Args:\
  \n%help.arg.filtermode%\
  \nExamples:\
  \n- `%prefix%setFilterMode global` Shows the filter mode of #general\
  \n- `%prefix%setFilterMode global null` Unsets the filter mode of #general\
  \n- `%prefix%setFilterMode global NO_WRAP` Sets the filter to not wrap


command.punishment.syntax=%prefix%punishment <add | remove | setReason | setExtra | list>
command.punishment.description=Manages punishment presets used for autopunishments
command.punishment.nomatch=No punishments were found for **%arg%**, check all current punishments with `%prefix%punishment list`
command.punishment.nomatch.typed=No punishments of type **%type%** were found for **%arg%**, check all current punishments with `%prefix%punishment list`


command.punishment.add.syntax=%prefix%punishment add <punishmentType*> <punishmentName: string*> <reason: string*>
command.punishment.add.description=Adds punishment presets used for autopunishments
command.punishment.add.added=Added punishment (name: **%name%**, type: **%type%**) with reason:\n%reason%
command.punishment.add.help=Args:\
  \n%help.arg.punishmentType%\
  \n%help.arg.string%, punishmentName: name of the punishment, reason: reason for this punishment\
  \nExamples:\
  \n- `%prefix%punishment add tempban swearing1 some reason` Adds a punishment named swearing1 of type tempban with reason "some reason"


command.punishment.list.syntax=%prefix%punishment list <punishmentType*>
command.punishment.list.description=Lists your punishment presets
command.punishment.list.title=Punishments:
command.punishment.list.typedtitle=Punishments:
command.punishment.list.help=Args:\
  \n%help.arg.punishmentType%\
  \nExamples:\
  \n- `%prefix%punishment list tempban` Shows all the punishments that are of the tempban type\
  \n- `%prefix%punishment list` Shows all the punishments


command.punishment.remove.syntax=%prefix%punishment remove <punishmentName: string*>
command.punishment.remove.description=Removes punishment presets used for autopunishments
command.punishment.remove.removed=Removed punishment (name: **%name%**, type: **%type%**) with reason:\n%reason%
command.punishment.remove.help=Args:\
  \n%help.arg.string%, punishmentName: name of the punishment\
  \nExamples:\
  \n- `%prefix%punishment remove swearing1` Removes a punishment named swearing1


command.punishment.setreason.syntax=%prefix%punishment setReason <punishmentName: string*> [reason: string*]
command.punishment.setreason.description=Sets the reason for punishment presets
command.punishment.setreason.show=The reason for punishment (name: **%name%**, type: **%type%**) is set to:\n%reason%
command.punishment.setreason.set=The reason for punishment (name: **%name%**, type: **%type%**) has been set to:\n%reason%
command.punishment.setreason.help=Args:\
  \n%help.arg.string%, punishmentName: name of the punishment, reason: reason for the punishment\
  \nExamples:\
  \n- `%prefix%punishment setReason swearing1 some other reason` Sets the reason of the punishment named swearing1 to "some other reason"\
  \n- `%prefix%punishment setReason swearing1` Shows the reason of the punishment named swearing1


command.punishment.setextra.syntax=%prefix%punishment setExtra <ban | mute | softban>
command.punishment.setextra.description=Sets extra options for punishments


command.punishment.setextra.ban.syntax=%prefix%punishment setExtra ban <duration | delDays>
command.punishment.setextra.ban.description=Sets extra options for punishments of type ban


command.punishment.setextra.ban.duration.syntax=%prefix%punishment setExtra ban duration <punishmentName: string*> <duration*>
command.punishment.setextra.ban.duration.description=Sets the duration option of a punishment of type ban
command.punishment.setextra.ban.duration.set=The duration of the punishment (name: **%name%**, type: **ban**) has been set to **%duration%** seconds
command.punishment.setextra.ban.duration.set.infinite=The duration of the the punishment (name: **%name%**, type: **ban**) has been set to infinite
command.punishment.setextra.ban.duration.help=Args:\
  \n%help.arg.duration%\
  \n%help.arg.string%, punishmentName: name of the punishment\
  \nExamples:\
  \n- `%prefix%punishment setExtra ban duration swearing1 1d 6h` the target will be banned for 30 hours when they receive this punishment


command.punishment.setextra.ban.deldays.syntax=%prefix%punishment setExtra ban delDays <punishmentName: string*> <days: Int*>
command.punishment.setextra.ban.deldays.description=Sets the deldays option of a punishment of type ban
command.punishment.setextra.ban.deldays.set=The deletion days amount of the punishment (name: **%name%**, type: **ban**) has been set to **%deldays%**
command.punishment.setextra.ban.deldays.help=Args:\
  \n%help.arg.int%, days: can be an int from 0 to 7 that represents the amount of days it will go back to delete messages \
  \n%help.arg.string%, punishmentName: name of the punishment\
  \nExamples:\
  \n- `%prefix%punishment setExtra ban delDays swearing1 0` no messages will be removed when a target receives this punishement\
  \n- `%prefix%punishment setExtra ban delDays swearing2 1` messages younger then 1 day sent by the target will be removed when a target receives this punishment


command.punishment.setextra.mute.duration.syntax=%prefix%punishment setExtra mute duration <punishmentName: string*> <duration*>
command.punishment.setextra.mute.duration.description=Sets the duration option of a punishment of type mute
command.punishment.setextra.mute.duration.set=The duration of the the punishment (name: **%name%**, type: **mute**) has been set to **%duration%** seconds
command.punishment.setextra.mute.duration.set.infinite=The duration of the the punishment (name: **%name%**, type: **mute**) has been set to infinite
command.punishment.setextra.mute.duration.help=Args:\
  \n%help.arg.duration%\
  \n%help.arg.string%, punishmentName: name of the punishment\
  \nExamples:\
  \n- `%prefix%punishment setExtra mute duration swearing3 1d 6h` the target will be muted for 30 hours when they receive this punishment


command.punishment.setextra.softban.deldays.syntax=%prefix%punishment setExtra softBan delDays <punishmentName: string*> <days: Int*>
command.punishment.setextra.softban.deldays.description=Sets the deldays option of a punishment of type softBan
command.punishment.setextra.softban.deldays.set=The deletion days amount of the punishment (name: **%name%**, type: **softBan**) has been set to **%deldays%**
command.punishment.setextra.softban.deldays.help=Args:\
  \n%help.arg.int%, days: can be an int from 0 to 7 that represents the amount of days it will go back to delete messages \
  \n%help.arg.string%, punishmentName: name of the punishment\
  \nExamples:\
  \n- `%prefix%punishment setExtra softBan delDays swearing1 0` no messages will be removed when a target receives this punishement\
  \n- `%prefix%punishment setExtra softBan delDays swearing2 1` messages younger then 1 day sent by the target will be removed when a target receives this punishment


command.punishmentgroup.syntax=%prefix%punishmentGroup <add | remove | select | list | setPPTrigger | setPPGoal | removePPGoal>
command.punishmentgroup.description=Manages punishment groups
command.punishmentgroup.nomatch=No punishment groups were found for **%arg%**, check all current punishment groups with `%prefix%pg list`


command.punishmentgroup.add.syntax=%prefix%punishmentGroup add <groupName: string*>
command.punishmentgroup.add.description=Adds punishment groups
command.punishmentgroup.add.added=Added a punishment group named **%name%**
command.punishmentgroup.add.help=Args:\
  \n%help.arg.string%, groupName: name for a punishment group\
  \nExamples:\
  \n- `%prefix%punishmentGroup add chat` Adds a punishment group named "chat"


command.punishmentgroup.remove.syntax=%prefix%punishmentGroup remove <groupName: string*>
command.punishmentgroup.remove.description=Removes punishment groups
command.punishmentgroup.remove.removed=Removed the punishment group named **%name%**
command.punishmentgroup.remove.help=Args:\
  \n%help.arg.string%, groupName: name of a punishment group\
  \nExamples:\
  \n- `%prefix%punishmentGroup remove chat` Removes a punishment group named "chat"


command.punishmentgroup.list.syntax=%prefix%punishmentGroup list
command.punishmentgroup.list.description=Lists punishment groups
command.punishmentgroup.list.title=Punishment Groups
command.punishmentgroup.list.pptrigger=Punishment Point Triggers
command.punishmentgroup.list.ppgoal=Punishment Point Goals


command.punishmentgroup.select.syntax=%prefix%punishmentGroup select <groupName: string*>
command.punishmentgroup.select.description=Selects a punishment group for further use
command.punishmentgroup.select.selected=Selected the punishment group **%group%**
command.punishmentgroup.select.help=Args:\
  \n%help.arg.string%, groupName: name of a punishment group\
  \nExamples:\
  \n- `%prefix%punishmentGroup select chat` Selects a punishment group named "chat"


command.punishmentgroup.copy.syntax=%prefix%punishmentGroup copy <groupName: string*> <targetGroupName: string*>
command.punishmentgroup.copy.description=Copies a punishment group
command.punishmentgroup.copy.copied=Copied the punishment group **%source%** an it's values to **%arg%**
command.punishmentgroup.copy.exists=**%arg%** already exists, Hint: use %prefix%punishmentGroup list
command.punishmentgroup.copy.help=Args:\
  \n%help.arg.string%, groupName: name of a punishment group, newGroupName: new name for a punishment group\
  \nExamples:\
  \n- `%prefix%punishmentGroup copy chat chat2` Creates a punishment group named "chat2" with all properties of "chat"


command.punishmentgroup.setpunishmentpointtrigger.syntax=%prefix%punishmentGroup setPunishmentPointTrigger <pointsTriggerType*> <state: boolean*>
command.punishmentgroup.setpunishmentpointtrigger.description=Sets the states of punishment point triggers for the selected punishment group
command.punishmentgroup.setpunishmentpointtrigger.set.enabled=Enabled the punishment point trigger **%type%** for **%group%**
command.punishmentgroup.setpunishmentpointtrigger.set.disabled=Disabled the punishment point trigger **%type%** for **%group%**
command.punishmentgroup.setpunishmentpointtrigger.help=Args:\
  \n%help.arg.pointstriggertype%\
  \n%help.arg.boolean%, state: when true enable and when false disable\
  \nExamples:\
  \n- `%prefix%punishmentGroup setPunishmentPointTrigger FILTERED_MESSAGE true` Message filters will now give points to this punishment group


command.punishmentgroup.setpunishmentpointsgoal.syntax=%prefix%punishmentGroup setPunishmentPointsGoal <points: int*> <punishmentName: string*>
command.punishmentgroup.setpunishmentpointsgoal.description=Sets point goals to the selected punishment group
command.punishmentgroup.setpunishmentpointsgoal.set=The punishment points goal for **%points%** has been set to **%punishment%** for **%groupName%**
command.punishmentgroup.setpunishmentpointsgoal.help=Args:\
  \n%help.arg.int%, points: amount of points which will grant the punishment to the target (starts at 1)\
  \n%help.arg.string%, punishmentName: name of the punishment you want to give when the goal is met\
  \nExamples:\
  \n- `%prefix%punishmentGroup setPunishmentPointsGoal 5 swearing1` The bot will give the punishment swearing1 when the selected punishment group reaches 5+ points for the first time


command.punishmentgroup.removepunishmentpointsgoal.syntax=%prefix%punishmentGroup removePunishmentPointsGoal <points: int*>
command.punishmentgroup.removepunishmentpointsgoal.description=Removes point goals from the selected punishment group
command.punishmentgroup.removepunishmentpointsgoal.removed=Removed punishment points goal to **%groupName%** of (**%points%** -> **%punishment%**)
command.punishmentgroup.removepunishmentpointsgoal.help=Args:\
  \n%help.arg.int%, points: amount of points which would grant the punishment to the target (starts at 1)\
  \nExamples:\
  \n- `%prefix%punishmentGroup removePunishmentPointsGoal 5` The bot will remove the punishment goal bound to 5 points of the selected punishment group


command.gainprofile.syntax=%prefix%gainProfile <load | set | remove | list | info | copy>
command.gainprofile.description=Main command to manage guild gain profiles
command.gainprofile.notfound=**%arg%** Is not a valid gain profile, use %prefix%gp list


command.gainprofile.load.syntax=%prefix%gainProfile load <gainProfileName: string* | gainProfileIndex: int*>
command.gainprofile.load.description=Loads the chosen gain profile
command.gainprofile.load.loaded=Loaded the **%gainProfile%** gain profile (takes +-3 seconds to take effect)
command.gainprofile.load.help=Args:\
  \n%help.arg.string%, the gainProfileName needs to exist: check this with `%prefix%gp list`\
  \n%help.arg.int%, the gainProfileIndex needs to exist: check this with `%prefix%gp list`\
  \nExamples:\
  \n- `%prefix%gainProfile load bass` Loads the bass profile if present`\
  \n- `%prefix%gainProfile load 0` Loads the gain profile at index 0


command.gainprofile.set.syntax=%prefix%gainProfile set <gainProfileName: string*>
command.gainprofile.set.description=Sets or updats the chosen gain profile, uses the current active bands as gain profile
command.gainprofile.set.added=Created/Updated the gain profile **%arg%** with the current active bands
command.gainprofile.set.help=Args:\
  \n%help.arg.string%, the gainProfileName doesn't need to exist, although if present it will be overwritten\
  \nExamples:\
  \n- `%prefix%gainProfile set bass` Creates/Updates a gain profile with name `bass`


command.gainprofile.remove.syntax=%prefix%gainProfile remove <gainProfileName: string* | gainProfileIndex: int*>
command.gainprofile.remove.description=Removes the chosen gain profile
command.gainprofile.remove.removed=Removed the gain profile **%arg%**
command.gainprofile.remove.help=Args:\
  \n%help.arg.string%, the gainProfileName needs to exist: check this with `%prefix%gp list`\
  \n%help.arg.int%, the gainProfileIndex needs to exist: check this with `%prefix%gp list`\
  \nExamples:\
  \n- `%prefix%gainProfile remove bass` Removes the gain profile with name `bass`\
  \n- `%prefix%gainProfile remove 0` Removes the gain profile at index 0


command.gainprofile.list.syntax=%prefix%gainProfile remove <gainProfileName: string*>
command.gainprofile.list.description=Lists all your gain profiles
command.gainprofile.list.title=List of gain profiles


command.gainprofile.copy.syntax=%prefix%gainProfile copy <gainProfileName1: string* | gainProfileIndex: int*> <gainProfileName2: string*>
command.gainprofile.copy.description=Copies an existing gain profile to a new one or overwrites an existing one
command.gainprofile.copy.copied=Copied the **%gainProfile1%** gain profile to **%gainProfile2%**
command.gainprofile.copy.help=Args:\
  \n%help.arg.string%, the gainProfileName1 needs to exist: check this with `%prefix%gp list`, the gainProfileName2 doesn't need to exist: although if present it will be overwritten\
  \n%help.arg.int%, the gainProfileIndex needs to exist: check this with `%prefix%gp list`\
  \nExamples:\
  \n- `%prefix%gainProfile copy bass LOW_BASS` Copies the gain profile with name `bass` to LOW_BASS\
  \n- `%prefix%gainProfile copy 0 LOW_BASS` Copies the gain profile with index 0 to LOW_BASS


command.gainprofile.info.syntax=%prefix%gainProfile info <gainProfileName: string* | gainProfileIndex: int*>
command.gainprofile.info.description=Shows info about the chosen gain profile
command.gainprofile.info.help=Args:\
  \n%help.arg.string%, the gainProfileName needs to exist: check this with `%prefix%gp list`\
  \n%help.arg.int%, the gainProfileIndex needs to exist: check this with `%prefix%gp list`\
  \nExamples:\
  \n- `%prefix%gainProfile info bass` Shows info about the gain profile with name `bass`\
  \n- `%prefix%gainProfile info 0` Shows info about the gain profile at index 0


command.loop.syntax=%prefix%loop
command.loop.description=Loops the current track
command.loop.looped=Track looping **enabled**
command.loop.unlooped=Track looping **disabled**
command.loop.help=Examples:\
  \n- `%prefix%loop` Changes the loop state to the opposite of the current loop state


command.loopqueue.syntax=%prefix%loopQueue
command.loopqueue.description=Loops the queue
command.loopqueue.looped=Queue looping **enabled**
command.loopqueue.unlooped=Queue looping **disabled**
command.loopqueue.help=Examples:\
  \n- `%prefix%loop` Changes the queue's loop state to the opposite of the current queue's loop state


command.support.syntax=%prefix%support
command.support.description=Sends a link for the support server
command.support.server=Get help in the melijn bot server: https://discordapp.com/invite/E2RfZA9


command.seek.syntax=%prefix%seek [timestamp*]
command.seek.description=Manages the position of the current track
command.seek.seeked=I seeked to `[%position% / %duration%]`
command.seek.show=The current position of the track is `[%position% / %duration%]`
command.seek.notinrange=**%arg%** is not in range of 0 - `[%duration%]`
command.seek.help=Args:\
  \n%help.arg.timestamp%\
  \nExamples:\
  \n- `%prefix%seek` Shows the track position\
  \n- `%prefix%seek 1:00` Seeks to 1 minute\
  \n- `%prefix%seek 1` Seeks to 1 second\
  \n- `%prefix%seek 120` Seeks to 120 seconds\
  \n- `%prefix%seek 1:00:50` Seeks to 1 hour and 50 seconds



command.forward.syntax=%prefix%forward <timestamp*>
command.forward.description=Adds the timestamp to the current timestamp and thus forwards
command.forward.forwarded=Forwarded to `[%position% / %duration%]`
command.forward.help=Args:\
  \n%help.arg.timestamp%\
  \nExamples:\
  \n- `%prefix%forward 1:00` Forwards by 1 minute\
  \n- `%prefix%forward 1` Forwards by 1 second\
  \n- `%prefix%forward 120` Forwards by 120 seconds\
  \n- `%prefix%forward 1:00:50` Forwards by 1 hour and 50 seconds



command.rewind.syntax=%prefix%rewind <timestamp*>
command.rewind.description=Subtracts the timestamp from the current timestamp and thus rewinds
command.rewind.forwarded=Rewinded to `[%position% / %duration%]`
command.rewind.help=Args:\
  \n%help.arg.timestamp%\
  \nExamples:\
  \n- `%prefix%rewind 1:00` Rewinds by 1 minute\
  \n- `%prefix%rewind 1` Rewinds by 1 second\
  \n- `%prefix%rewind 120` Rewinds by 120 seconds\
  \n- `%prefix%rewind 1:00:50` Rewinds by 1 hour and 50 seconds


command.nowplaying.syntax=%prefix%nowPlaying
command.nowplaying.description=Shows info about the active track
command.nowplaying.title=Now %status%
command.nowplaying.show.description=[**%title%**](%url%)
command.nowplaying.status=Status:
command.nowplaying.progress=Progress:


command.trackinfo.syntax=%prefix%trackInfo <trackIndex*>
command.trackinfo.description=Shows detailed information about the track
command.trackinfo.title=TrackInfo
command.trackinfo.requester=Requester:
command.trackinfo.requesterid=Requester Id:
command.trackinfo.length=Length:
command.trackinfo.timeuntil=Time until track:
command.trackinfo.progress=Progress:
command.trackinfo.help=Args:\
  \n%help.arg.trackindex%\
  \nExamples:\
  \n- `%prefix%trackInfo 1` Shows info of track 1


command.volume.syntax=%prefix%volume [volume*]
command.volume.description=Manages the volume of the music player
command.volume.set=The volume has been set to **%volume%%**
command.volume.show=The volume has is set to **%volume%%**
command.volume.help=Args:\
  \n%help.arg.volume%\
  \nExamples:\
  \n- `%prefix%volume 50` Sets the musicplayer's volume 50\
  \n- `%prefix%volume` Shows the musicplayer's volume



command.setband.syntax=%prefix%setBand <number* | all> [gain: int*]
command.setband.description=Sets the frequency gain for the band for the music player
command.setband.set=The gain of band **%bandId%** has been set to **%gain%%**
command.setband.show=The gain of ban **%bandId%** is set to **%gain%%**
command.setband.help=Args:\
  \n%help.arg.number%, range [0-14] <-> (25, 40, 63, 100, 160, 250, 400, 630, 1k, 1.6k, 2.5k, 4k, 6.3k, 10k and 16k) Hz\
  \n%help.arg.int%, gain: 1-500, 100 is default, 300 is twice as loud\
  \nExamples:\
  \n- `%prefix%setBand all 200` Doubles the gains of all frequencies\
  \n- `%prefix%setBand all` Shows the audio levels of all frequencies


command.setband.all.syntax=%prefix%setBand all [gain: int*]
command.setband.all.description=Manages the frequency gains of all bands for the music player
command.setband.all.set=The gain of all bands have been set to **%gain%%**
command.setband.all.show=The gain of each band
command.setband.all.help=Args:\
  \n%help.arg.int%, gain: 1-500, 100 is default, 300 is twice as loud\
  \nExamples:\
  \n- `%prefix%setBand all 200` Doubles the gains of all frequencies\
  \n- `%prefix%setBand all` Shows the audio levels of all frequencies


command.shuffle.syntax=%prefix%shuffle
command.shuffle.description=Shuffles the tracks in the queue
command.shuffle.success=Shuffled the queue


command.resume.syntax=%prefix%resume
command.resume.description=Resumes the music player
command.resume.success=Resumed the music player


command.pause.syntax=%prefix%pause
command.pause.description=Pauses the music player
command.pause.success=Paused the music player


command.skip.syntax=%prefix%skip [trackIndex*]
command.skip.description=Skips tracks in the queue
command.skip.title=Skipped by %user%
command.skip.skips=Skipped **%amount%** tracks\
  \n[Previous](%url%): %track% `[%position% / %duration%]`
command.skip.skip=[Previous](%url%): %track% `[%position% / %duration%]`
command.skip.next=\n[Next](%url%): %track% `[%duration%]`
command.skip.nonext=\nNo next track, destroyed music player
command.skip.help=Args:\
  \n%help.arg.trackindex%, will skip to this index and remove all previous tracks\
  \nExamples:\
  \n- `%prefix%skip` Skips the current playing track\
  \n- `%prefix%skip 4` Skips the current playing track and 3 in the queue


command.voteskip.syntax=%prefix%voteSkip
command.voteskip.description=Skips tracks in the queue if users agree
command.voteskip.titles=%votes% users agreed to skip
command.voteskip.title=%votes% user agreed to skip
command.voteskip.progress.title=%votes%/%votesRequired% users have agreed to skip so far 
command.voteskip.playing=[Playing](%url%): %track% `[%position% / %duration%]
command.voteskip.skips=Skipped **%amount%** tracks\
  \n[Previous](%url%): %track% `[%position% / %duration%]`
command.voteskip.skip=[Previous](%url%): %track% `[%position% / %duration%]`
command.voteskip.next=\n[Next](%url%): %track% `[%duration%]`
command.voteskip.nonext=\nNo next track, destroyed music player


command.summon.syntax=%summon% [voiceChannel*]
command.summon.description=Summons the bot to a voiceChannel
command.summon.summoned=I've been summoned
command.summon.help=Args:\
  \n%help.arg.voicechannel%\
  \nExamples:\
  \n- `%prefix%summon` Summons the bot to your channel\
  \n- `%prefix%summon 368079833944555530` Summons the bot the the voiceChannel with that id


command.queue.syntax=%prefix%queue
command.queue.description=Shows the music queue
command.queue.pagination=Page %pos%/%pages%
command.queue.title=Queue
command.queue.fakefooter=\n\nQueue duration: **%duration%**\
  \nQueue size: **%amount%**


command.lyrics.syntax=%prefix%lyrics [query: string*]
command.lyrics.description=Shows the lyrics of the playing track or of the query, might not get a result tho
command.lyrics.extrahelp=I must either be playing a track or you could provide a query. ex: `%prefix%lyrics rick astley never gonna give you up`
command.lyrics.words=Words
command.lyrics.characters=Characters


command.clearchannel.description=Makes a duplicate of the current channel and deletes the old channel
command.clearchannel.syntax=%prefix%clearChannel [textChannel*] <confirm>
command.clearchannel.notconfirm=You need to confirm the command, clearing the channel cannot be undone: `%syntax%`
command.clearchannel.help=Args:\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%clearChannel #channel confirm` Makes a copy of the channel #channel and deletes the original\
  \n- `%prefix%clearChannel confirm` Makes a copy of the channel this was sent in and deletes the original


command.metrics.description=Shows when and how many commands were executed
command.metrics.syntax=%prefix%metrics <commandNode* | limit | all> <timePeriod*>
command.metrics.help=Args:\
  \n%help.arg.commandnode%\
  \n%help.arg.timeperiod%\
  \nExamples:\
  \n- `%prefix%metrics play thisweek` Makes a copy of the channel #channel and deletes the original\
  \n- `%prefix%metrics all all` Makes a copy of the channel this was sent in and deletes the original\
  \n- `%prefix%metrics limit 10 hour` Makes a copy of the channel this was sent in and deletes the original


message.music.loadfailed=Loading this track has failed, caused by:\n`%cause%`
message.music.nomatches=No songs were found for the input **%source%**, check for spelling or use a link
message.music.notracks=There is no track playing or paused
message.music.addedtrack.title=Track added by %user%
message.music.addedtrack.description=[#%position%](%url%) **%title%** `%duration%`
message.music.addedtracks.title=Tracks added by %user%
message.music.addedtracks.description=**%size%** tracks, positions: #%positionFirst% -> #%positionLast%
message.music.queuelimit=The queue is limited to %amount% tracks, donators get %donateAmount% tracks limit (`>donate`)
message.music.searchmenu=Track picker
message.music.search.cancelled.description=No track was picked


command.stop.syntax=%prefix%stop
command.stop.description=Destroys the music player, leaves the VoiceChannel
command.stop.success=Destroyed the music player and left!


command.musicnode.syntax=%prefix%musicNode [default | premium]
command.musicnode.description=Select a music node for your server, premium supports all audio sources
command.musicnode.selected=Selected the %node% music node
command.musicnode.current=The current used music node is the **%node%** music node
command.musicnode.help=Examples:\
  \n- `%prefix%musicNode premium` The bot will switch to the premium music node (bot will disconnect for a second)\
  \n- `%prefix%musicNode default` The bot will switch to the default music node (bot will disconnect for a second)


command.play.syntax=%prefix%play [attachment | youtube | soundcloud | attachment* | song* | spotifyLink* | url*]
command.play.description=Tries to load your input and adds it to the queue
command.play.loadingtrack=Loading **%trackCount%** track...
command.play.loadingtracks=Loading **%trackCount%** tracks...
command.play.loadedtrack=Finished loading track: (**%loadedCount%** loaded, **%failedCount%** failed)
command.play.loadedtracks=Finished loading tracks: (**%loadedCount%** loaded, **%failedCount%** failed)
command.play.help=Args:\
  \n%help.arg.attachment%\
  \n%help.arg.song%\
  \n%help.arg.spotifyLink%\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%play ~attachment~` Adds the attachment to the queue\
  \n- `%prefix%play attachment ~attachment~` Adds the attachment to the queue\
  \n- `%prefix%play Rick Astley - Never Gonna Give You Up` Searches your song on youtube and adds it to the queue\
  \n- `%prefix%play youtube Rick Astley - Never Gonna Give You Up` Searches your song on youtube and adds it to the queue\
  \n- `%prefix%play soundcloud Miauw ik ben een kat` Searches your song on soundcloud and adds it to the queue\
  \n- `%prefix%play https://www.youtube.com/watch?v=dQw4w9WgXcQ` Adds the song to the queue\
  \n- `%prefix%play https://www.twitch.tv/pondelinp` Adds the stream to the queue\
  \n- `%prefix%play https://open.spotify.com/track/6qaf0vrdvKAqIwwdz4aQpg?si=Ezrk24_ST1aJOp5IyPvDHg` Gets track info from spotify api and searches on youtube and soundcloud for matching track, then adds it to the queue


command.play.youtube.syntax=%prefix%play youtube <song*>
command.play.youtube.description=Tries to load your input from youtube and adds it to the queue
command.play.youtube.help=Args:\
  \n%help.arg.song%\
  \nExamples:\
  \n- `%prefix%play youtube Rick Astley - Never Gonna Give You Up` Searches the song on youtube and adds it to the queue


command.play.soundcloud.syntax=%prefix%play soundcloud <song*>
command.play.soundcloud.description=Tries to load your input from soundcloud and adds it to the queue
command.play.soundcloud.help=Args:\
  \n%help.arg.song%\
  \nExamples:\
  \n- `%prefix%play soundcloud Miauw ik ben een kat` Searches your song on soundcloud and adds it to the queue


command.play.attachment.syntax=%prefix%play attachment <attachment*>
command.play.attachment.description=Tries to load your attachment and adds it to the queue
command.play.attachment.help=Args:\
  \n%help.arg.attachment%\
  \nExamples:\
  \n- `%prefix%play ~attachment~` Adds the attachment to the queue


command.splay.syntax=%prefix%splay <song* | youtube | soundcloud>
command.splay.description=Shows the first 5 options from youtube with reactions to pick a track
command.splay.loadingtrack=Loading the track...
command.splay.loadedtrack=Loaded the track
command.splay.failedloadedtrack=Failed to load the track
command.splay.help=Args:\
  \n%help.arg.song%\
  \nExamples:\
  \n- `%prefix%splay Rick Astley - Never Gonna Give You Up` Searches your songs matching "Rick Astley - Never Gonna Give You Up" on youtube


command.splay.youtube.syntax=%prefix%splay youtube <song*>
command.splay.youtube.description=Tries to load your input from youtube and shows a track picker
command.splay.youtube.help=Args:\
  \n%help.arg.song%\
  \nExamples:\
  \n- `%prefix%splay youtube Rick Astley - Never Gonna Give You Up` Searches the song on youtube and shows the trackpicker


command.splay.soundcloud.syntax=%prefix%splay soundcloud <song*>
command.splay.soundcloud.description=Tries to load your input from soundcloud and shows a track picker
command.splay.soundcloud.help=Args:\
  \n%help.arg.song%\
  \nExamples:\
  \n- `%prefix%play soundcloud Miauw ik ben een kat` Searches the song on soundcloud and shows the trackpicker


command.forcerole.syntax=%prefix%forceRole <add | remove | list>
command.forcerole.description=Manages what roles are forced to a user, users that leave and rejoin get this role back


command.forcerole.add.syntax=%prefix%forceRole add <user*> <role*>
command.forcerole.add.description=Forces a role to the user
command.forcerole.add.success=Forced the **%role%** role upon **%user%**
command.forcerole.add.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.role%\
  \nExamples:\
  \n- `%prefix%forceRole add @ToxicMushroom cheater` Forces the cheater role upon ToxicMushroom


command.forcerole.remove.syntax=%prefix%forceRole remove <user*> <role*>
command.forcerole.remove.description=Unforces a role from the user
command.forcerole.remove.success=Unforced the **%role%** role from **%user%**
command.forcerole.remove.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.role%\
  \nExamples:\
  \n- `%prefix%forceRole remove @ToxicMushroom cheater` Unforces the cheater role from ToxicMushroom


command.forcerole.list.syntax=%prefix%forceRole list <user*>
command.forcerole.list.description=Shows the forced roles of a user
command.forcerole.list.title=Forced roles of **%user%**


command.purge.syntax=%prefix%purge <number*> [user*]
command.purge.description=Deletes an amount of messages, in the current message, newest to older
command.purge.success.one=Purged **%amount%** message
command.purge.success.user.one=Purged **%amount%** message of **%user%**
command.purge.success.more=Purged **%amount%** messages
command.purge.success.user.more=Purged **%amount%** messages of **%user%**
command.purge.help=Args:\
  \n%number%, represents the amount of messages that will be deleted\
  \nExamples:\
  \n- `%prefix%purge 10` Deletes the last sent 11 messages (11 is so it includes the command you sent)\
  \n- `%prefix%purge 10 @YingHamster` Checks the last sent 11 messages if they are from YingHamster and if so deletes them (11 is so it includes the command you sent)\
  \n- `%prefix%spurge 10` Checks the last sent 11 messages if they are from YingHamster and if so deletes them and gives no response\
  \n- `%prefix%spurge 10 @YingHamster` Checks the last sent 11 messages if they are from YingHamster and if so deletes them  and gives no response


command.setbirthday.syntax=%prefix%setBirthday [birthday* | null] 
command.setbirthday.description=Sets you birthday
command.setbirthday.show.set=Your birthday is set to (birtday: **%birthday%**, birtyear: **%birthyear%**)
command.setbirthday.show.unset=Your birthday is unset
command.setbirthday.set=Your birthday has been set to **%birthday%** 
command.setbirthday.unset=Your birthday has been unset
command.setbirthday.set.year=Your birthday has been set to **%birthday%** **%birthyear%**
command.setbirthday.help=Args:\
  \n%help.arg.birthday%\
  \nExamples:\
  \n- `%prefix%setBirthday 05/01/2000` Sets your birthday to five January in 2000\
  \n- `%prefix%setBirthday 05/01` Sets your birthday to five January\
  \n- `%prefix%setBirthday null` Unsets your birthday\
  \n- `%prefix%setBirthday` Shows your birthday


command.setmusicchannel.syntax=%prefix%setMusicChannel [voiceChannel* | null]
command.setmusicchannel.description=Sets the voiceChannel, this makes the bot know where to play the streamUrl
command.setmusicchannel.show.set=The music channel is set to **%channel%**
command.setmusicchannel.show.unset=The music channel is unset
command.setmusicchannel.set.success=The music channel has been set to **%channel%**
command.setmusicchannel.unset.success=The music channel has been unset
command.setmusicchannel.help=Args:\
  \n%help.arg.voicechannel%\
  \nExamples:\
  \n- `%prefix%setMusicChannel 344081173212823553` Sets the music channel to 🎶 Music channel 🔊\
  \n- `%prefix%setMusicChannel null` Unsets the music channel\
  \n- `%prefix%setMusicChannel` Shows the music channel


command.setstreamurl.syntax=%prefix%setStreamUrl [url* | null]
command.setstreamurl.description=Sets the streamUrl, this makes the bot know what to play in the music channel
command.setstreamurl.show.set=The stream url is set to **%url%**
command.setstreamurl.show.unset=The stream url is unset
command.setstreamurl.set=The stream url has been set to **%arg%**
command.setstreamurl.unset=The stream url has been unset
command.setstreamurl.help=Args:\
  \n%help.arg.url%, url must link to an audio file or stream\
  \nExamples:\
  \n- `%prefix%setStreamUrl https://www.youtube.com/watch?v=jhExvE5fvJw` Sets the streamUrl to this yt vic\
  \n- `%prefix%setStreamUrl https://www.twitch.tv/pondelinp` Sets the streamUrl to this twitch stream\
  \n- `%prefix%setStreamUrl null` Unsets the stream url\
  \n- `%prefix%setStreamUrl` Shows the stream url


command.settings.syntax=%prefix%settings
command.settings.description=Shows most of the settings of the bot
command.settings.title=Server settings


command.setslowmode.syntax=%prefix%setSlowMode [textChannel* | slowModeDelay*] [slowModeDelay*]
command.setslowmode.description=More precise control for the slowmode setting of channels
command.setslowmode.show.unset=The slowmode of **%channel%** is unset
command.setslowmode.show.set=The slowmode of **%channel%** is set to **%slowMode%s**
command.setslowmode.unset=The slowmode of **%channel%** has been unset
command.setslowmode.set=The slowmode of **%channel%** has been set to **%slowMode%s**
command.setslowmode.help=Args:\
  \n%help.arg.textchannel%\
  \n%help.arg.slowmodedelay%\
  \nExamples:\
  \n- `%prefix%setSlowMode` Shows the slowmode value in the channel this was sent in\
  \n- `%prefix%setSlowMode #general` Shows the slowmode value in #general\
  \n- `%prefix%setSlowMode 10` Sets the slowmode value in the channel this was sent in to 10 seconds\
  \n- `%prefix%setSlowMode #general 10` Sets the slowmode value in #general to 10 seconds


command.setembedcolor.syntax=%prefix%setEmbedColor [color* | null]
command.setembedcolor.description=Manages the embed color
command.setembedcolor.set=The embed color has been set to **%arg%**
command.setembedcolor.unset=The embed color has been unset
command.setembedcolor.show.set=The embed color is set to **%color%**
command.setembedcolor.show.unset=The embed color is unset
command.setembedcolor.help=Args:\
  \n%help.arg.color%\
  \nExamples:\
  \n- `%prefix%setEmbedColor` Shows the current embed color\
  \n- `%prefix%setEmbedColor #FFFFFF` Sets the embed color to white\
  \n- `%prefix%setEmbedColor null` Unsets the embed color


command.setprivateembedcolor.syntax=%prefix%setPrivateEmbedColor [color* | null]
command.setprivateembedcolor.description=Manages the private embed color
command.setprivateembedcolor.set=Your embed color has been set to **%arg%**
command.setprivateembedcolor.unset=Your embed color has been unset
command.setprivateembedcolor.show.set=Your embed color is set to **%color%**
command.setprivateembedcolor.show.unset=Your embed color is unset
command.setprivateembedcolor.help=Args:\
  \n%help.arg.color%\
  \nExamples:\
  \n- `%prefix%setPrivateEmbedColor` Shows your current embed color\
  \n- `%prefix%setPrivateEmbedColor #FFFFFF` Sets your embed color to white\
  \n- `%prefix%setPrivateEmbedColor null` Unsets your embed color


command.settimezone.syntax=%prefix%setTimeZone [timezone* | null]
command.settimezone.description=Manages the timezone of the guild
command.settimezone.set=The timezone has been set to **%zone%**
command.settimezone.unset=The timezone has been unset
command.settimezone.show.set=The timezone is set to **%zone%**
command.settimezone.show.unset=The timezone is unset
command.settimezone.help=Args:\
  \n%help.arg.timezone%\
  \nExamples:\
  \n- `%prefix%setTimeZone` Shows the current timezone of the guild\
  \n- `%prefix%setTimeZone Europe/Brussels` Sets the timezone of the guild to brussels\
  \n- `%prefix%setTimeZone null` Unsets the timezone of the guild


command.setprivatetimezone.syntax=%prefix%setPrivateTimeZone [timezone* | null]
command.setprivatetimezone.description=Manages the private timezone
command.setprivatetimezone.set=Your timezone has been set to **%zone%**
command.setprivatetimezone.unset=Your timezone has been unset
command.setprivatetimezone.show.set=Your timezone is set to **%zone%**
command.setprivatetimezone.show.unset=Your timezone is unset
command.setprivatetimezone.help=Args:\
  \n%help.arg.timezone%\
  \nExamples:\
  \n- `%prefix%setPrivateTimeZone` Shows your current timezone\
  \n- `%prefix%setPrivateTimeZone Europe/Brussels` Sets your timezone to brussels\
  \n- `%prefix%setPrivateTimeZone null` Unsets your timezone


command.pat.syntax=%prefix%pat [user*] [user*]
command.pat.description=Gives a virtual pat to users
command.pat.eb.description=**%author%** patted **%target%**
command.pat.eb.description.solo=**%author%** pats
command.pat.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%pat` You pat\
  \n- `%prefix%pat @someone` You pat someone\
  \n- `%prefix%pat @someone @someoneElse` someone pats someoneElse


command.shoot.syntax=%prefix%shoot [user*] [user*]
command.shoot.description=Shoot users
command.shoot.eb.description=**%author%** shot **%target%**
command.shoot.eb.description.solo=**%author%** shoots
command.shoot.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%shoot` You shoot\
  \n- `%prefix%shoot @someone` You shoot someone\
  \n- `%prefix%shoot @someone @someoneElse` someone shoots someoneElse


command.blush.syntax=%prefix%blush [user*] [user*]
command.blush.description=Blush by users
command.blush.eb.description=**%author%** made **%target%** blush
command.blush.eb.description.solo=**%author%** blushes
command.blush.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%blush` You blush\
  \n- `%prefix%blush @someone` You make someone blush\
  \n- `%prefix%blush @someone @someoneElse` someone makes someoneElse blush


command.cuddle.syntax=%prefix%cuddle [user*] [user*]
command.cuddle.description=Cuddle users
command.cuddle.eb.description=**%author%** cuddled **%target%**
command.cuddle.eb.description.solo=**%author%** cuddles
command.cuddle.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%cuddle` You cuddle\
  \n- `%prefix%cuddle @someone` You cuddle someone\
  \n- `%prefix%cuddle @someone @someoneElse` someone cuddles someoneElse


command.greet.syntax=%prefix%greet [user*] [user*]
command.greet.description=Greet users
command.greet.eb.description=**%author%** greeted **%target%**
command.greet.eb.description.solo=**%author%** greets
command.greet.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%greet` You cuddle\
  \n- `%prefix%greet @someone` You greet someone\
  \n- `%prefix%greet @someone @someoneElse` someone greets someoneElse


command.handholding.syntax=%prefix%handholding [user*] [user*]
command.handholding.description=Hold hands with users
command.handholding.eb.description=**%author%** held hands with **%target%**
command.handholding.eb.description.solo=**%author%** holds hands
command.handholding.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%handholding` You hold hands\
  \n- `%prefix%handholding @someone` You hold hands with someone\
  \n- `%prefix%handholding @someone @someoneElse` someone holds hands with someoneElse


command.highfive.syntax=%prefix%highfive [user*] [user*]
command.highfive.description=Highfive users
command.highfive.eb.description=**%author%** highfived **%target%**
command.highfive.eb.description.solo=**%author%** highfives
command.highfive.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%highfive` You highfive\
  \n- `%prefix%highfive @someone` You highfive someone\
  \n- `%prefix%highfive @someone @someoneElse` someone highfives someoneElse


command.hug.syntax=%prefix%hug [user*] [user*]
command.hug.description=Hug users
command.hug.eb.description=**%author%** hugged **%target%**
command.hug.eb.description.solo=**%author%** hugs
command.hug.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%hug` You hug\
  \n- `%prefix%hug @someone` You hug someone\
  \n- `%prefix%hug @someone @someoneElse` someone hugs someoneElse


command.kiss.syntax=%prefix%kiss [user*] [user*]
command.kiss.description=Kiss users
command.kiss.eb.description=**%author%** kissed **%target%**
command.kiss.eb.description.solo=**%author%** kisses
command.kiss.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%kiss` You kiss\
  \n- `%prefix%kiss @someone` You kiss someone\
  \n- `%prefix%kiss @someone @someoneElse` someone kisses someoneElse


command.lick.syntax=%prefix%lick [user*] [user*]
command.lick.description=Lick users
command.lick.eb.description=**%author%** licked **%target%**
command.lick.eb.description.solo=**%author%** licks
command.lick.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%lick` You lick\
  \n- `%prefix%lick @someone` You lick someone\
  \n- `%prefix%lick @someone @someoneElse` someone licks someoneElse


command.poke.syntax=%prefix%poke [user*] [user*]
command.poke.description=Poke users
command.poke.eb.description=**%author%** poked **%target%**
command.poke.eb.description.solo=**%author%** pokes
command.poke.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%poke` You poke\
  \n- `%prefix%poke @someone` You poke someone\
  \n- `%prefix%poke @someone @someoneElse` someone pokes someoneElse



command.punch.syntax=%prefix%punch [user*] [user*]
command.punch.description=Punch users
command.punch.eb.description=**%author%** punched **%target%**
command.punch.eb.description.solo=**%author%** punches
command.punch.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%punch` You punch\
  \n- `%prefix%punch @someone` You punch someone\
  \n- `%prefix%punch @someone @someoneElse` someone punches someoneElse


command.pout.syntax=%prefix%pout [user*] [user*]
command.pout.description=Pout by users
command.pout.eb.description=**%author%** pouts at **%target%**
command.pout.eb.description.solo=**%author%** pouts
command.pout.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%pout` You pout\
  \n- `%prefix%pout @someone` You pout at someone\
  \n- `%prefix%pout @someone @someoneElse` someone pouts at someoneElse

command.slap.syntax=%prefix%slap [user*] [user*]
command.slap.description=Slap users
command.slap.eb.description=**%author%** slapped **%target%**
command.slap.eb.description.solo=**%author%** slaps
command.slap.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%slap` You slap\
  \n- `%prefix%slap @someone` You slap someone\
  \n- `%prefix%slap @someone @someoneElse` someone slaps someoneElse


command.stare.syntax=%prefix%stare [user*] [user*]
command.stare.description=Stare at users
command.stare.eb.description=**%author%** stared at **%target%**
command.stare.eb.description.solo=**%author%** stares
command.stare.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%stare` You stare\
  \n- `%prefix%stare @someone` You stare at someone\
  \n- `%prefix%stare @someone @someoneElse` someone stares at someoneElse


command.thumbsup.syntax=%prefix%thumbsup [user*] [user*]
command.thumbsup.description=Thumbsup at users
command.thumbsup.eb.description=**%author%** points his thumb up at **%target%**
command.thumbsup.eb.description.solo=**%author%** points his thumbs up
command.thumbsup.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%thumbsup` You point your thumbs up\
  \n- `%prefix%thumbsup @someone` You point your thumbs up at someone\
  \n- `%prefix%thumbsup @someone @someoneElse` someone point their thumbs up at someoneElse


command.tickle.syntax=%prefix%tickle [user*] [user*]
command.tickle.description=Tickles users
command.tickle.eb.description=**%author%** tickled **%target%**
command.tickle.eb.description.solo=**%author%** tickles
command.tickle.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%tickle` You tickle\
  \n- `%prefix%tickle @someone` You tickle someone\
  \n- `%prefix%tickle @someone @someoneElse` someone tickles someoneElse


command.awoo.syntax=%prefix%awoo [user*] [user*]
command.awoo.description=Awoo's users
command.awoo.eb.description=**%author%** awoo'd at **%target%**
command.awoo.eb.description.solo=**%author%** awoo's
command.awoo.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%awoo` You awoo\
  \n- `%prefix%awoo @someone` You awoo someone\
  \n- `%prefix%awoo @someone @someoneElse` someone awoo at someoneElse


command.cry.syntax=%prefix%cry [user*] [user*]
command.cry.description=Make users cry
command.cry.eb.description=**%author%** cries at **%target%**
command.cry.eb.description.solo=**%author%** cry
command.cry.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%cry` You cry\
  \n- `%prefix%cry @someone` You cry at someone\
  \n- `%prefix%cry @someone @someoneElse` someone cries at someoneElse


command.bite.syntax=%prefix%bite [user*] [user*]
command.bite.description=Bites users
command.bite.eb.description=**%author%** bit **%target%**
command.bite.eb.description.solo=**%author%** bites
command.bite.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%bite` You bite\
  \n- `%prefix%bite @someone` You bite someone\
  \n- `%prefix%bite @someone @someoneElse` someone bites someoneElse


command.dab.syntax=%prefix%dab [user*] [user*]
command.dab.description=Pls don't
command.dab.eb.description=**%author%** dabbed on **%target%**
command.dab.eb.description.solo=**%author%** dabs
command.dab.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%dab` You dab\
  \n- `%prefix%dab @someone` You dab on someone\
  \n- `%prefix%dab @someone @someoneElse` someone dabs on someoneElse


command.lewd.syntax=%prefix%lewd [user*] [user*]
command.lewd.description=Lewd at users
command.lewd.eb.description=**%author%** lewded at **%target%**
command.lewd.eb.description.solo=**%author%** lewds
command.lewd.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%lewd` You lewd\
  \n- `%prefix%lewd @someone` You lewd at someone\
  \n- `%prefix%lewd @someone @someoneElse` someone lewds at someoneElse


command.shrug.syntax=%prefix%shrug [user*] [user*]
command.shrug.description=Shrug at users
command.shrug.eb.description=**%author%** shrugged at **%target%**
command.shrug.eb.description.solo=**%author%** shrugs
command.shrug.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%shrug` You shrug\
  \n- `%prefix%shrug @someone` You shrug at someone\
  \n- `%prefix%shrug @someone @someoneElse` someone shrugs at someoneElse


command.megumin.syntax=%prefix%megumin
command.megumin.description=EXPLOSION


command.neko.syntax=%prefix%neko
command.neko.description=Cat girls


command.owo.syntax=%prefix%owo
command.owo.description=OwO what's this


command.smug.syntax=%prefix%smug
command.smug.description=Smugs


command.aiwaifu.syntax=%prefix%aiWaifu
command.aiwaifu.description=Shows a random image generated by ai based on anime images
command.aiwaifu.title=Generated by TWDNE using StyleGAN 2


command.thinking.syntax=%prefix%thinking
command.thinking.description=Think


command.discordmeme.syntax=%prefix%discordMeme
command.discordmeme.description=Shows a meme about discord
command.discordmeme.title=Discord meme


command.donate.syntax=%prefix%donate
command.donate.description=Shows the patreon link
command.donate.response=View rewards for donating here: %url%


command.donate.linkguild.syntax=%prefix%linkGuild
command.donate.linkguild.description=Links the guild where this command was sent in to your account | 14 day delay
command.donate.linkguild.selected=Successfully selected **%guild%** as your premium server
command.donate.linkguild.oncooldown=Picking a new premium server is still on cooldown for: **%timeLeft%**


command.say.syntax=%prefix%say [fontSize: int*] <text: string*>
command.say.description=Makes the bot say something in a text bubble.
command.say.help=Args:\
  \n%help.arg.int%, fontSize: size of the font (default is 60)\
  \n%help.arg.string%, text: text for the bot to put inside the text bubble 


command.blurple.syntax=%prefix%blurple <user*, imageUrl*, attachment*> [colorOffset*] [gifQuality*] [state*] [fps*]
command.blurple.description=Adds a discordlike filter to your image/gif
command.blurple.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.coloroffset%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%\
  \nExamples:\
  \n- `%prefix%blurple` Shows a blurple image from your avatar\
  \n- `%prefix%blurple @someone` Shows a blurple image from the user's avatar\
  \n- `%prefix%blurple ~attachment~` Shows a blurple image from the attachment\
  \n- `%prefix%blurple http://random.cat/view/1286` Shows a blurple image from the url\
  \n- `%prefix%blurple http://random.cat/view/1286 128` Shows a blurple image from the url\
  \n- `%prefix%blurpleGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 128 1 true 20` Shows a blurple gif from the url with colorOffset of 128, best quality, repeating and 20 fps


command.flip.syntax=%prefix%flip <user*, imageUrl*, attachment*> [gifQuality*] [state*] [fps*]
command.flip.description=Flips your image/gif
command.flip.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%\
  \nExamples:\
  \n- `%prefix%flip` Flips your avatar\
  \n- `%prefix%flip @someone` Shows a flipped image from the user's avatar\
  \n- `%prefix%flip ~attachment~` Shows a flipped image from the attachment\
  \n- `%prefix%flip http://random.cat/view/1286` Shows a flipped image from the url\
  \n- `%prefix%flipGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 1 true 20` Shows a flipped gif from the url, best quality, repeating and 20 fps


command.mirror.syntax=%prefix%mirror <user*, imageUrl*, attachment*> [gifQuality*] [state*] [fps*]
command.mirror.description=Mirrors your image/gif
command.mirror.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%\
  \nExamples:\
  \n- `%prefix%mirror` Mirrors your avatar\
  \n- `%prefix%mirror @someone` Shows a mirrored image from the user's avatar\
  \n- `%prefix%mirror ~attachment~` Shows a mirrored image from the attachment\
  \n- `%prefix%mirror http://random.cat/view/1286` Shows a mirrored image from the url\
  \n- `%prefix%mirrorGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 1 true 20` Shows a mirrored gif from the url, best quality, repeating and 20 fps



command.greyscale.syntax=%prefix%greyscale <user*, imageUrl*, attachment*> [gifQuality*] [state*] [fps*]
command.greyscale.description=Greyscales your image/gif
command.greyscale.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%\
  \nExamples:\
  \n- `%prefix%greyscales` Greyscales your avatar\
  \n- `%prefix%greyscales @someone` Shows a greyscaled image from the user's avatar\
  \n- `%prefix%greyscales ~attachment~` Shows a greyscaled image from the attachment\
  \n- `%prefix%greyscales http://random.cat/view/1286` Shows a greyscaled image from the url\
  \n- `%prefix%greyscalesGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 1 true 20` Shows a greyscaled gif from the url, best quality, repeating and 20 fps



command.invert.syntax=%prefix%invert <user*, imageUrl*, ~attachment~> [gifQuality*] [state*] [fps*]
command.invert.description=Inverts your image/gif
command.invert.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.coloroffset%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%\
  \nExamples:\
  \n- `%prefix%invert` Shows an inverted image from your avatar\
  \n- `%prefix%invert @someone` Shows an inverted image from the user's avatar\
  \n- `%prefix%invert ~attachment~` Shows an inverted image from the attachment\
  \n- `%prefix%invert http://random.cat/view/1286` Shows an inverted image from the url\
  \n- `%prefix%invert http://random.cat/view/1286 128` Shows an inverted image from the url\
  \n- `%prefix%invertGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 128 1 true 20` Shows an inverted gif from the url with colorOffset of 128, best quality, repeating and 20 fps


command.spookify.syntax=%prefix%spookify <user*, imageUrl*, ~attachment~> [colorOffset*] [gifQuality*] [state*] [fps*]
command.spookify.description=Adds a spooky filter to your image/gif
command.spookify.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.coloroffset%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%\
  \nExamples:\
  \n- `%prefix%spookify` Shows a spooky image from your avatar\
  \n- `%prefix%spookify @someone` Shows a spooky image from the user's avatar\
  \n- `%prefix%spookify ~attachment~` Shows a spooky image from the attachment\
  \n- `%prefix%spookify http://random.cat/view/1286` Shows a spooky image from the url\
  \n- `%prefix%spookify http://random.cat/view/1286 128` Shows a spooky image from the url\
  \n- `%prefix%spookifyGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 128 1 true 20` Shows a spooky gif from the url with colorOffset of 128, best quality, repeating and 20 fps


command.pixelate.syntax=%prefix%pixelate <user*, imageUrl*, ~attachment~> [int*] [gifQuality*] [state*] [fps*]
command.pixelate.description=Adds a pixelated filter to your image/gif
command.pixelate.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.int%, signifies the amount of pixels to merge, between 1 and image height or width (depending which is larger)\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%\
  \nExamples:\
  \n- `%prefix%pixelate` Shows a pixelated image from your avatar\
  \n- `%prefix%pixelate @someone` Shows a pixelated image from the user's avatar\
  \n- `%prefix%pixelate ~attachment~` Shows a pixelated image from the attachment\
  \n- `%prefix%pixelate http://random.cat/view/1286` Shows a pixelated image from the url\
  \n- `%prefix%pixelate http://random.cat/view/1286 128` Shows a pixelated image from the url\
  \n- `%prefix%pixelateGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 5 1 true 20` Shows a pixelated gif from the url with 5 pixel merging, best quality (1), repeating and 20 fps


command.blur.syntax=%prefix%blur <user*, imageUrl*, ~attachment~> [int*] [gifQuality*] [state*] [fps*]
command.blur.description=Adds a blurred filter to your image/gif
command.blur.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.int%, signifies the amount of pixels to blur, between 1 and image height or width (depending which is larger)\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%\
  \nExamples:\
  \n- `%prefix%blur` Shows a blurred image from your avatar\
  \n- `%prefix%blur @someone` Shows a blurred image from the user's avatar\
  \n- `%prefix%blur ~attachment~` Shows a blurred image from the attachment\
  \n- `%prefix%blur http://random.cat/view/1286` Shows a blurred image from the url\
  \n- `%prefix%blur http://random.cat/view/1286 128` Shows a blurred image from the url\
  \n- `%prefix%blurGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 5 1 true 20` Shows a blurred gif from the url with 5 radius, best quality (1), repeating and 20 fps



command.sharpen.syntax=%prefix%sharpen <user*, imageUrl*, ~attachment~> [int*] [gifQuality*] [state*] [fps*]
command.sharpen.description=Adds a sharpening filter to your image/gif
command.sharpen.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.int%, signifies the strength of the filter, between 1 and image height or width (depending which is larger)\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%\
  \nExamples:\
  \n- `%prefix%sharpen` Shows a sharpening image from your avatar\
  \n- `%prefix%sharpen @someone` Shows a sharpening image from the user's avatar\
  \n- `%prefix%sharpen ~attachment~` Shows a sharpening image from the attachment\
  \n- `%prefix%sharpen http://random.cat/view/1286` Shows a sharpening image from the url\
  \n- `%prefix%sharpen http://random.cat/view/1286 128` Shows a sharpening image from the url\
  \n- `%prefix%sharpenGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 5 1 true 20` Shows a sharpening gif from the url with 5 strength, best quality (1), repeating and 20 fps


command.smoothpixelate.syntax=%prefix%smoothPixelate <user*, imageUrl*, ~attachment~> [int*] [gifQuality*] [state*] [fps*]
command.smoothpixelate.description=Adds a smoother pixelated filter to your image/gif
command.smoothpixelate.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.int%, signifies the amount of pixels to merge, between 1 and image height or width (depending which is larger)\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%\
  \nExamples:\
  \n- `%prefix%pixelate` Shows a pixelated image from your avatar\
  \n- `%prefix%pixelate @someone` Shows a pixelated image from the user's avatar\
  \n- `%prefix%pixelate ~attachment~` Shows a pixelated image from the attachment\
  \n- `%prefix%pixelate http://random.cat/view/1286` Shows a pixelated image from the url\
  \n- `%prefix%pixelate http://random.cat/view/1286 128` Shows a pixelated image from the url\
  \n- `%prefix%pixelateGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 5 1 true 20` Shows a pixelated gif from the url with 5 pixel merging, best quality (1), repeating and 20 fps


command.gifinfo.syntax=%prefix%gifInfo <user*, imageUrl*, ~attachment~> [gifFrame*]
command.gifinfo.description=Shows basic info about the provided gif
command.gifinfo.eb.gif.title=Gif Info
command.gifinfo.eb.gif.value=**Frames** %frames%\
  \n**Repeat amount** %loops%\
  \n**Width** %width%\
  \n**Height** %height%\
  \n**Global color table** %gctUrl%
command.gifinfo.eb.frame.title=Frame Info
command.gifinfo.eb.frame.value=**Delay until next frame** %delay%ms\
  \n**Background color** %bgColor%\
  \n**Transparent color** %transColor%\
  \n**Local color table** %lctUrl%
command.gifinfo.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.gifframe%\
  \n- `%prefix%gifInfo` Shows info of the gif from your avatar\
  \n- `%prefix%gifInfo @someone` Shows info of the gif from the user's avatar\
  \n- `%prefix%gifInfo ~attachment~` Shows info of the gif  from the attachment\
  \n- `%prefix%gifInfo http://random.cat/view/1286` Shows info of the gif from the url\
  \n- `%prefix%gifInfo http://random.cat/view/1286 2` Shows info about the second frame of the gif from the url


command.urban.syntax=%prefix%urban <word*>
command.urban.description=Searches the urbandictionary.com for a result
command.urban.meaning=**Meaning**
command.urban.example=**Example**
command.urban.notfound=**%arg%** was not found, check for spelling or there is no definition
command.urban.urbanoffline=Connection to urbandictionary.com could not be established
command.urban.help=Args:\
  \n%help.arg.word%\
  \nExamples:\
  \n- `%prefix%urban smh) Shows the meaning of smh (Shaking my head`


command.invite.syntax=%prefix%invite
command.invite.description=Shows invite links for the bot
command.invite.title=Invite %botName%
command.invite.desc=[click here](%urlWithPerm%) for invite with permissions (recommended)\
  \n[click here](%urlWithoutPerm%) for invite without permissions



command.cat.syntax=%prefix%cat
command.cat.description=Shows a cat
command.cat.title=Enjoy your 🐱 ~meow~


command.duck.syntax=%prefix%duck
command.duck.description=Shows a duck
command.duck.title=Enjoy your 🦆 ~quack~


command.dog.syntax=%prefix%dog
command.dog.description=Shows a dog
command.dog.title=Enjoy your 🐶 ~woof~


command.alpaca.syntax=%prefix%alpaca
command.alpaca.description=Shows an alpaca
command.alpaca.title=Enjoy your alpaca!


command.bird.syntax=%prefix%bird
command.bird.description=Shows a bird
command.bird.title=Enjoy your 🐦 ~tweet~!


command.koala.syntax=%prefix%koala
command.koala.description=Shows a koala
command.koala.title=Enjoy your 🐨!


command.fox.syntax=%prefix%fox
command.fox.description=Shows a fox
command.fox.title=Enjoy your 🦊!


command.panda.syntax=%prefix%panda
command.panda.description=Shows an panda
command.panda.title=Enjoy your 🐼!


command.nyancat.syntax=%prefix%nyancat
command.nyancat.description=Shows a nyancat
command.nyancat.title=Enjoy your <:normie_nyan:490976816018751503> ~meow!~


command.verify.syntax=%prefix%verify <member* | *>
command.verify.description=Command to manually verify members
command.verify.all=Verified **%count%** unverified members
command.verify.all.failures=Verified **%count%** unverified members\
  \nFailures: %failures%, (see logs)
command.verify.success=Verified %user%!
command.verify.failure=Failed to verify %user%, (see logs)
command.verify.help=Args:\
  \n%help.arg.member%\
  \nExamples:\
  \n- `%prefix%verify @someone` Verifies @someone\
  \n- `%prefix%verify *` Verifies all unverified members


logging.birthday=It's the birthday of %user% today! 🎊


logging.music.newtrack.title=New track playing
logging.music.newtrack.userfield.title=User
logging.music.newtrack.userIdfield.title=User ID
logging.music.newtrack.channelfield.title=VoiceChannel
logging.music.newtrack.channelIdfield.title=VoiceChannel ID

logging.music.streamurl.loadfailed.title=Loading stream url has failed
logging.music.streamurl.loadfailed.description=\nURL: %url%\
  \nCause: %cause%


logging.music.resumed.title=Track resume
logging.music.resumed.userfield.title=User
logging.music.resumed.userIdfield.title=User ID
logging.music.resumed.channelfield.title=VoiceChannel
logging.music.resumed.channelIdfield.title=VoiceChannel ID


logging.music.paused.title=Track paused
logging.music.paused.userfield.title=User
logging.music.paused.userIdfield.title=User ID
logging.music.paused.channelfield.title=VoiceChannel
logging.music.paused.channelIdfield.title=VoiceChannel ID


logging.music.exception.title=Track error
logging.music.exception.channelfield.title=VoiceChannel
logging.music.exception.channelIdfield.title=VoiceChannel ID
logging.music.exception.causefield.title=Cause


logging.removed.channel.title=Removed %type%Channel
logging.removed.channel.causepath.unknownid=Caused by an invalid id: `%causeArg%`, the channel might have been deleted
logging.removed.channel.causepath.nopermission=Caused by a missing permission, I'm missing the `%causeArg%` permission


logging.removed.logchannel.title=Removed %type% LogChannel
logging.removed.logchannel.causepath.unknownid=Caused by an invalid id: `%causeArg%`, the channel might have been deleted
logging.removed.logchannel.causepath.nopermission=Caused by a missing permission, I'm missing the `%causeArg%` permission


logging.removed.role.title=Removed %type% Role
logging.removed.role.causepath.unknownid=Caused by an invalid id: `%causeArg%`, the role might have been deleted
logging.removed.role.causepath.cannotinteract=Caused by hierarchy, I don't have permission to interact with the role or my highest role is lower then the role or is the same as the role
logging.removed.role.causepath.nopermission=Caused by a missing permission, I'm missing the `%causeArg%` permission


logging.removed.selfrole.title=Removed %emoteji% -> SelfRole
logging.removed.selfrole.causepath.unknownid=Caused by an invalid id: `%causeArg%`, the role might have been deleted
logging.removed.selfrole.causepath.cannotinteract=Caused by hierarchy, I don't have permission to interact with the role or my highest role is lower then the role or is the same as the role
logging.removed.selfrole.causepath.nopermission=Caused by a missing permission, I'm missing the `%causeArg%` permission


logging.verification.hitverificationthroughputlimit.title=Hit verification throughput limit
logging.verification.hitverificationthroughputlimit.description=\nUser: %user%\
  \nUser Id: %userId%


logging.verification.failedaddingrole.title=Failed adding role
logging.verification.failedaddingrole.description=\nUser: %user%\
  \nUser Id: %userId%\
  \nRole: %role%\
  \nRole Id: %roleId%


logging.verification.failed.title=Verification failed
logging.verification.failed.description=\nUser: %user%\
  \nUser Id: %userId%


logging.verification.verified.title=Verified by: %author%
logging.verification.verified.description=\nUser: %user%\
  \nUser Id: %userId%


logging.punishmentpoints.title=Violation of a chat filter
logging.punishmentpoints.description=\nChannel: %channel%\
  \nChannel Id: %channelId%\
  \n\
  \nMessage: %message%\
  \nMessage Id: %messageId%\
  \n\
  \nReason: %extra%\
  \nPunishment points received: %points%\
  \nMoment: %moment%
logging.punishmentpoints.description.extra.dm=Guild: %guild%\
  \nGuild Id: %guildId%\
  \n
logging.punishmentpoints.description.extra.lc=Target: %target%\
  \nTarget Id: %targetId%\
  \n
logging.punishmentpoints.description.extra.dmfailed=\nExtra: failed to send the notification in dms
logging.punishmentpoints.description.extra.openingpcfailed=\nExtra: failed to open a private message channel


logging.punishmentpoints.cause.mustnot.contain=Message can not contain: %word%
logging.punishmentpoints.cause.must.match=Message must match: %word%
logging.punishmentpoints.cause.contain.all=Message must contain all: %word%
logging.punishmentpoints.cause.contain.any=Message must contain any: %word%


message.punishment.kick.description=\nKick Author: %kickAuthor%\
  \nKick Author Id: %kickAuthorId%\
  \nKicked: %kicked%\
  \nKicked Id: %kickedId%\
  \nReason: %reason%\
  \nTime of kick: %moment%
message.punishment.kick.author=Kicked by %user% %spaces%
message.punishmenthistory.kick=```INI\
  \n[Kick Author] %kickAuthor%\
  \n[Kick Author Id] %kickAuthorId%\
  \n[Reason] %reason%\
  \n[Time of kick] %moment%```


message.punishment.warn.description=\nWarn Author: %warnAuthor%\
  \nWarn Author Id: %warnAuthorId%\
  \nWarned: %warned%\
  \nWarned Id: %warnedId%\
  \nReason: %reason%\
  \nTime of warn: %moment%\
  \nCase Id: %warnId%
message.punishment.warn.author=Warned by %user% %spaces%
message.punishmenthistory.warn=```INI\
  \n[Warn Author] %warnAuthor%\
  \n[Warn Author Id] %warnAuthorId%\
  \n[Reason] %reason%\
  \n[Time of warn] %moment%\
  \n[Case Id]: %warnId%```


message.punishment.mute.description=\nMute Author: %muteAuthor%\
  \nMute Author Id: %muteAuthorId%\
  \nMuted: %muted%\
  \nMutedId: %mutedId%\
  \nReason: %reason%\
  \nDuration: %duration%\
  \nStart of mute: %startTime%\
  \nEnd of mute: %endTime%\
  \nCase Id: %muteId%
message.punishment.mute.author=Muted by %user% %spaces%
message.punishmenthistory.mute=```INI\
  \n[Mute Author] %muteAuthor%\
  \n[Mute Author Id] %muteAuthorId%\
  \n[Unmute Author] %unmuteAuthor%\
  \n[Unmute Author Id] %unmuteAuthorId%\
  \n[Reason] %muteReason%\
  \n[Unmute Reason] %unmuteReason%\
  \n[Duration] %duration%\
  \n[Start of mute] %startTime%\
  \n[End of mute] %endTime%\
  \n[Active] %active%\
  \n[Case Id]: %muteId%```


message.punishment.unmute.description=\nMute Author: %muteAuthor%\
  \nMute Author Id: %muteAuthorId%\
  \nUnmute Author Id: %unMuteAuthorId%\
  \nUnmuted: %unMuted%\
  \nUnmutedId: %unMutedId%\
  \nMute Reason: %muteReason%\
  \nUnmute Reason: %unmuteReason%\
  \nDuration: %duration%\
  \nStart of mute: %startTime%\
  \nEnd of mute: %endTime%\
  \nCase Id: %muteId%
message.punishment.unmute.author=Unmuted by %user% %spaces%


message.punishment.ban.description=\nBan Author: %banAuthor%\
  \nBan Author Id: %banAuthorId%\
  \nBanned: %banned%\
  \nBannedId: %bannedId%\
  \nReason: %reason%\
  \nDuration: %duration%\
  \nStart of ban: %startTime%\
  \nEnd of ban: %endTime%\
  \nCase Id: %banId%
message.punishment.ban.author=Banned by %user% %spaces%
message.punishmenthistory.ban=```INI\
  \n[Ban Author] %banAuthor%\
  \n[Ban Author Id] %banAuthorId%\
  \n[Unban Author] %unbanAuthor%\
  \n[Unban Author Id] %unbanAuthorId%\
  \n[Reason] %banReason%\
  \n[Unban Reason] %unbanReason%\
  \n[Duration] %duration%\
  \n[Start of ban] %startTime%\
  \n[End of ban] %endTime%\
  \n[Active] %active%\
  \n[Case Id]: %banId%```


message.punishment.softban.description=\nSoftBan Author: %softBanAuthor%\
  \nSoftBan Author Id: %softBanAuthorId%\
  \nSoftBanned: %softBanned%\
  \nSoftBanned Id: %softBannedId%\
  \nReason: %reason%\
  \nMoment: %moment%\
  \nCase Id: %softBanId%
message.punishment.softban.author=SoftBanned by %user% %spaces%
message.punishmenthistory.softban=```INI\
  \n[SoftBan Author] %softBanAuthor%\
  \n[SoftBan Author Id] %softBanAuthorId%\
  \n[Reason] %reason%\
  \n[Moment] %moment%\
  \n[Case Id]: %softBanId%```


message.punishment.unban.description=\nBan Author: %banAuthor%\
  \nBan Author Id: %banAuthorId%\
  \nUnban Author Id: %unBanAuthorId%\
  \nUnbanned: %unBanned%\
  \nUnbannedId: %unBannedId%\
  \nBan Reason: %banReason%\
  \nUnban Reason: %unbanReason%\
  \nDuration: %duration%\
  \nStart of ban: %startTime%\
  \nEnd of ban: %endTime%\
  \nCase Id: %banId%
message.punishment.unban.author=Unbanned by %user% %spaces%


message.punishment.extra.dm=\nExtra: Target had dm's disabled
message.punishment.extra.bot=\nExtra: Target is a bot
message.punishment.extra.failed=\nFAILURE: %cause%
message.punishment.description.nlc=\nGuild: %guildName%\
  \nGuild Id: %guildId%


command.softban.syntax=%prefix%softBan <user*> [delDays*] [softBanReason*]
command.softban.description=Bans and unbans the user to clear the past x days of messages
command.softban.cannotban=I cannot ban **%user%** because this user has an equal or higher role position relative to me
command.softban.success=SoftBanned **%user%** for: ```%reason%```
command.softban.failure=SoftBanning **%user%** failed, cause: ```%cause%```
command.softban.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.deldays%\
  \n%help.arg.softbanreason%\
  \nExamples:\
  \n- `%prefix%softban @someone` Bans @someone with 7 days of message clear with reason "/", then unbans @someone\
  \n- `%prefix%softban @someone 2` Bans @someone with 7 days of message clear with reason "/", then unbans @someone\
  \n- `%prefix%softban @someone 1 advertising` Bans @someone with 1 day of message clear with reason "advertising", then unbans @someone


command.setverificationcode.syntax=%prefix%setVerificationCode [verificationcode* | null]
command.setverificationcode.description=Sets or shows the verification code
command.setverificationcode.show.unset=The verification code is unset
command.setverificationcode.show.set=The verification code is set to:\n%code%
command.setverificationcode.unset=The verification code has been unset
command.setverificationcode.set=The verification code has been set to:\n%arg%
command.setverificationcode.help=Args:\
  \n%help.arg.verificationcode%\
  \nExamples:\
  \n- `%prefix%setVerificationCode` Shows the current verification code\
  \n- `%prefix%setVerificationCode passwordsuperhidden` Sets the verification code to "passwordsuperhidden"\
  \n- `%prefix%setVerificationCode null` Unsets the verification code


command.setmaxuserverificationflowrate.syntax=%prefix%setMaxUserVerificationFlowRate [users/m* | null]
command.setmaxuserverificationflowrate.description=Sets or shows the verification code
command.setmaxuserverificationflowrate.show.unset=The MaxUserVerificationFlowRate is unset
command.setmaxuserverificationflowrate.show.set=The MaxUserVerificationFlowRate is set to **%rate%** users/hour
command.setmaxuserverificationflowrate.unset=The MaxUserVerificationFlowRate has been unset
command.setmaxuserverificationflowrate.set=The MaxUserVerificationFlowRate has been set to **%arg%** users/hour
command.setmaxuserverificationflowrate.help=Args:\
  \n%help.arg.number%, 0 - some very big number\
  \nExamples:\
  \n- `%prefix%setMaxUserVerificationFlowRate` Shows the current MaxUserVerificationFlowRate\
  \n- `%prefix%setMaxUserVerificationFlowRate 1` Allows 1 user to verify themselves per minute\
  \n- `%prefix%setMaxUserVerificationFlowRate null` Allows unlimited users to verify themselves per minute


command.setverificationtype.syntax=%prefix%setVerificationType [verificationType* | null]
command.setverificationtype.description=Sets or shows the verification type
command.setverificationtype.show.unset=The verification type is unset
command.setverificationtype.show.set=The verification type is set to:\n%type%
command.setverificationtype.unset=The verification type has been unset
command.setverificationtype.set=The verification type has been set to:\n%arg%
command.setverificationtype.help=Args:\
  \n%help.arg.verificationtype%\
  \nExamples:\
  \n- `%prefix%setVerificationType` Shows the current verification type\
  \n- `%prefix%setVerificationType 1` Allows 1 user to verify themselves per minute\
  \n- `%prefix%setVerificationType null` Allows unlimited users to verify themselves per minute


command.setverificationemoteji.syntax=%prefix%setVerificationEmoteji [emote* | emoji* | null]
command.setverificationemoteji.description=Sets or shows the verification code
command.setverificationemoteji.show.unset=The verification emoteji is unset
command.setverificationemoteji.show.set=The verification emoteji is set to:\n%emoteji%
command.setverificationemoteji.unset=The verification emoteji has been unset
command.setverificationemoteji.set.emote=The verification emoteji has been set to emote(name: **%emoteName%** | id: **%emoteId%**)
command.setverificationemoteji.set.emoji=The verification emoteji has been set to %arg%
command.setverificationemoteji.help=Args:\
  \n%help.arg.emote%\
  \n%help.arg.emoji%\
  \nExamples:\
  \n- `%prefix%setVerificationEmoteji` Shows the current verification emoteji\
  \n- `%prefix%setVerificationEmoteji :omegalul:` Sets the emoteji to the omegalul emote\
  \n- `%prefix%setVerificationEmoteji 😂` Sets the emoteji to the 😂 emoji


command.selfrole.syntax=%prefix%selfRole <add, remove, list, sendGroupAuto, group, setMode, sendGroup>
command.selfrole.description=Main command for managing selfroles


command.selfrole.setmode.syntax=%prefix%selfRole setMode <selfRoleMode*>
command.selfrole.setmode.description=Manages the mode of selfroles
command.selfrole.setmode.show=The selfrole mode is currently set to **%mode%**
command.selfrole.setmode.set=The selfrole mode has been set to **%mode%**
command.selfrole.setmode.help=Args:\
  \n%help.arg.selfrolemode%\
  \nExamples:\
  \n- `%prefix%filterGroup setMode auto` sets the mode to automatic\
  \n- `%prefix%filterGroup setMode manual` Sets the mode to manual


command.selfrole.add.syntax=%prefix%selfRole add <selfRoleGroup*> <emote* | emoji*> <role*>
command.selfrole.add.success=Added the selfrole **%emoteji%** -> **%role%** to **%group%**
command.selfrole.add.description=Adds a selfrole
command.selfrole.add.help=Args:\
  \n%help.arg.selfrolegroup%\
  \n%help.arg.emote%\
  \n%help.arg.emoji%\
  \n%help.arg.role%\
  \nExamples:\
  \n- `%prefix%selfRole add :omegalul: @epicrole` Adds a selfrole entry for @epicrole connected to :omegalul:\
  \n- `%prefix%selfRole 😂 @funny` Adds a selfrole entry for @funny connected to 😂


command.selfrole.remove.syntax=%prefix%selfRole remove <selfRoleGroup*> <emote* | emoji*> [role*]
command.selfrole.remove.description=Removes a selfrole
command.selfrole.remove.success=Removed the selfrole **%emoteName%** -> **%role%** from **%group%*$
command.selfrole.remove.help=Args:\
  \n%help.arg.selfrolegroup%\
  \n%help.arg.emote%\
  \n%help.arg.emoji%\
  \n%help.arg.role%\
  \nExamples:\
  \n- `%prefix%selfRole remove :omegalul:` Removes the selfrole entry for :omegalul:\
  \n- `%prefix%selfRole remove 😂` Removes the selfrole entry for 😂


command.selfrole.removeat.syntax=%prefix%selfRole removeAt <selfRoleGroup*> <index: int*>
command.selfrole.removeat.description=Removes a selfrole at the specified index
command.selfrole.removeat.success=Removed the selfrole at position **%index%**: **%emoteji%** -> **%role%** from **%group%*$
command.selfrole.removeat.help=Args:\
  \n%help.arg.selfrolegroup%\
  \n%help.arg.int%, from 1 to the size of the selfrole list, use `%prefix%selfRole list` to see indexes\
  \nExamples:\
  \n- `%prefix%selfRole remove 1` Removes the selfrole entry at index 1


command.selfrole.group.syntax=%prefix%selfRole group <add, remove, list, messageIds, setChannel, setSelfRoleAble, setEnabled, changeName>
command.selfrole.group.description=Main command for managing selfrole groups
command.selfrole.group.exists=There already exists a selfrole with **%arg%** as name, use `%prefix%selfRole group list` to see the used ones


command.selfrole.group.add.syntax=%prefix%selfRole group add <name: string*>
command.selfrole.group.add.description=Adds a selfrole group
command.selfrole.group.add.added=Added **%name%** as selfrole group
command.selfrole.group.add.help=Args:\
  \n%help.arg.string%, name: name for the selfrole group (0 to 64 characters)\
  \nExamples:\
  \n- `%prefix%selfRole add languages` Adds the selfrole group named languages


command.selfrole.group.remove.syntax=%prefix%selfRole group remove <selfRoleGroup*>
command.selfrole.group.remove.description=Removes a selfrole group
command.selfrole.group.remove.removed=Removed **%name%** from selfrole groups
command.selfrole.group.remove.help=Args:\
  \n%help.arg.selfrolegroup%\
  \nExamples:\
  \n- `%prefix%selfRole remove languages` Removes the selfrole group named languages


command.selfrole.group.setchannel.syntax=%prefix%selfRole group setChannel <selfRoleGroup*> <textChannel*>
command.selfrole.group.setchannel.description=Sets the textchannel for a selfrole group
command.selfrole.group.setchannel.unset=Set the channel for the **%group%** selfrole group to **%channel%**
command.selfrole.group.setchannel.set=Set the channel for the **%group%** selfrole group to **%channel%**
command.selfrole.group.setchannel.help=Args:\
  \n%help.arg.selfrolegroup%\
  \nExamples:\
  \n- `%prefix%selfRole remove languages` Removes the selfrole group named languages


command.selfrole.group.messageids.add.syntax=%prefix%selfRole group messageIds add <selfRoleGroup*> <messageId: long*>
command.selfrole.group.messageids.add.description=Adds a messageId to the list of messageIds of a selfrole group
command.selfrole.group.messageids.add.removed=Added **%messageId%** to the messageIds of the **%group%** selfrole group
command.selfrole.group.messageids.add.help=Args:\
  \n%help.arg.selfrolegroup%\
  \n%help.arg.long%, messageId must be between an existing one pls\
  \nExamples:\
  \n- `%prefix%selfRole group messageIds add languages 462917197556088833` Adds the messageId 462917197556088833 to the messageIds of the selfrole group named languages


command.selfrole.group.messageids.remove.syntax=%prefix%selfRole group messageIds remove <selfRoleGroup*> <messageId: long*>
command.selfrole.group.messageids.remove.description=Removes a messageId from the list of messageIds of a selfrole group
command.selfrole.group.messageids.remove.removed=Removed **%messageId%** from the messageIds of the **%group%** selfrole group
command.selfrole.group.messageids.remove.help=Args:\
  \n%help.arg.selfrolegroup%\
  \n%help.arg.long%, messageId must be between an existing one pls\
  \nExamples:\
  \n- `%prefix%selfRole group messageIds remove languages 462917197556088833` Removes the messageId 462917197556088833 from the messageIds of the selfrole group named languages


command.selfrole.group.messageids.removeat.syntax=%prefix%selfRole group messageIds removeAt <selfRoleGroup*> <index: int*>
command.selfrole.group.messageids.removeat.description=Removes a messageId from the list of messageIds of a selfrole group
command.selfrole.group.messageids.removeat.removed=Removed **%messageId%** at index **%index%** from the messageIds of the **%group%** selfrole group
command.selfrole.group.messageids.removeat.help=Args:\
  \n%help.arg.selfrolegroup%\
  \n%help.arg.int%, index must be between 1 and the total amount of messageIds, use `%prefix%selfRole group messageIds list <selfRoleGroup*>` to see indexes\
  \nExamples:\
  \n- `%prefix%selfRole group messageIds removeAt languages 1` Removes the messageId from the messageIds of the selfrole group named languages


command.selfrole.group.messageids.clear.syntax=%prefix%selfRole group messageIds clear <selfRoleGroup*>
command.selfrole.group.messageids.clear.description=Clears the list of messageIds of a selfrole group
command.selfrole.group.messageids.clear.cleared=Cleared the messageIds of the **%group%** selfrole group
command.selfrole.group.messageids.clear.help=Args:\
  \n%help.arg.selfrolegroup%\
  \nExamples:\
  \n- `%prefix%selfRole group messageIds clear languages` Clears the messageIds of the selfrole group named languages


command.selfrole.group.messageids.list.syntax=%prefix%selfRole group messageIds list <selfRoleGroup*>
command.selfrole.group.messageids.list.description=Shows the list of messageIds of a selfrole group
command.selfrole.group.messageids.list.title=List of messageIds of the **%group%** selfrole group
command.selfrole.group.messageids.list.empty=There are no messageIds set for the **%group%** selfrole group
command.selfrole.group.messageids.list.help=Args:\
  \n%help.arg.selfrolegroup%\
  \nExamples:\
  \n- `%prefix%selfRole add languages` Adds the selfrole group named languages


command.selfrole.group.changename.syntax=%prefix%selfRole group remove <name: string*>
command.selfrole.group.changename.description=Changes the name of an existing selfrole group
command.selfrole.group.changename.updated=Changed the name of the **%oldName%** selfrole group to **%newName%**
command.selfrole.group.changename.help=Args:\
  \n%help.arg.string%, name: name for the selfrole group (0 to 64 characters)\
  \nExamples:\
  \n- `%prefix%selfRole add languages` Adds the selfrole group named languages


command.selfrole.group.setenabled.syntax=%prefix%selfRole group setEnabled <selfRoleGroup*> <state: boolean*>
command.selfrole.group.setenabled.description=Sets the enabled state of a selfrole group
command.selfrole.group.setenabled.show.true=The selfrole group **%group%** is currently enabled
command.selfrole.group.setenabled.show.false=The selfrole group **%group%** is currently disabled
command.selfrole.group.setenabled.set.true=The selfrole group **%group%** has been enabled
command.selfrole.group.setenabled.set.false=The selfrole group **%group%** has been disabled
command.selfrole.group.setenabled.help=Args:\
  \n%help.arg.selfrolegroup%\
  \n%help.arg.boolean%\
  \nExamples:\
  \n- `%prefix%selfRole group setEnabled languages true` Enables the selfrole group named languages


command.selfrole.group.setselfroleable.syntax=%prefix%selfRole group setSelfRoleable <selfRoleGroup*> <state: boolean*>
command.selfrole.group.setselfroleable.description=Sets the selfroleable state of a selfrole group
command.selfrole.group.setselfroleable.show.true=The selfrole group **%group%** is currently selfroleable
command.selfrole.group.setselfroleable.show.false=The selfrole group **%group%** is currently not selfroleable
command.selfrole.group.setselfroleable.set.true=The selfrole group **%group%** has been set to be selfroleable
command.selfrole.group.setselfroleable.set.false=The selfrole group **%group%** has been set to be not selfroleable
command.selfrole.group.setselfroleable.help=Args:\
  \n%help.arg.selfrolegroup%\
  \n%help.arg.boolean%\
  \nExamples:\
  \n- `%prefix%selfRole group setSelfRoleable languages true` Makes the selfrole group named languages able to be self assigned using `%prefix%`


command.selfrole.list.syntax=%prefix%selfRole list
command.selfrole.list.description=Shows the list of selfroles
command.selfrole.list.title=List of SelfRoles
command.selfrole.list.empty=There are no selfroles set


command.customcommand.syntax=%prefix%customCommand <list, add, remove, response, select, aliases, setChance, setPrefixState, setDescription>
command.customcommand.description=Main command for managing custom commands
command.customcommand.help=Extra:\
  \n- Custom commands support variables in their response, these special words will be replaced when executed. `%prefix%helpVar list`\
  \nExamples:\
  \n- `%prefix%customCommand response setContent Hi, {username} thx for executing this command!` -> The cc will replace the {username} with the executor's username


command.customcommand.list.syntax=%prefix%customCommand list
command.customcommand.list.description=Shows the list of customCommands
command.customcommand.list.title=List of custom commands:


command.customcommand.add.syntax=%prefix%customCommand add <ccname*> > <ccresponse*>
command.customcommand.add.description=Adds a custom command
command.customcommand.add.success=Added the custom command (name: **%ccName%** | id: **%id%**) with content:\n%content%
command.customcommand.add.limit=You've reached the custom command limit of **%limit%**
command.customcommand.add.help=Args:\
  \n%help.arg.ccname%\
  \n%help.arg.ccresponse%\
  \nExamples:\
  \n- `%prefix%customCommand add blub > :fish:` Adds a customCommand with blub as invoke and :fish: as reply


command.customcommand.remove.syntax=%prefix%customCommand remove <ccId*>
command.customcommand.remove.description=Removes a custom command
command.customcommand.remove.failed=The custom command with id **%id%** is unknwon, use `%prefix%cc list`
command.customcommand.remove.success=Removed the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.remove.help=Args:\
  \n%help.arg.ccid%\
  \nExamples:\
  \n- `%prefix%customCommand remove 25` Removes the customCommand with id 5


command.customcommand.select.syntax=%prefix%customCommand select <ccId*>
command.customcommand.select.description=Selects a custom command
command.customcommand.select.selected=You've selected the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.select.help=Args:\
  \n%help.arg.ccid%\
  \nExamples:\
  \n- `%prefix%customCommand select 25` Selects the customCommand with id 5


command.customcommand.aliases.syntax=%prefix%customCommand aliases <add, remove, list>
command.customcommand.aliases.description=Main command for managing aliases for the selected custom command


command.customcommand.aliases.add.syntax=%prefix%customCommand aliases add <ccalias*>
command.customcommand.aliases.add.description=Adds an alias to the selected custom command
command.customcommand.aliases.add.success=Added **%arg%** as alias for the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.aliases.add.help=Args:\
  \n%help.arg.ccalias%\
  \nExamples:\
  \n- `%prefix%customCommand aliases add synonym` Adds "synonym" as another way to execute the selected custom cummmand.


command.customcommand.aliases.remove.syntax=%prefix%customCommand aliases remove <ccAliasIndex*>
command.customcommand.aliases.remove.description=Removes the alias at the given position from the selected custom command
command.customcommand.aliases.remove.success=Removed alias (**%arg%** | position: **%position%**) from the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.aliases.remove.help=Args:\
  \n%help.arg.ccaliasindex%\
  \nExamples:\
  \n- `%prefix%customCommand aliases remove 1` Removes the alias with index 1 of the selected cc


command.customcommand.aliases.list.syntax=%prefix%customCommand aliases list
command.customcommand.aliases.list.description=Shows the list of aliases of the selected custom command
command.customcommand.aliases.list.title=List of aliases for custom command (name: **%ccName%** | id: **%id%**):


command.customcommand.setdescription.syntax=%prefix%customCommand setDescription <ccDescription* | null>
command.customcommand.setdescription.description=Sets a description for the selected custom command
command.customcommand.setdescription.set=I've set the description of the custom command (name: **%ccName%** | id: **%id%**) to:\n%arg%
command.customcommand.setdescription.unset=I've unset the description of the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.setdescription.help=Args:\
  \n%help.arg.ccdescription%\
  \nExamples:\
  \n- `%prefix%customCommand setDescription Shows you a website link` Sets the selected custom command's description to "Shows you a website link"\
  \n- `%prefix%customCommand setDescription null` Unsets the selected custom command's description


command.customcommand.setchance.syntax=%prefix%customCommand setChance <ccChance*>
command.customcommand.setchance.description=Sets the chance of execution for the selected custom command
command.customcommand.setchance.success=I've set the chance of the custom command (name: **%ccName%** | id: **%id%**) to:\n%arg%
command.customcommand.setchance.help=Args:\
  \n%help.arg.ccchance%\
  \nExamples:\
  \n- `%prefix%customCommand setChance 200` Sets the selected custom command's chance to 200


command.customcommand.setprefixstate.syntax=%prefix%customCommand setPrefixState <ccPrefixState>
command.customcommand.setprefixstate.description=Turns the prefix on or of for the selected custom command
command.customcommand.setprefixstate.enabled=I've enabled the prefix state for the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.setprefixstate.disabled=I've disabled the prefix state for the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.setprefixstate.help=Args:\
  \n%help.arg.ccchance%\
  \nExamples:\
  \n- `%prefix%customCommand setprefixstate enabled` Enables the selected custom command's prefix state\
  \n- `%prefix%customCommand setprefixstate disabled` Disables the selected custom command's prefix state


command.customcommand.response.syntax=%prefix%customCommand response <setContent | embed | attachments | view>
command.customcommand.response.description=Manages the selected custom command's response


command.customcommand.response.view.syntax=%prefix%customCommand response view
command.customcommand.response.view.description=Shows you a preview of the response of the selected custom command


command.customcommand.response.setcontent.syntax=%prefix%customCommand response setContent [ccContent* | null]
command.customcommand.response.setcontent.description=Sets the text content of the selected custom command
command.customcommand.response.setcontent.help=Args:\
  \n%help.arg.cccontent%\
  \nExamples:\
  \n- `%prefix%customCommand response setContent 🐟` Sets the custom command's text response to "🐟"\
  \n- `%prefix%customCommand response setContent null` Unsets the custom command's text response


command.customcommand.response.embed.syntax=%prefix%customCommand response embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.customcommand.response.embed.description=Sets the embed content of the selected custom command


command.customcommand.response.embed.clear.syntax=%prefix%customCommand response embed clear
command.customcommand.response.embed.clear.description=Clears the embed content of the selected custom command


command.customcommand.response.embed.setdescription.syntax=%prefix%customCommand response embed setDescription [embedDescription* | null]
command.customcommand.response.embed.setdescription.description=Sets the embed description of the selected custom command
command.customcommand.response.embed.setdescription.help=Args:\
  \n%help.arg.embeddescription%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setDescription 🐟` Sets the custom command's text response to "🐟"\
  \n- `%prefix%customCommand response embed setDescription null` Unsets the custom command's text response


command.customcommand.response.embed.setcolor.syntax=%prefix%customCommand response embed setColor [color* | null]
command.customcommand.response.embed.setcolor.description=Sets the embed color of the selected custom command
command.customcommand.response.embed.setcolor.help=Args:\
  \n%help.arg.color%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setColor #FFFFFF` Sets the custom command's embed color white\
  \n- `%prefix%customCommand response embed setColor null` Unsets the custom command's embed color


command.customcommand.response.embed.settitle.syntax=%prefix%customCommand response embed setTitle [embedTitle* | null]
command.customcommand.response.embed.settitle.description=Sets the embed title of the selected custom command
command.customcommand.response.embed.settitle.help=Args:\
  \n%help.arg.embedtitle%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setTitle Fish` Sets the custom command's embed title to "Fish"\
  \n- `%prefix%customCommand response embed setTitle null` Unsets the custom command's embed title


command.customcommand.response.embed.settitleurl.syntax=%prefix%customCommand response embed setTitleUrl [embedTitleUrl* | null]
command.customcommand.response.embed.settitleurl.description=Sets the embed title url of the selected custom command
command.customcommand.response.embed.settitleurl.help=Args:\
  \n%help.arg.embedtitleurl%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setTitleUrl https://melijn.com/` Sets the custom command's embed title's url to "https://melijn.com/"\
  \n- `%prefix%customCommand response embed setTitleUrl null` Unsets the custom command's embed title's url


command.customcommand.response.embed.setauthor.syntax=%prefix%customCommand response embed setAuthor [embedAuthor* | null]
command.customcommand.response.embed.setauthor.description=Sets the embed author of the selected custom command
command.customcommand.response.embed.setauthor.help=Args:\
  \n%help.arg.embedauthor%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setAuthor` Shows the custom command's embed author\
  \n- `%prefix%customCommand response embed setAuthor {username}` Sets the custom command's embed author to "{username}"\
  \n- `%prefix%customCommand response embed setAuthor null` Unsets the custom command's embed author


command.customcommand.response.embed.setauthoricon.syntax=%prefix%customCommand response embed setAuthorIcon [url* | attachment* | user* | null]
command.customcommand.response.embed.setauthoricon.description=Sets the embed author icon of the selected custom command
command.customcommand.response.embed.setauthoricon.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setAuthorIcon` Shows the custom command's embed author\
  \n- `%prefix%customCommand response embed setAuthorIcon ~attachment~` Sets the custom command's embed author icon to the attachment\
  \n- `%prefix%customCommand response embed setAuthorIcon @user` Sets the custom command's embed author icon to @user's avatar\
  \n- `%prefix%customCommand response embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the custom command's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%customCommand response embed setAuthorIcon null` Unsets the custom command's embed author


command.customcommand.response.embed.setauthorurl.syntax=%prefix%customCommand response embed setAuthorUrl [url* | null]
command.customcommand.response.embed.setauthorurl.description=Sets the embed author url of the selected custom command
command.customcommand.response.embed.setauthorurl.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setAuthorUrl` Shows the custom command's embed author url\
  \n- `%prefix%customCommand response embed setAuthorUrl https://google.com/` Sets the custom command's embed author url to "https://google.com/"\
  \n- `%prefix%customCommand response embed setAuthorUrl null` Unsets the custom command's embed author


command.customcommand.response.embed.setthumbnail.syntax=%prefix%customCommand response embed setThumbnail [url* | attachment | user* | null]
command.customcommand.response.embed.setthumbnail.description=Sets the embed thumbnail of the selected custom command
command.customcommand.response.embed.setthumbnail.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setThumbnail` Shows the custom command's embed thumbnail\
  \n- `%prefix%customCommand response embed setThumbnail ~attachment~` Sets the custom command's embed thumbnail to the attachment\
  \n- `%prefix%customCommand response embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the custom command's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%customCommand response embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%customCommand response embed setThumbnail null` Unsets the custom command's embed thumbnail


command.customcommand.response.embed.setimage.syntax=%prefix%customCommand response embed setImage [url* | attachment | user* | null]
command.customcommand.response.embed.setimage.description=Sets the embed image of the selected custom command
command.customcommand.response.embed.setimage.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setImage` Shows the custom command's embed image\
  \n- `%prefix%customCommand response embed setImage ~attachment~` Sets the custom command's embed image to the attachment\
  \n- `%prefix%customCommand response embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the custom command's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%customCommand response embed setImage @user` Sets the custom command's embed image to @user's avatar\
  \n- `%prefix%customCommand response embed setImage null` Unsets the custom command's embed image


command.customcommand.response.embed.setfooter.syntax=%prefix%customCommand response embed setFooter [footerText* | null]
command.customcommand.response.embed.setfooter.description=Sets the embed footer of the selected custom command
command.customcommand.response.embed.setfooter.help=Args:\
  \n%help.arg.footertext%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setFooter` Shows the custom command's embed footer\
  \n- `%prefix%customCommand response embed setFooter epic text` Sets the custom command's embed footer "epic text"\
  \n- `%prefix%customCommand response embed setFooter null` Unsets the custom command's embed image


command.customcommand.response.embed.setfootericon.syntax=%prefix%customCommand response embed setFooterIcon [url* | attachment* | user* | null]
command.customcommand.response.embed.setfootericon.description=Sets the embed footer icon of the selected custom command
command.customcommand.response.embed.setfootericon.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%customCommand response embed setFooterIcon` Shows the custom command's embed footer icon\
  \n- `%prefix%customCommand response embed setFooterIcon ~attachment~` Sets the custom command's embed footer icon to the attachment\
  \n- `%prefix%customCommand response embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the custom command's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%customCommand response embed setFooterIcon @user` Sets the custom command's embed footer icon to @user's avatar\
  \n- `%prefix%customCommand response embed setFooterIcon null` Unsets the custom command's embed footer icon


command.customcommand.response.embed.field.syntax=%prefix%customCommand response embed field <add | remove | list | setTitle | setValue | setInline>
command.customcommand.response.embed.field.description=Manages the embed fields of the selected custom command


command.customcommand.response.embed.field.add.syntax=%prefix%customCommand response embed field add <fieldTitle> > <fieldValue>
command.customcommand.response.embed.field.add.description=Adds an embed field to the selected custom command
command.customcommand.response.embed.field.add.help=Args:\
  \n%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%customCommand response embed field add user > ToxicMushroom` Adds a field entry to the selected custom command's embed response with "user" as title and "ToxicMushroom as value


command.customcommand.response.embed.field.remove.syntax=%prefix%customCommand response embed field remove <fieldIndex>
command.customcommand.response.embed.field.remove.description=Removes an embed field of the selected custom command
command.customcommand.response.embed.field.remove.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%customCommand response embed field list`\
  \nExamples:\
  \n- `%prefix%customCommand response embed field remove 1` Removes the selected custom command's embed response's embed field with index 1


command.customcommand.response.embed.field.list.syntax=%prefix%customCommand response embed field list
command.customcommand.response.embed.field.list.description=Lists the embed fields of the selected custom command


command.customcommand.response.embed.field.settitle.syntax=%prefix%customCommand response embed field setTitle <fieldIndex> <fieldTitle>
command.customcommand.response.embed.field.settitle.description=Sets the embed field title of the selected custom command
command.customcommand.response.embed.field.settitle.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%customCommand response embed field list`\
  \n%help.arg.fieldtitle%\
  \nExamples:\
  \n- `%prefix%customCommand response embed field setTitle 1 User` Sets the selected custom command's embed response's embed field title with index 1 to "User"


command.customcommand.response.embed.field.setvalue.syntax=%prefix%customCommand response embed field setValue <fieldIndex> <fieldValue>
command.customcommand.response.embed.field.setvalue.description=Sets the embed field value of the selected custom command
command.customcommand.response.embed.field.setvalue.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%customCommand response embed field list`\
  \n%help.arg.fieldtitle%\
  \nExamples:\
  \n- `%prefix%customCommand response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"


command.customcommand.response.embed.field.setinline.syntax=%prefix%customCommand response embed field setInline <fieldIndex> <state>
command.customcommand.response.embed.field.setinline.description=Sets the embed field inline state of the selected custom command
command.customcommand.response.embed.field.setinline.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%customCommand response embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline\
  \nExamples:\
  \n- `%prefix%customCommand response embed field setInline 1 true` Sets the selected custom command's embed response's embed field to be inlined\
  \n- `%prefix%customCommand response embed field setInline 1 false` Sets the selected custom command's embed response's embed field\nnot\nto\nbe inlined


command.customcommand.response.attachments.syntax=%prefix%customCommand response attachments <add | remove | list>
command.customcommand.response.attachments.description=Manages the attachments of the selected custom command


command.customcommand.response.attachments.add.syntax=%prefix%customCommand response attachments add <url*> <fileName*>
command.customcommand.response.attachments.add.description=Adds attachments to the selected custom command
command.customcommand.response.attachments.add.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.filename%\
  \nExamples:\
  \n- `%prefix%customCommand response attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the selected custom command with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.customcommand.response.attachments.remove.syntax=%prefix%customCommand response attachments remove <url*>
command.customcommand.response.attachments.remove.description=Removes attachments from the selected custom command
command.customcommand.response.attachments.remove.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%customCommand response attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the selected custom command with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.customcommand.response.attachments.list.syntax=%prefix%customCommand response attachments list
command.customcommand.response.attachments.list.description=Lists the attachments from the selected custom command


message.content.unset=Content of **%type%** has been unset
message.content.set=Content of **%type%** has been set to:\n%arg%
message.content.show.unset=Content of **%type%** is unset
message.content.show.set=Content of **%type%** is set to:\n%content%


message.embed.description.unset=Embed description of **%type%** has been unset
message.embed.description.set=Embed description of **%type%** has been set to:\n%arg%
message.embed.description.show.unset=Embed description of **%type%** is unset
message.embed.description.show.set=Embed description of **%type%** is set to:\n%description%


message.embed.clear=Removed all embed information from the **%type%**


message.attachments.list.title=Attachments of **type**:
message.attachments.list.empty=The **%type%** has no attachments
message.attachments.add=Added attachment to **%type%**, attachment:\n(url: **%attachment%** | name: **%url%**)
message.attachments.remove.notanattachment=That url **%arg%** is not an attachmentUrl, use `>cc response attachments list` to see what urls are valid
message.attachments.remove.success=The attachment **%file%** has been removed from the **%type%**


message.embed.color.unset=Embed color of **%type%** has been unset
message.embed.color.set=Embed color of **%type%** has been set to %arg%
message.embed.color.show.unset=Embed color of **%type%** is unset
message.embed.color.show.set=Embed color of **%type%** is set to %color%


message.embed.title.unset=Embed title of **%type%** has been unset
message.embed.title.set=Embed title of **%type%** has been set to %arg%
message.embed.title.show.unset=Embed title of **%type%** is unset
message.embed.title.show.set=Embed title of **%type%** is set to %title%


message.embed.titleurl.unset=Embed title url of **%type%** has been unset
message.embed.titleurl.set=Embed title url of **%type%** has been set to %arg%
message.embed.titleurl.show.unset=Embed title url of **%type%** is unset
message.embed.titleurl.show.set=Embed title url of **%type%** is set to %titleUrl%


message.embed.authorurl.unset=Embed author url of **%type%** has been unset
message.embed.authorurl.set=Embed author url of **%type%** has been set to %arg%
message.embed.authorurl.show.unset=Embed author url of **%type%** is unset
message.embed.authorurl.show.set=Embed author url of **%type%** is set to %authorUrl%


message.embed.authoricon.unset=Embed author icon of **%type%** has been unset
message.embed.authoricon.set=Embed author icon of **%type%** has been set to %arg%
message.embed.authoricon.show.unset=Embed author icon of **%type%** is unset
message.embed.authoricon.show.set=Embed author icon of **%type%** is set to %authorIcon%


message.embed.authorname.unset=Embed author of **%type%** has been unset
message.embed.authorname.set=Embed author of **%type%** has been set to %arg%
message.embed.authorname.show.unset=Embed author of **%type%** is unset
message.embed.authorname.show.set=Embed author of **%type%** is set to %author%


message.embed.thumbnail.unset=Embed thumbnail of **%type%** has been unset
message.embed.thumbnail.set=Embed thumbnail of **%type%** has been set to %arg%
message.embed.thumbnail.show.unset=Embed thumbnail of **%type%** is unset
message.embed.thumbnail.show.set=Embed thumbnail of **%type%** is set to %thumbnail%


message.embed.image.unset=Embed image of **%type%** has been unset
message.embed.image.set=Embed image of **%type%** has been set to %arg%
message.embed.image.show.unset=Embed image of **%type%** is unset
message.embed.image.show.set=Embed image of **%type%** is set to %image%


message.embed.footer.unset=Embed footer of **%type%** has been unset
message.embed.footer.set=Embed footer of **%type%** has been set to %arg%
message.embed.footer.show.unset=Embed footer of **%type%** is unset
message.embed.footer.show.set=Embed footer of **%type%** is set to %footer%


message.embed.footericon.unset=Embed footer icon of **%type%** has been unset
message.embed.footericon.set=Embed footer icon of **%type%** has been set to %arg%
message.embed.footericon.show.unset=Embed footer icon of **%type%** is unset
message.embed.footericon.show.set=Embed footer icon of **%type%** is set to %footerIcon%


message.embed.field.add=Embed field added to **%type%** with the following attributes:```LDIF\
  \ntitle: %title%\
  \nvalue: %value%\
  \ninline: %inline%```


message.embed.fieldtitle.set=Embed field at index **%index%** for **%type%** has had it's title changed to:\
  \n%title%
message.embed.fieldvalue.set=Embed field at index **%index%** for **%type%** has had it's value changed to:\
  \n%title%
message.embed.fieldinline.set=Embed field at index **%index%** for **%type%** has had it's inline property changed to **%inline%**
message.embed.field.removed=Embed field at index **%index%** has been removed for **%type%**
message.embed.field.list.empty=The **%type%**'s embed has no fields
message.embed.field.list.title=Fields of **%type%**:


listener.message.deletion.log.title=Message deleted in %channel%
listener.message.deletion.log.description=```LDIF\
  \nSender: %messageAuthor%\
  \nSender Id: %messageAuthorId%\
  \nContent: %messageContent%\
  \nDeleter Id: %messageDeleterId%\
  \nSent Time: %sentTime%\
  \nDeleted Time: %deletedTime%```
listener.message.deletion.log.self.description=```LDIF\
  \nSender: %messageAuthor%\
  \nSender Id: %messageAuthorId%\
  \nContent: %messageContent%\
  \nSent Time: %sentTime%\
  \nDeleted Time: %deletedTime%```
listener.message.deletion.log.footer=Deleted by: %user%
listener.message.deletion.log.purged.footer=Purged by: %user%


listener.message.update.log.title=Message updated in %channel%
listener.message.update.log.description=```LDIF\
  \nUser: %user%\
  \nUser Id: %userId%\
  \nOld Content: %oldContent%\
  \nNew Content: %newContent%\
  \nSent Time: %sentTime%\
  \nEdited Time: %editedTime%```**[Message](%link%)**


listener.message.attachment.log.title=Attachment sent in %channel%
listener.message.attachment.log.description=```LDIF\
  \nUser Id: %userId%\
  \nMessage Id: %messageId%\
  \nAttachment: %attachmentUrl%\
  \nMoment: %moment%```**[Attachment](%attachmentUrl%) • [Message](%messageUrl%)**
listener.message.attachment.log.footer=Attached by: %user%


listener.message.reaction.log.title=Reaction added in %channel%
listener.message.reaction.emote.log.description=```LDIF\
  \nUser Id: %userId%\
  \nMessage Id: %messageId%\
  \nEmote: %emoteName%\
  \nEmote Id: %emoteId%\
  \nMoment: %moment%```**[Message](%messageUrl%) • [Emote](%emoteUrl%)**
listener.message.reaction.emoji.log.description=```LDIF\
  \nUser Id: %userId%\
  \nMessage Id: %messageId%\
  \nEmoji: %emoteName%\
  \nMoment: %moment%```**[Message](%messageUrl%) • [Emoji](%emoteUrl%)**
listener.message.reaction.log.footer=Reacted by: %user%


command.setchannel.syntax=%prefix%setChannel <channelType*> <textChannel* | null>
command.setchannel.description=Sets or shows a channel by it's type
command.setchannel.set=The %channelType%Channel has been set to **%channel%**
command.setchannel.unset=The %channelType%Channel has been unset
command.setchannel.show.set=The %channelType%Channel is set to **%channel%**
command.setchannel.show.unset=The %channelType%Channel is unset
command.setchannel.help=Args:\
  \n%help.arg.channeltype%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%setChannel JOIN #welcome` Sets the JoinChannel to #welcome\
  \n- `%prefix%setChannel JOIN null` Unsets the JoinChannel\
  \n- `%prefix%setChannel JOIN` Shows the JoinChannel value


command.history.syntax=%prefix%history <all | punishmentType* | findByCaseId> <user*>
command.history.description=Shows you the history of punishments of a user
command.history.nohistory=**%user%** has no %typeList% history
command.history.help=Args:\
  \n%help.arg.punishmenttype%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%history ban @ToxicMushroom` Shows the ban history of @ToxicMushroom\
  \n- `%prefix%history all @ToxicMushroom` Shows all history of @ToxicMushroom\
  \n- `%prefix%history findByCaseId AAGxC5eETAw` Shows the punishment case that is linked to `AAGxC5eETAw`


command.kick.syntax=%prefix%kick <user*> [reason*]
command.kick.description=Kicks the target user, dms them information of the kick
command.kick.success=Kicked **%user%**, reason: ```%reason%```
command.kick.failure=Failed to kick **%user%**, cause: ```%cause%```
command.kick.help=Args:\
  \n%help.arg.reason%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%kick @ToxicMushroom You did bad thing` Kicks @ToxicMushroom with reason "You did a bad thing"


command.warn.syntax=%prefix%warns <user*> [reason*]
command.warn.description=Warnss the target user, dms them information of the warn
command.warn.success=Warned **%user%**, reason: ```%reason%```
command.warn.help=Args:\
  \n%help.arg.reason%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%warn @ToxicMushroom You did bad thing` Warns @ToxicMushroom with reason "You did a bad thing"


command.unban.syntax=%prefix%unban <user*> [reason*]
command.unban.description=Unbans the target user, dms them information of the unban
command.unban.success=Unbanned **%user%**, reason: ```%reason%```
command.unban.failure=Failed to unban **%user%**, cause: ```%cause%```
command.unban.notbanned=**%user%** is not banned
command.unban.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.reason%\
  \nExamples:\
  \n- `%prefix%unban @ToxicMushroom wrong user` Unbans @ToxicMushroom with reason "wrong user"


command.ban.syntax=%prefix%ban <user*> [reason*]
command.ban.description=Bans the target user, dms them information of the ban
command.ban.cannotban=I cannot ban **%user%** because this user has an equal or higher role position relative to me
command.ban.success=Banned **%user%** for: ```%reason%```
command.ban.success.updated=Banned **%user%** for: ```%reason%```\
  \n*Active ban has been updated*
command.ban.failure=Banning **%user%** failed, cause: ```%cause%```
command.ban.help=Args:\
  \n%help.arg.reason%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%ban @ToxicMushroom You did bad thing` Bans @ToxicMushroom with reason "You did bad thing"


command.tempban.syntax=%prefix%tempBan <user*> <timeDuration*> [greater then sign (>)] [reason*]
command.tempban.description=Temporarily bans the target user, sends them a report of the reason, times, ect.. of the bans
command.tempban.cannotban=I cannot tempban **%user%** because this user has an equal or higher role position relative to me
command.tempban.success=Temporarily banned **%user%** until %endTime% for: ```%reason%```
command.tempban.success.updated=Temporarily banned **%user%** until %endTime% for: ```%reason%```\
  \n*Active ban has been updated*
command.tempban.failure=Banning **%user%** failed, cause: ```%cause%```
command.tempban.help=Args:\
  \n%help.arg.reason%\
  \n%help.arg.user%\
  \n%help.arg.timeduration%\
  \nExamples:\
  \n- `%prefix%tempBan @ToxicMushroom 1w 5d 5h > You did bad thing` Bans @ToxicMushroom with reason "You did bad thing" and unbans after 293 hours


message.banning=Banning...
message.banning.failed=Banning failed


message.softbanning=Soft banning...
message.softbanning.failed=Soft banning failed


message.warning=Warning..
message.warning.failed=Warning failed..


message.muting=Muting...
message.muting.failed=Muting failed
message.creatingmuterole=I'm creating a mute role since none was set..
message.creatingmuterole.failed=Creating a mute role failed: ```%cause%```


command.unmute.syntax=%prefix%unmute <user*> [reason*]
command.unmute.description=Unmutes the target user, dms them information of the unmute
command.unmute.success=Unmuted **%user%**, reason: ```%reason%```
command.unmute.failure=Failed to unmute **%user%**, cause: ```%cause%```
command.unmute.nomuterole=Please configure the muterole first using `%prefix%setRole mute <role*>`
command.unmute.notmuted=**%user%** is not muted
command.unmute.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.reason%\
  \nExamples:\
  \n- `%prefix%unmute @ToxicMushroom Wrong user` Unmutes @ToxicMushroom with reason "Wrong user"


command.mute.syntax=%prefix%mute <user*> [reason*]
command.mute.description=Mutes the target user, dms them information of the mute
command.mute.cannotmute=I cannot mute **%user%** because this user has an equal or higher role position relative to me
command.mute.success=Muted **%user%** for: ```%reason%```
command.mute.success.updated=Muted **%user%** for: ```%reason%```\
  \n*Active mute has been updated*
command.mute.failure=Muting **%user%** failed, cause: ```%cause%```
command.mute.help=Args:\
  \n%help.arg.reason%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%mute @ToxicMushroom You did bad thing` Mutes @ToxicMushroom with reason "You did bad thing"


command.tempmute.syntax=%prefix%tempMute <user*> <timeDuration*> [greater then sign (>)] [reason*]
command.tempmute.description=Temporarily mutes the target user, sends them a report of the reason, times, ect.. of the mute
command.tempmute.cannotmute=I cannot tempmute **%user%** because this user has an equal or higher role position relative to me
command.tempmute.success=Temporarily muted **%user%** until %endTime% for: ```%reason%```
command.tempmute.success.updated=Temporarily muted **%user%** until %endTime% for: ```%reason%```\
  \n*Active mute has been updated*
command.tempmute.failure=Muteing **%user%** failed, cause: ```%cause%```
command.tempmute.help=Args:\
  \n%help.arg.reason%\
  \n%help.arg.user%\
  \n%help.arg.timeduration%\
  \nExamples:\
  \n- `%prefix%tempMute @ToxicMushroom 1d 5h > You did bad thing` Mutes @ToxicMushroom with reason "You did bad thing" and unmutes after 29 hours


command.setlogchannel.syntax=%prefix%setLogChannel <logChannelTypeNode*> [textChannel*]
command.setlogchannel.description=Sets log channels or shows them when only the logChannelTypeNode is provided
command.setlogchannel.show.set.single=The **%logChannelType%** log channel is set to **%channel%**
command.setlogchannel.show.unset.single=The **%logChannelType%** log channel is unset
command.setlogchannel.show.multiple=Settings of the **%channelCount%** log channels that match `%logChannelTypeNode%`
command.setlogchannel.set.multiple=The **%channelCount%** log channels that match `%logChannelTypeNode%` have been set to **%channel%**
command.setlogchannel.set.single=The **%logChannelType%** log channel has been set to **%channel%**
command.setlogchannel.unset.multiple=The **%channelCount%** log channels that match `%logChannelTypeNode%` have been unset
command.setlogchannel.unset.single=The **%logChannelType%** log channel has been unset
command.setlogchannel.help=Args:\
  \n%help.arg.logchanneltypenode%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%setLogChannel all #logs` Sets all log channels to #logs\
  \n- `%prefix%setLogChannel ban #bans` Sets tempban, permban and unban log channel to #bans\
  \n- `%prefix%setLogChannel tempban #tempbans` Sets tempban log channel to #tempbans


command.setrole.syntax=%prefix%setRole <roleType*> [role*]
command.setrole.description=Sets a role or shows the configured role when only the roleType is provided
command.setrole.show.set=The %roleType%Role is set to **%role%**
command.setrole.show.unset=The %roleType%Role is unset
command.setrole.set=The %roleType%Role has been set to **%role%**
command.setrole.unset=The %roleType%Role has been unset
command.setrole.help=Args:\
  \n%help.arg.roletype%\
  \n%help.arg.role%\
  \nExamples:\
  \n- `%prefix%setRole mute @muted` Sets the mute role to @muted


command.prefixes.description=Command for managing server specific prefixes
command.prefixes.syntax=%prefix%prefixes <add, remove, view, removeAt>
command.prefixes.help=You can have up to %prefixAmount% prefixes


command.prefixes.add.syntax=%prefix%prefixes add <prefix*>
command.prefixes.add.description=Adds a prefix for executing commands
command.prefixes.add.response1=Added %prefix% as prefix
command.prefixes.add.limit=You've hit the **%limit%** prefixes limit
command.prefixes.add.help=Args:\
  \n%help.arg.prefix%\
  \nExamples:\
  \n- `%prefix%prefixes add alexa` Adds the prefix "alexa", alexa play despacito (sry for ded meme)


command.prefixes.remove.syntax=%prefix%prefixes remove <prefix*>
command.prefixes.remove.description=Removes a prefix for executing commands
command.prefixes.remove.response1=Removed %prefix% as prefix
command.prefixes.remove.help=Args:\
  \n%help.arg.prefix%\
  \nExamples:\
  \n- `%prefix%prefixes remove alexa` Removes the prefix "alexa"


command.prefixes.removeat.syntax=%prefix%prefixes removeAt <index: int*>
command.prefixes.removeat.description=Removes the prefixes at the specified index from this guild
command.prefixes.removeat.removed=Removed %prefix% from the prefixes in this guild
command.prefixes.removeat.help=Args:\
  \n%help.arg.int%, index: 0 until total amount of prefixes, index can be viewed with `%prefix%prefixes list`\
  \nExamples:\
  \n- `%prefix%prefixes removeAt 0` Removes the prefix at index 0


command.prefixes.list.syntax=%prefix%prefixes list
command.prefixes.list.description=Shows a list of prefixes
command.prefixes.list.response1.title=List of prefixes


command.privateprefixes.description=Command for managing user specific prefixes
command.privateprefixes.syntax=%prefix%privatePrefixes <add, remove, view, removeAt>


command.privateprefixes.add.syntax=%prefix%privatePrefixes add <prefix*>
command.privateprefixes.add.response1=Added %prefix% to your private prefixes
command.privateprefixes.add.limit=You've hit the **%limit%** private prefixes limit
command.privateprefixes.add.help=Args:\
  \n%help.arg.prefix%\
  \nExamples:\
  \n- `%prefix%privatePrefixes add alexa` Adds the prefix "alexa", alexa play despacito (sry for ded meme)


command.privateprefixes.remove.syntax=%prefix%privatePrefixes remove <prefix*>
command.privateprefixes.remove.response1=Removed %prefix% from your private prefixes
command.privateprefixes.remove.help=Args:\
  \n%help.arg.prefix%\
  \nExamples:\
  \n- `%prefix%privatePrefixes remove alexa` Adds the prefix "alexa", alexa play despacito (sry for ded meme)


command.privateprefixes.removeat.syntax=%prefix%privatePrefixes removeAt <index: int*>
command.privateprefixes.removeat.description=Removes the prefix at the specified index from your prefixes
command.privateprefixes.removeat.removed=Removed %prefix% from your prefixes
command.privateprefixes.removeat.help=Args:\
  \n%help.arg.int%, index: 0 until total amount of prefixes, index can be viewed with `%prefix%privatePrefixes list`\
  \nExamples:\
  \n- `%prefix%prefixes removeAt 0` Removes the prefix at index 0 from your prefixes


command.privateprefixes.list.syntax=%prefix%privatePrefixes list
command.privateprefixes.list.response1.title=List of private prefixes


command.setcooldown.description=Command for managing command cooldowns
command.setcooldown.syntax=%prefix%setCooldown <global, channel, info>


command.setcooldown.global.syntax=%prefix%setCooldown global <commandNode*> [milliseconds* | null]
command.setcooldown.global.description=Sets the cooldown of commands
command.setcooldown.global.response1=Set the cooldown for **%commandCount%** command matching `%commandNode%` to **%cooldown%ms**
command.setcooldown.global.response1.multiple=Set the cooldown for **%commandCount%** commands matching `%commandNode%` to **%cooldown%ms**
command.setcooldown.global.help=Args:\
  \n%help.arg.commandnode%\
  \n%help.arg.milliseconds%\
  \nExamples:\
  \n- `%prefix%setCooldown global all 1000` Adds a 1 second cooldown for all commands\
  \n- `%prefix%setCooldown global cat 5000` Adds a 5 second cooldown for the usage of the cat command\
  \n- `%prefix%setCooldown global MUSIC 5000` Adds a 5 second cooldown for all music commands\
  \n- `%prefix%setCooldown global MUSIC null` Removes the cooldown for all music commands\
  \n- `%prefix%setCooldown global MUSIC 0` Removes the cooldown for all music commands\
  \n- `%prefix%setCooldown global MUSIC` Shows the cooldown for all music commands with a cooldown


command.setcooldown.channel.syntax=%prefix%setCooldown channel <textChannel*> <commandNode*> [milliseconds* | null]
command.setcooldown.channel.description=Sets the cooldown of commands for specific channels, NOTE: overrides global command cooldowns
command.setcooldown.channel.response1=Set the cooldown for **%commandCount%** command matching `%commandNode%` to **%cooldown%ms** in **%channel%**
command.setcooldown.channel.response1.multiple=Set the cooldown for **%commandCount%** commands matching `%commandNode%` to **%cooldown%ms** in **%channel%**
command.setcooldown.channel.help=Args:\
  \n%help.arg.textchannel%\
  \n%help.arg.commandnode%\
  \n%help.arg.milliseconds%\
  \nExamples:\
  \n- `%prefix%setCooldown channel #commands all 1000` Adds a 1 second cooldown for all commands in #commands\
  \n- `%prefix%setCooldown channel #commands cat 5000` Adds a 5 second cooldown for the usage of the cat command in #commands\
  \n- `%prefix%setCooldown channel #music MUSIC 5000` Adds a 5 second cooldown for all music commands in #music\
  \n- `%prefix%setCooldown channel #music MUSIC null` Removes the cooldown for all music commands in #music\
  \n- `%prefix%setCooldown channel #music MUSIC 0` Removes the cooldown for all music commands in #music\
  \n- `%prefix%setCooldown channel #music MUSIC` Shows the cooldown for all music commands with a cooldown in #music


command.setcooldown.info.syntax=%prefix%setCooldown info [textChannel*]
command.setcooldown.info.description=Shows cooldown info of commands
command.setcooldown.info.response1.title=List of cooldowns in **%channel%**
command.setcooldown.info.response2.title=List of global cooldowns
command.setcooldown.info.help=Args:\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%setCooldown info` Shows cooldown info of all commands with cooldown\
  \n- `%prefix%setCooldown info #commands` Shows cooldown info of all commands with cooldown override in #commands


command.setcommandstate.description=Command for managing command states
command.setcommandstate.syntax=%prefix%setCommandState <global, channel, info>


command.setcommandstate.global.syntax=%prefix%setCommandState global <commandNode*> [commandState*]
command.setcommandstate.global.description=Sets the state of commands
command.setcommandstate.global.response1=Set **%commandCount%** command which matches `%commandNode%` to **%state%**
command.setcommandstate.global.response1.multiple=Set **%commandCount%** commands which match `%commandNode%` to **%state%**
command.setcommandstate.global.help=Args:\
  \n%help.arg.commandnode%\
  \n%help.arg.commandstate%\
  \nExamples:\
  \n- `%prefix%setCommandState global all disabled` Sets the command state of all commands to diabled\
  \n- `%prefix%setCommandState global MUSIC enabled`  Sets the command state of all music commands to enabled\
  \n- `%prefix%setCommandState global MUSIC` Shows the command state of all music commands


command.setcommandstate.channel.syntax=%prefix%setCommandState channel <channel*> <commandNode*> [channelCommandState* | null]
command.setcommandstate.channel.description=Sets the state of commands for specific channels, NOTE: overrides global command states
command.setcommandstate.channel.response1=Set **%commandCount%** command in **%channel%** which matches `%commandNode%` to **%state%**
command.setcommandstate.channel.response1.multiple=Set **%commandCount%** commands in **%channel%** which match `%commandNode%` to **%state%**
command.setcommandstate.channel.help=Args:\
  \n%help.arg.textchannel%\
  \n%help.arg.commandnode%\
  \n%help.arg.channelcommandstate%\
  \nExamples:\
  \n- `%prefix%setCommandState channel #commands all disabled` Sets the command state of all commands to diabled  in #commands\
  \n- `%prefix%setCommandState channel #commands cat default` Sets the command state the cat command to default in #commands \
  \n- `%prefix%setCommandState channel #music MUSIC enabled`  Sets the command state of all music commands to enabled in #music\
  \n- `%prefix%setCommandState channel #music MUSIC` Shows the command state of all music commands in #music


command.setcommandstate.info.syntax=%prefix%setCommandState info [textChannel*]
command.setcommandstate.info.description=Shows state info of commands
command.setcommandstate.info.globaldisabled.response1=Disabled commands
command.setcommandstate.info.channelstate.response1=Command states in **%channel%**
command.setcommandstate.info.help=Args:\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%setCommandState info` Shows state info of all commands with state\
  \n- `%prefix%setCommandState info #commands` Shows setCommandState info of all commands with setCommandState override in #commands


command.raw.syntax=%prefix%raw <text*>
command.raw.description=Sends you the raw text of the input
command.raw.help=Args:\
  \n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%raw hi` bot will reply with ```hi```\
  \n- `%prefix%raw :joy:` bot will reply with ```😅```\
  \n- `%prefix%raw @ToxicMushroom` bot will reply with ```<@231459866630291459>```


command.t2e.syntax=%prefix%t2e <text*>
command.t2e.description=Converts text to spaced emojis
command.t2e.help=Args:\
  \n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%t2e hi` bot will reply with ```🇭 🇮```\
  \n- `%prefix%t2e 12 and 3` bot will reply with ```1️⃣ 2️⃣  🇦 🇳 🇩  3️⃣```


command.t2e.nospace.syntax=%prefix%t2e noSpace <text*>
command.t2e.nospace.description=Converts text to emojis
command.t2e.nospace.help=Args:\
\n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%t2e hi` bot will reply with ```🇭🇮```\
  \n- `%prefix%t2e 12 and 3` bot will reply with ```1️⃣2️⃣ 🇦🇳🇩 3️⃣```


command.ping.description=Shows network latency between bot and discord server
command.ping.syntax=%prefix%ping [pong] [dunste]
command.ping.response1.part1=🏓 Pong!\nGateway: %gatewayPing%ms
command.ping.response1.part2=\nRest: %restPing%ms\nSendMessage: %sendMessagePing%ms
command.ping.response1.part3=\nEditMessage: %editMessagePing%ms


command.ping.pong.response1=What are you doing in my swamp!
command.ping.pong.dunste.response1=🐓 Karlijn 🐓


command.setlanguage.syntax=%prefix%setLanguage [list | language* | null]
command.setlanguage.description=Main command to configure my language for the server, NOTE: can be overriden by private language
command.setlanguage.currentlangresponse=My language is currently set to **%language%**
command.setlanguage.set.success=My language has successfully been set to **%language%**
command.setlanguage.help=Args:\
  \n%help.arg.language%\
  \nExamples:\
  \n- `%prefix%setLanguage NL` The bot will now reply with dutch translations\
  \n- `%prefix%setLanguage null` The bot will now reply with english


command.setlanguage.list.syntax=%prefix%setLanguage list
command.setlanguage.list.description=Shows a list of supported languages\nYou can help translate the bot here: %url%
command.setlanguage.list.title=List of supported languages


command.setprivatelanguage.syntax=%prefix%setPrivateLanguage [list | language* | null]
command.setprivatelanguage.description=Command to manage private languages
command.setprivatelanguage.show.unset=Your private language is unset
command.setprivatelanguage.show.set=Your private language is set to **%language%**
command.setprivatelanguage.set=Your private language been set to **%language%**
command.setprivatelanguage.unset=Your private language has been unset
command.setprivatelanguage.help=Args:\
  \n%help.arg.language%\
  \nExamples:\
  \n- `%prefix%setPrivateLanguage NL` The bot will now reply with dutch translations for you\
  \n- `%prefix%setPrivateLanguage null` The bot will now reply with english for you


command.joinmessage.syntax=%prefix%joinMessage <setContent, embed, attachments, view>
command.joinmessage.description=Manages the JoinMessage
command.joinmessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.joinmessage.setcontent.syntax=%prefix%joinMessage setContent [text* | null]
command.joinmessage.setcontent.description=Sets the text content of the JoinMessage
command.joinmessage.setcontent.help=Args:\
  \n%help.arg.text%, can be up to 2000 characters\
  \nExamples:\
  \n- `%prefix%joinmessage setContent null` Unsets the join message's content\
  \n- `%prefix%joinmessage setContent welcome {user}` Sets the join message's content to "welcome {user}"


command.joinmessage.embed.syntax=%prefix%joinMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.joinmessage.embed.description=Sets the embed content of the JoinMessage


command.joinmessage.embed.clear.syntax=%prefix%joinMessage embed clear
command.joinmessage.embed.clear.description=Clears the embed content of the JoinMessage


command.joinmessage.embed.setdescription.syntax=%prefix%joinMessage embed setDescription [text* | null]
command.joinmessage.embed.setdescription.description=Sets the embed description of the JoinMessage
command.joinmessage.embed.setdescription.help=Args:\
  \n%help.arg.text%, can be up to 2000 characters\
  \nExamples:\
  \n- `%prefix%joinMessage embed setDescription null` Unsets the join message's embed description\
  \n- `%prefix%joinMessage embed setDescription welcome {user}` Sets the join message's embed description to "welcome {user}"


command.joinmessage.embed.setcolor.syntax=%prefix%joinMessage embed setColor [color* | null]
command.joinmessage.embed.setcolor.description=Sets the embed color of the JoinMessage
command.joinmessage.embed.setcolor.help=Args:\
  \n%help.arg.color%\
  \nExamples:\
  \n- `%prefix%joinMessage embed setColor #FFFFFF` Sets the join message's embed color to white\
  \n- `%prefix%joinMessage embed setColor null` Unsets the join message's embed color


command.joinmessage.embed.settitle.syntax=%prefix%joinMessage embed setTitle [text* | null]
command.joinmessage.embed.settitle.description=Sets the embed title of the JoinMessage
command.joinmessage.embed.settitle.help=Args:\
  \n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%joinMessage embed setTitle welcome {user}` Sets the join message's embed title to "welcome {user}"\
  \n- `%prefix%joinMessage embed setTitle null` Unsets the join message's embed title


command.joinmessage.embed.settitleurl.syntax=%prefix%joinMessage embed setTitleUrl [url* | null]
command.joinmessage.embed.settitleurl.description=Sets the embed title url of the JoinMessage
command.joinmessage.embed.settitleurl.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%joinMessage embed setTitleUrl https://melijn.com` Sets the join message's embed title url to "https://melijn.com"\
  \n- `%prefix%joinMessage embed setTitleUrl null` Unsets the join message's embed title url


command.joinmessage.embed.setauthor.syntax=%prefix%joinMessage embed setAuthor [embedAuthor* | null]
command.joinmessage.embed.setauthor.description=Sets the embed author of the JoinMessage
command.joinmessage.embed.setauthor.help=Args:\
  \n%help.arg.embedauthor%\
  \nExamples:\
  \n- `%prefix%joinMessage embed setAuthor` Shows the join message's embed author\
  \n- `%prefix%joinMessage embed setAuthor {username}` Sets the join message's embed author to "{username}"\
  \n- `%prefix%joinMessage embed setAuthor null` Unsets the join message's embed author


command.joinmessage.embed.setauthoricon.syntax=%prefix%joinMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.joinmessage.embed.setauthoricon.description=Sets the embed author icon of the JoinMessage
command.joinmessage.embed.setauthoricon.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%joinMessage embed setAuthorIcon` Shows the join message's embed author\
  \n- `%prefix%joinMessage embed setAuthorIcon ~attachment~` Sets the join message's embed author icon to the attachment\
  \n- `%prefix%joinMessage embed setAuthorIcon @user` Sets the join message's embed author icon to @user's avatar\
  \n- `%prefix%joinMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the join message's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%joinMessage embed setAuthorIcon null` Unsets the join message's embed author


command.joinmessage.embed.setauthorurl.syntax=%prefix%joinMessage embed setAuthorUrl [url* | null]
command.joinmessage.embed.setauthorurl.description=Sets the embed author url of the JoinMessage
command.joinmessage.embed.setauthorurl.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%joinMessage embed setAuthorUrl` Shows the join message's embed author url\
  \n- `%prefix%joinMessage embed setAuthorUrl https://google.com/` Sets the join message's embed author url to "https://google.com/"\
  \n- `%prefix%joinMessage embed setAuthorUrl null` Unsets the join message's embed author


command.joinmessage.embed.setthumbnail.syntax=%prefix%joinMessage embed setThumbnail [url* | attachment | user* | null]
command.joinmessage.embed.setthumbnail.description=Sets the embed thumbnail of the JoinMessage
command.joinmessage.embed.setthumbnail.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%joinMessage embed setThumbnail` Shows the join message's embed thumbnail\
  \n- `%prefix%joinMessage embed setThumbnail ~attachment~` Sets the join message's embed thumbnail to the attachment\
  \n- `%prefix%joinMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the join message's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%joinMessage embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%joinMessage embed setThumbnail null` Unsets the join message's embed thumbnail


command.joinmessage.embed.setimage.syntax=%prefix%joinMessage embed setImage [url*]
command.joinmessage.embed.setimage.description=Sets the embed image of the JoinMessage
command.joinmessage.embed.setimage.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%joinMessage embed setImage` Shows the join message's embed image\
  \n- `%prefix%joinMessage embed setImage ~attachment~` Sets the join message's embed image to the attachment\
  \n- `%prefix%joinMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the join message's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%joinMessage embed setImage @user` Sets the join message's embed image to @user's avatar\
  \n- `%prefix%joinMessage embed setImage null` Unsets the join message's embed image


command.joinmessage.embed.setfooter.syntax=%prefix%joinMessage embed setFooter [text*]
command.joinmessage.embed.setfooter.description=Sets the embed footer of the JoinMessage
command.joinmessage.embed.setfooter.help=Args:\
  \n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%joinMessage embed setFooter` Shows the join message's embed footer\
  \n- `%prefix%joinMessage embed setFooter epic text` Sets the join message's embed footer to "epic text"\
  \n- `%prefix%joinMessage embed setFooter null` Unsets the join message's embed image


command.joinmessage.embed.setfootericon.syntax=%prefix%joinMessage embed setFooterIcon [url* | attachment* | user* | null]
command.joinmessage.embed.setfootericon.description=Sets the embed footer icon of the JoinMessage
command.joinmessage.embed.setfootericon.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%joinMessage embed setFooterIcon` Shows the join message's embed footer icon\
  \n- `%prefix%joinMessage embed setFooterIcon ~attachment~` Sets the join message's embed footer icon to the attachment\
  \n- `%prefix%joinMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the join message's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%joinMessage embed setFooterIcon @user` Sets the join message's embed footer icon to @user's avatar\
  \n- `%prefix%joinMessage embed setFooterIcon null` Unsets the join message's embed footer icon


command.joinmessage.embed.field.syntax=%prefix%joinMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.joinmessage.embed.field.description=Manages the embed fields of the JoinMessage


command.joinmessage.embed.field.add.syntax=%prefix%joinMessage embed field add <fieldTitle*> > <fieldValue*>
command.joinmessage.embed.field.add.description=Adds an embed field to the JoinMessage
command.joinmessage.embed.field.add.help=Args:\
  \n%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%\
  \nExamples:\
  \n- `%prefix%joinMessage embed field add user > ToxicMushroom` Adds a field entry to the join message's embed with "user" as title and "ToxicMushroom as value


command.joinmessage.embed.field.remove.syntax=%prefix%joinMessage embed field remove <fieldIndex*>
command.joinmessage.embed.field.remove.description=Removes an embed field of the JoinMessage
command.joinmessage.embed.field.remove.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%joinMessage embed field list`\
  \nExamples:\
  \n- `%prefix%joinMessage embed field remove 1` Removes the join message's embed field with index 1



command.joinmessage.embed.field.list.syntax=%prefix%joinMessage embed field list
command.joinmessage.embed.field.list.description=Lists the embed fields of the JoinMessage


command.joinmessage.embed.field.settitle.syntax=%prefix%joinMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.joinmessage.embed.field.settitle.description=Sets the embed field title of the JoinMessage
command.joinmessage.embed.field.settitle.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%joinMessage embed field list`\
  \n%help.arg.fieldtitle%\
  \nExamples:\
  \n- `%prefix%joinMessage embed field setTitle 1 User` Sets the join message's embed field title with index 1 to "User"



command.joinmessage.embed.field.setvalue.syntax=%prefix%joinMessage embed field setValue <fieldIndex*> <fieldValue*>
command.joinmessage.embed.field.setvalue.description=Sets the embed field value of the JoinMessage
command.joinmessage.embed.field.setvalue.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%joinMessage response embed field list`\
  \n%help.arg.fieldtitle%\
  \nExamples:\
  \n- `%prefix%joinMessage response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"



command.joinmessage.embed.field.setinline.syntax=%prefix%joinMessage embed field setInline <fieldIndex> <state>
command.joinmessage.embed.field.setinline.description=Sets the embed field inline state of the JoinMessage
command.joinmessage.embed.field.setinline.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%joinMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline\
  \nExamples:\
  \n- `%prefix%joinMessage embed field setInline 1 true` Sets the selected join message's embed field at index 1 to be inlined\
  \n- `%prefix%joinMessage embed field setInline 1 false` Sets the selected join message's embed field at index 1\nnot\nto\nbe inlined



command.joinmessage.attachments.syntax=%prefix%joinMessage attachments <add | remove | list>
command.joinmessage.attachments.description=Manages the attachments of the JoinMessage


command.joinmessage.attachments.add.syntax=%prefix%joinMessage attachments add <url*> <fileName*>
command.joinmessage.attachments.add.description=Adds attachments to the JoinMessage
command.joinmessage.attachments.add.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.filename%\
  \nExamples:\
  \n- `%prefix%joinMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the join message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.joinmessage.attachments.remove.syntax=%prefix%joinMessage attachments remove <url*>
command.joinmessage.attachments.remove.description=Removes attachments from the JoinMessage
command.joinmessage.attachments.remove.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%joinMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the join message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.joinmessage.attachments.list.syntax=%prefix%joinMessage attachments list
command.joinmessage.attachments.list.description=Lists the attachments from the JoinMessage


command.joinmessage.view.syntax=%prefix%joinMessage view
command.joinmessage.view.description=Shows a preview of the join message






command.vote.syntax=%prefix%vote
command.vote.description=Shows you the voteUrl
command.vote.success=You can vote here: **%url%**


command.voteinfo.syntax=%prefix%voteInfo [user*]
command.voteinfo.description=Shows you the vote stats of a user
command.voteinfo.self.novote=You have no stats yet, you can vote here: **%url%**
command.voteinfo.novote=The target has no stats, they can vote here: **%url%**
command.voteinfo.field.voteinfo=Vote Info
command.voteinfo.field.value=**User** %user%\
  \n**ID** %userId%\
  \n**Votes** %votes%\
  \n**Streak** %streak%\
  \n**Last Vote Time** %lastTime%
command.voteinfo.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%voteInfo` Shows your voting information\
  \n- `%prefix%voteInfo @ToxicMushroom` Shows your ToxicMushroom's information


command.leavemessage.syntax=%prefix%leaveMessage <setContent, embed, attachments, view>
command.leavemessage.description=Manages the LeaveMessage
command.leavemessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.leavemessage.setcontent.syntax=%prefix%leaveMessage setContent [text* | null]
command.leavemessage.setcontent.description=Sets the text content of the LeaveMessage
command.leavemessage.setcontent.help=Args:\
  \n%help.arg.text%, can be up to 2000 characters\
  \nExamples:\
  \n- `%prefix%leaveMessage setContent null` Unsets the leave message's content\
  \n- `%prefix%leaveMessage setContent welcome {user}` Sets the leave message's content to "welcome {user}"


command.leavemessage.embed.syntax=%prefix%leaveMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.leavemessage.embed.description=Sets the embed content of the LeaveMessage


command.leavemessage.embed.clear.syntax=%prefix%leaveMessage embed clear
command.leavemessage.embed.clear.description=Clears the embed content of the LeaveMessage


command.leavemessage.embed.setdescription.syntax=%prefix%leaveMessage embed setDescription [text* | null]
command.leavemessage.embed.setdescription.description=Sets the embed description of the LeaveMessage
command.leavemessage.embed.setdescription.help=Args:\
  \n%help.arg.text%, can be up to 2000 characters\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setDescription null` Unsets the leave message's embed description\
  \n- `%prefix%leaveMessage embed setDescription welcome {user}` Sets the leave message's embed description to "welcome {user}"


command.leavemessage.embed.setcolor.syntax=%prefix%leaveMessage embed setColor [color* | null]
command.leavemessage.embed.setcolor.description=Sets the embed color of the LeaveMessage
command.leavemessage.embed.setcolor.help=Args:\
  \n%help.arg.color%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setColor #FFFFFF` Sets the leave message's embed color to white\
  \n- `%prefix%leaveMessage embed setColor null` Unsets the leave message's embed color


command.leavemessage.embed.settitle.syntax=%prefix%leaveMessage embed setTitle [text* | null]
command.leavemessage.embed.settitle.description=Sets the embed title of the LeaveMessage
command.leavemessage.embed.settitle.help=Args:\
  \n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setTitle welcome {user}` Sets the leave message's embed title to "welcome {user}"\
  \n- `%prefix%leaveMessage embed setTitle null` Unsets the leave message's embed title


command.leavemessage.embed.settitleurl.syntax=%prefix%leaveMessage embed setTitleUrl [url* | null]
command.leavemessage.embed.settitleurl.description=Sets the embed title url of the LeaveMessage
command.leavemessage.embed.settitleurl.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setTitleUrl https://melijn.com` Sets the leave message's embed title url to "https://melijn.com"\
  \n- `%prefix%leaveMessage embed setTitleUrl null` Unsets the leave message's embed title url


command.leavemessage.embed.setauthor.syntax=%prefix%leaveMessage embed setAuthor [embedAuthor* | null]
command.leavemessage.embed.setauthor.description=Sets the embed author of the LeaveMessage
command.leavemessage.embed.setauthor.help=Args:\
  \n%help.arg.embedauthor%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setAuthor` Shows the leave message's embed author\
  \n- `%prefix%leaveMessage embed setAuthor {username}` Sets the leave message's embed author to "{username}"\
  \n- `%prefix%leaveMessage embed setAuthor null` Unsets the leave message's embed author


command.leavemessage.embed.setauthoricon.syntax=%prefix%leaveMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.leavemessage.embed.setauthoricon.description=Sets the embed author icon of the LeaveMessage
command.leavemessage.embed.setauthoricon.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setAuthorIcon` Shows the leave message's embed author\
  \n- `%prefix%leaveMessage embed setAuthorIcon ~attachment~` Sets the leave message's embed author icon to the attachment\
  \n- `%prefix%leaveMessage embed setAuthorIcon @user` Sets the leave message's embed author icon to @user's avatar\
  \n- `%prefix%leaveMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the leave message's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%leaveMessage embed setAuthorIcon null` Unsets the leave message's embed author


command.leavemessage.embed.setauthorurl.syntax=%prefix%leaveMessage embed setAuthorUrl [url* | null]
command.leavemessage.embed.setauthorurl.description=Sets the embed author url of the LeaveMessage
command.leavemessage.embed.setauthorurl.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setAuthorUrl` Shows the leave message's embed author url\
  \n- `%prefix%leaveMessage embed setAuthorUrl https://google.com/` Sets the leave message's embed author url to "https://google.com/"\
  \n- `%prefix%leaveMessage embed setAuthorUrl null` Unsets the leave message's embed author


command.leavemessage.embed.setthumbnail.syntax=%prefix%leaveMessage embed setThumbnail [url* | attachment | user* | null]
command.leavemessage.embed.setthumbnail.description=Sets the embed thumbnail of the LeaveMessage
command.leavemessage.embed.setthumbnail.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setThumbnail` Shows the leave message's embed thumbnail\
  \n- `%prefix%leaveMessage embed setThumbnail ~attachment~` Sets the leave message's embed thumbnail to the attachment\
  \n- `%prefix%leaveMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the leave message's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%leaveMessage embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%leaveMessage embed setThumbnail null` Unsets the leave message's embed thumbnail


command.leavemessage.embed.setimage.syntax=%prefix%leaveMessage embed setImage [url*]
command.leavemessage.embed.setimage.description=Sets the embed image of the LeaveMessage
command.leavemessage.embed.setimage.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setImage` Shows the leave message's embed image\
  \n- `%prefix%leaveMessage embed setImage ~attachment~` Sets the leave message's embed image to the attachment\
  \n- `%prefix%leaveMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the leave message's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%leaveMessage embed setImage @user` Sets the leave message's embed image to @user's avatar\
  \n- `%prefix%leaveMessage embed setImage null` Unsets the leave message's embed image


command.leavemessage.embed.setfooter.syntax=%prefix%leaveMessage embed setFooter [text*]
command.leavemessage.embed.setfooter.description=Sets the embed footer of the LeaveMessage
command.leavemessage.embed.setfooter.help=Args:\
  \n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setFooter` Shows the leave message's embed footer\
  \n- `%prefix%leaveMessage embed setFooter epic text` Sets the leave message's embed footer to "epic text"\
  \n- `%prefix%leaveMessage embed setFooter null` Unsets the leave message's embed image


command.leavemessage.embed.setfootericon.syntax=%prefix%leaveMessage embed setFooterIcon [url* | attachment* | user* | null]
command.leavemessage.embed.setfootericon.description=Sets the embed footer icon of the LeaveMessage
command.leavemessage.embed.setfootericon.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed setFooterIcon` Shows the leave message's embed footer icon\
  \n- `%prefix%leaveMessage embed setFooterIcon ~attachment~` Sets the leave message's embed footer icon to the attachment\
  \n- `%prefix%leaveMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the leave message's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%leaveMessage embed setFooterIcon @user` Sets the leave message's embed footer icon to @user's avatar\
  \n- `%prefix%leaveMessage embed setFooterIcon null` Unsets the leave message's embed footer icon


command.leavemessage.embed.field.syntax=%prefix%leaveMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.leavemessage.embed.field.description=Manages the embed fields of the LeaveMessage


command.leavemessage.embed.field.add.syntax=%prefix%leaveMessage embed field add <fieldTitle*> > <fieldValue*>
command.leavemessage.embed.field.add.description=Adds an embed field to the LeaveMessage
command.leavemessage.embed.field.add.help=Args:\
  \n%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed field add user > ToxicMushroom` Adds a field entry to the leave message's embed with "user" as title and "ToxicMushroom as value


command.leavemessage.embed.field.remove.syntax=%prefix%leaveMessage embed field remove <fieldIndex*>
command.leavemessage.embed.field.remove.description=Removes an embed field of the LeaveMessage
command.leavemessage.embed.field.remove.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%leaveMessage embed field list`\
  \nExamples:\
  \n- `%prefix%leaveMessage embed field remove 1` Removes the leave message's embed field with index 1



command.leavemessage.embed.field.list.syntax=%prefix%leaveMessage embed field list
command.leavemessage.embed.field.list.description=Lists the embed fields of the LeaveMessage


command.leavemessage.embed.field.settitle.syntax=%prefix%leaveMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.leavemessage.embed.field.settitle.description=Sets the embed field title of the LeaveMessage
command.leavemessage.embed.field.settitle.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%leaveMessage embed field list`\
  \n%help.arg.fieldtitle%\
  \nExamples:\
  \n- `%prefix%leaveMessage embed field setTitle 1 User` Sets the leave message's embed field title with index 1 to "User"



command.leavemessage.embed.field.setvalue.syntax=%prefix%leaveMessage embed field setValue <fieldIndex*> <fieldValue*>
command.leavemessage.embed.field.setvalue.description=Sets the embed field value of the LeaveMessage
command.leavemessage.embed.field.setvalue.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%leaveMessage response embed field list`\
  \n%help.arg.fieldtitle%\
  \nExamples:\
  \n- `%prefix%leaveMessage response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"



command.leavemessage.embed.field.setinline.syntax=%prefix%leaveMessage embed field setInline <fieldIndex> <state>
command.leavemessage.embed.field.setinline.description=Sets the embed field inline state of the LeaveMessage
command.leavemessage.embed.field.setinline.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%leaveMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline\
  \nExamples:\
  \n- `%prefix%leaveMessage embed field setInline 1 true` Sets the selected leave message's embed field at index 1 to be inlined\
  \n- `%prefix%leaveMessage embed field setInline 1 false` Sets the selected leave message's embed field at index 1\nnot\nto\nbe inlined



command.leavemessage.attachments.syntax=%prefix%leaveMessage attachments <add | remove | list>
command.leavemessage.attachments.description=Manages the attachments of the LeaveMessage


command.leavemessage.attachments.add.syntax=%prefix%leaveMessage attachments add <url*> <fileName*>
command.leavemessage.attachments.add.description=Adds attachments to the LeaveMessage
command.leavemessage.attachments.add.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.filename%\
  \nExamples:\
  \n- `%prefix%leaveMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the leave message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.leavemessage.attachments.remove.syntax=%prefix%leaveMessage attachments remove <url*>
command.leavemessage.attachments.remove.description=Removes attachments from the LeaveMessage
command.leavemessage.attachments.remove.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%leaveMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the leave message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.leavemessage.attachments.list.syntax=%prefix%leaveMessage attachments list
command.leavemessage.attachments.list.description=Lists the attachments from the LeaveMessage


command.leavemessage.view.syntax=%prefix%leaveMessage view
command.leavemessage.view.description=Shows a preview of the leave message


command.birthdaymessage.syntax=%prefix%birthdayMessage <setContent, embed, attachments, view>
command.birthdaymessage.description=Manages the BirthdayMessage
command.birthdaymessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.birthdaymessage.setcontent.syntax=%prefix%birthdayMessage setContent [text* | null]
command.birthdaymessage.setcontent.description=Sets the text content of the BirthdayMessage
command.birthdaymessage.setcontent.help=Args:\
  \n%help.arg.text%, can be up to 2000 characters\
  \nExamples:\
  \n- `%prefix%birthdayMessage setContent null` Unsets the birthday message's content\
  \n- `%prefix%birthdayMessage setContent welcome {user}` Sets the birthday message's content to "welcome {user}"


command.birthdaymessage.embed.syntax=%prefix%birthdayMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.birthdaymessage.embed.description=Sets the embed content of the BirthdayMessage


command.birthdaymessage.embed.clear.syntax=%prefix%birthdayMessage embed clear
command.birthdaymessage.embed.clear.description=Clears the embed content of the BirthdayMessage


command.birthdaymessage.embed.setdescription.syntax=%prefix%birthdayMessage embed setDescription [text* | null]
command.birthdaymessage.embed.setdescription.description=Sets the embed description of the BirthdayMessage
command.birthdaymessage.embed.setdescription.help=Args:\
  \n%help.arg.text%, can be up to 2000 characters\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setDescription null` Unsets the birthday message's embed description\
  \n- `%prefix%birthdayMessage embed setDescription welcome {user}` Sets the birthday message's embed description to "welcome {user}"


command.birthdaymessage.embed.setcolor.syntax=%prefix%birthdayMessage embed setColor [color* | null]
command.birthdaymessage.embed.setcolor.description=Sets the embed color of the BirthdayMessage
command.birthdaymessage.embed.setcolor.help=Args:\
  \n%help.arg.color%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setColor #FFFFFF` Sets the birthday message's embed color to white\
  \n- `%prefix%birthdayMessage embed setColor null` Unsets the birthday message's embed color


command.birthdaymessage.embed.settitle.syntax=%prefix%birthdayMessage embed setTitle [text* | null]
command.birthdaymessage.embed.settitle.description=Sets the embed title of the BirthdayMessage
command.birthdaymessage.embed.settitle.help=Args:\
  \n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setTitle welcome {user}` Sets the birthday message's embed title to "welcome {user}"\
  \n- `%prefix%birthdayMessage embed setTitle null` Unsets the birthday message's embed title


command.birthdaymessage.embed.settitleurl.syntax=%prefix%birthdayMessage embed setTitleUrl [url* | null]
command.birthdaymessage.embed.settitleurl.description=Sets the embed title url of the BirthdayMessage
command.birthdaymessage.embed.settitleurl.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setTitleUrl https://melijn.com` Sets the birthday message's embed title url to "https://melijn.com"\
  \n- `%prefix%birthdayMessage embed setTitleUrl null` Unsets the birthday message's embed title url


command.birthdaymessage.embed.setauthor.syntax=%prefix%birthdayMessage embed setAuthor [embedAuthor* | null]
command.birthdaymessage.embed.setauthor.description=Sets the embed author of the BirthdayMessage
command.birthdaymessage.embed.setauthor.help=Args:\
  \n%help.arg.embedauthor%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setAuthor` Shows the birthday message's embed author\
  \n- `%prefix%birthdayMessage embed setAuthor {username}` Sets the birthday message's embed author to "{username}"\
  \n- `%prefix%birthdayMessage embed setAuthor null` Unsets the birthday message's embed author


command.birthdaymessage.embed.setauthoricon.syntax=%prefix%birthdayMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.birthdaymessage.embed.setauthoricon.description=Sets the embed author icon of the BirthdayMessage
command.birthdaymessage.embed.setauthoricon.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setAuthorIcon` Shows the birthday message's embed author\
  \n- `%prefix%birthdayMessage embed setAuthorIcon ~attachment~` Sets the birthday message's embed author icon to the attachment\
  \n- `%prefix%birthdayMessage embed setAuthorIcon @user` Sets the birthday message's embed author icon to @user's avatar\
  \n- `%prefix%birthdayMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the birthday message's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%birthdayMessage embed setAuthorIcon null` Unsets the birthday message's embed author


command.birthdaymessage.embed.setauthorurl.syntax=%prefix%birthdayMessage embed setAuthorUrl [url* | null]
command.birthdaymessage.embed.setauthorurl.description=Sets the embed author url of the BirthdayMessage
command.birthdaymessage.embed.setauthorurl.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setAuthorUrl` Shows the birthday message's embed author url\
  \n- `%prefix%birthdayMessage embed setAuthorUrl https://google.com/` Sets the birthday message's embed author url to "https://google.com/"\
  \n- `%prefix%birthdayMessage embed setAuthorUrl null` Unsets the birthday message's embed author


command.birthdaymessage.embed.setthumbnail.syntax=%prefix%birthdayMessage embed setThumbnail [url* | attachment | user* | null]
command.birthdaymessage.embed.setthumbnail.description=Sets the embed thumbnail of the BirthdayMessage
command.birthdaymessage.embed.setthumbnail.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setThumbnail` Shows the birthday message's embed thumbnail\
  \n- `%prefix%birthdayMessage embed setThumbnail ~attachment~` Sets the birthday message's embed thumbnail to the attachment\
  \n- `%prefix%birthdayMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the birthday message's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%birthdayMessage embed setThumbnail @user` Sets the thumbnail of the birthday embed to the avatar if @user's\
  \n- `%prefix%birthdayMessage embed setThumbnail null` Unsets the embed thumbnail of the birthday message


command.birthdaymessage.embed.setimage.syntax=%prefix%birthdayMessage embed setImage [url*]
command.birthdaymessage.embed.setimage.description=Sets the embed image of the BirthdayMessage
command.birthdaymessage.embed.setimage.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setImage` Shows the birthday message's embed image\
  \n- `%prefix%birthdayMessage embed setImage ~attachment~` Sets the birthday message's embed image to the attachment\
  \n- `%prefix%birthdayMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the birthday message's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%birthdayMessage embed setImage @user` Sets the birthday message's embed image to @user's avatar\
  \n- `%prefix%birthdayMessage embed setImage null` Unsets the birthday message's embed image


command.birthdaymessage.embed.setfooter.syntax=%prefix%birthdayMessage embed setFooter [text*]
command.birthdaymessage.embed.setfooter.description=Sets the embed footer of the BirthdayMessage
command.birthdaymessage.embed.setfooter.help=Args:\
  \n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setFooter` Shows the birthday message's embed footer\
  \n- `%prefix%birthdayMessage embed setFooter epic text` Sets the birthday message's embed footer to "epic text"\
  \n- `%prefix%birthdayMessage embed setFooter null` Unsets the birthday message's embed image


command.birthdaymessage.embed.setfootericon.syntax=%prefix%birthdayMessage embed setFooterIcon [url* | attachment* | user* | null]
command.birthdaymessage.embed.setfootericon.description=Sets the embed footer icon of the BirthdayMessage
command.birthdaymessage.embed.setfootericon.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed setFooterIcon` Shows the birthday message's embed footer icon\
  \n- `%prefix%birthdayMessage embed setFooterIcon ~attachment~` Sets the birthday message's embed footer icon to the attachment\
  \n- `%prefix%birthdayMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the birthday message's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%birthdayMessage embed setFooterIcon @user` Sets the birthday message's embed footer icon to @user's avatar\
  \n- `%prefix%birthdayMessage embed setFooterIcon null` Unsets the birthday message's embed footer icon


command.birthdaymessage.embed.field.syntax=%prefix%birthdayMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.birthdaymessage.embed.field.description=Manages the embed fields of the BirthdayMessage


command.birthdaymessage.embed.field.add.syntax=%prefix%birthdayMessage embed field add <fieldTitle*> > <fieldValue*>
command.birthdaymessage.embed.field.add.description=Adds an embed field to the BirthdayMessage
command.birthdaymessage.embed.field.add.help=Args:\
  \n%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed field add user > ToxicMushroom` Adds a field entry to the birthday message's embed with "user" as title and "ToxicMushroom as value


command.birthdaymessage.embed.field.remove.syntax=%prefix%birthdayMessage embed field remove <fieldIndex*>
command.birthdaymessage.embed.field.remove.description=Removes an embed field of the BirthdayMessage
command.birthdaymessage.embed.field.remove.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%birthdayMessage embed field list`\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed field remove 1` Removes the birthday message's embed field with index 1



command.birthdaymessage.embed.field.list.syntax=%prefix%birthdayMessage embed field list
command.birthdaymessage.embed.field.list.description=Lists the embed fields of the BirthdayMessage


command.birthdaymessage.embed.field.settitle.syntax=%prefix%birthdayMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.birthdaymessage.embed.field.settitle.description=Sets the embed field title of the BirthdayMessage
command.birthdaymessage.embed.field.settitle.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%birthdayMessage embed field list`\
  \n%help.arg.fieldtitle%\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed field setTitle 1 User` Sets the birthday message's embed field title with index 1 to "User"



command.birthdaymessage.embed.field.setvalue.syntax=%prefix%birthdayMessage embed field setValue <fieldIndex*> <fieldValue*>
command.birthdaymessage.embed.field.setvalue.description=Sets the embed field value of the BirthdayMessage
command.birthdaymessage.embed.field.setvalue.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%birthdayMessage response embed field list`\
  \n%help.arg.fieldtitle%\
  \nExamples:\
  \n- `%prefix%birthdayMessage response embed field setValue 1 ToxicMushroom` Sets the selected birthday message's embed response's embed field value with index 1 to "ToxicMushroom"



command.birthdaymessage.embed.field.setinline.syntax=%prefix%birthdayMessage embed field setInline <fieldIndex> <state>
command.birthdaymessage.embed.field.setinline.description=Sets the embed field inline state of the BirthdayMessage
command.birthdaymessage.embed.field.setinline.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%birthdayMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline\
  \nExamples:\
  \n- `%prefix%birthdayMessage embed field setInline 1 true` Sets the selected birthday message's embed field at index 1 to be inlined\
  \n- `%prefix%cbirthdayMessage embed field setInline 1 false` Sets the selected birthday message's embed field at index 1\nnot\nto\nbe inlined



command.birthdaymessage.attachments.syntax=%prefix%birthdayMessage attachments <add | remove | list>
command.birthdaymessage.attachments.description=Manages the attachments of the BirthdayMessage


command.birthdaymessage.attachments.add.syntax=%prefix%birthdayMessage attachments add <url*> <fileName*>
command.birthdaymessage.attachments.add.description=Adds attachments to the BirthdayMessage
command.birthdaymessage.attachments.add.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.filename%\
  \nExamples:\
  \n- `%prefix%birthdayMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the birthday message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.birthdaymessage.attachments.remove.syntax=%prefix%birthdayMessage attachments remove <url*>
command.birthdaymessage.attachments.remove.description=Removes attachments from the BirthdayMessage
command.birthdaymessage.attachments.remove.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%birthdayMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the birthday message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.birthdaymessage.attachments.list.syntax=%prefix%birthdayMessage attachments list
command.birthdaymessage.attachments.list.description=Lists the attachments from the BirthdayMessage


command.birthdaymessage.view.syntax=%prefix%birthdayMessage view
command.birthdaymessage.view.description=Shows a preview of the birthday message


command.preverificationmessage.syntax=%prefix%preVerificationMessage <setContent, embed, attachments, view>
command.preverificationmessage.description=Manages the PreVerificationMessage
command.preverificationmessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.preverificationmessage.setcontent.syntax=%prefix%preVerificationMessage setContent [text* | null]
command.preverificationmessage.setcontent.description=Sets the text content of the PreVerificationMessage
command.preverificationmessage.setcontent.help=Args:\
  \n%help.arg.text%, can be up to 2000 characters\
  \nExamples:\
  \n- `%prefix%preverificationmessage setContent null` Unsets the pre verification message's content\
  \n- `%prefix%preverificationmessage setContent welcome {user}` Sets the pre verification message's content to "welcome {user}"


command.preverificationmessage.embed.syntax=%prefix%preVerificationMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.preverificationmessage.embed.description=Sets the embed content of the PreVerificationMessage


command.preverificationmessage.embed.clear.syntax=%prefix%preVerificationMessage embed clear
command.preverificationmessage.embed.clear.description=Clears the embed content of the PreVerificationMessage


command.preverificationmessage.embed.setdescription.syntax=%prefix%preVerificationMessage embed setDescription [text* | null]
command.preverificationmessage.embed.setdescription.description=Sets the embed description of the PreVerificationMessage
command.preverificationmessage.embed.setdescription.help=Args:\
  \n%help.arg.text%, can be up to 2000 characters\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setDescription null` Unsets the pre verification message's embed description\
  \n- `%prefix%preVerificationMessage embed setDescription welcome {user}` Sets the pre verification message's embed description to "welcome {user}"


command.preverificationmessage.embed.setcolor.syntax=%prefix%preVerificationMessage embed setColor [color* | null]
command.preverificationmessage.embed.setcolor.description=Sets the embed color of the PreVerificationMessage
command.preverificationmessage.embed.setcolor.help=Args:\
  \n%help.arg.color%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setColor #FFFFFF` Sets the pre verification message's embed color to white\
  \n- `%prefix%preVerificationMessage embed setColor null` Unsets the pre verification message's embed color


command.preverificationmessage.embed.settitle.syntax=%prefix%preVerificationMessage embed setTitle [text* | null]
command.preverificationmessage.embed.settitle.description=Sets the embed title of the PreVerificationMessage
command.preverificationmessage.embed.settitle.help=Args:\
  \n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setTitle welcome {user}` Sets the pre verification message's embed title to "welcome {user}"\
  \n- `%prefix%preVerificationMessage embed setTitle null` Unsets the pre verification message's embed title


command.preverificationmessage.embed.settitleurl.syntax=%prefix%preVerificationMessage embed setTitleUrl [url* | null]
command.preverificationmessage.embed.settitleurl.description=Sets the embed title url of the PreVerificationMessage
command.preverificationmessage.embed.settitleurl.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setTitleUrl https://melijn.com` Sets the pre verification message's embed title url to "https://melijn.com"\
  \n- `%prefix%preVerificationMessage embed setTitleUrl null` Unsets the pre verification message's embed title url


command.preverificationmessage.embed.setauthor.syntax=%prefix%preVerificationMessage embed setAuthor [embedAuthor* | null]
command.preverificationmessage.embed.setauthor.description=Sets the embed author of the PreVerificationMessage
command.preverificationmessage.embed.setauthor.help=Args:\
  \n%help.arg.embedauthor%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setAuthor` Shows the pre verification message's embed author\
  \n- `%prefix%preVerificationMessage embed setAuthor {username}` Sets the pre verification message's embed author to "{username}"\
  \n- `%prefix%preVerificationMessage embed setAuthor null` Unsets the pre verification message's embed author


command.preverificationmessage.embed.setauthoricon.syntax=%prefix%preVerificationMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.preverificationmessage.embed.setauthoricon.description=Sets the embed author icon of the PreVerificationMessage
command.preverificationmessage.embed.setauthoricon.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setAuthorIcon` Shows the pre verification message's embed author\
  \n- `%prefix%preVerificationMessage embed setAuthorIcon ~attachment~` Sets the pre verification message's embed author icon to the attachment\
  \n- `%prefix%preVerificationMessage embed setAuthorIcon @user` Sets the pre verification message's embed author icon to @user's avatar\
  \n- `%prefix%preVerificationMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre verification message's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationMessage embed setAuthorIcon null` Unsets the pre verification message's embed author


command.preverificationmessage.embed.setauthorurl.syntax=%prefix%preVerificationMessage embed setAuthorUrl [url* | null]
command.preverificationmessage.embed.setauthorurl.description=Sets the embed author url of the PreVerificationMessage
command.preverificationmessage.embed.setauthorurl.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setAuthorUrl` Shows the pre verification message's embed author url\
  \n- `%prefix%preVerificationMessage embed setAuthorUrl https://google.com/` Sets the pre verification message's embed author url to "https://google.com/"\
  \n- `%prefix%preVerificationMessage embed setAuthorUrl null` Unsets the pre verification message's embed author


command.preverificationmessage.embed.setthumbnail.syntax=%prefix%preVerificationMessage embed setThumbnail [url* | attachment | user* | null]
command.preverificationmessage.embed.setthumbnail.description=Sets the embed thumbnail of the PreVerificationMessage
command.preverificationmessage.embed.setthumbnail.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setThumbnail` Shows the pre verification message's embed thumbnail\
  \n- `%prefix%preVerificationMessage embed setThumbnail ~attachment~` Sets the pre verification message's embed thumbnail to the attachment\
  \n- `%prefix%preVerificationMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre verification message's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationMessage embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%preVerificationMessage embed setThumbnail null` Unsets the pre verification message's embed thumbnail


command.preverificationmessage.embed.setimage.syntax=%prefix%preVerificationMessage embed setImage [url*]
command.preverificationmessage.embed.setimage.description=Sets the embed image of the PreVerificationMessage
command.preverificationmessage.embed.setimage.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setImage` Shows the pre verification message's embed image\
  \n- `%prefix%preVerificationMessage embed setImage ~attachment~` Sets the pre verification message's embed image to the attachment\
  \n- `%prefix%preVerificationMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre verification message's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationMessage embed setImage @user` Sets the pre verification message's embed image to @user's avatar\
  \n- `%prefix%preVerificationMessage embed setImage null` Unsets the pre verification message's embed image


command.preverificationmessage.embed.setfooter.syntax=%prefix%preVerificationMessage embed setFooter [text*]
command.preverificationmessage.embed.setfooter.description=Sets the embed footer of the PreVerificationMessage
command.preverificationmessage.embed.setfooter.help=Args:\
  \n%help.arg.text%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setFooter` Shows the pre verification message's embed footer\
  \n- `%prefix%preVerificationMessage embed setFooter epic text` Sets the pre verification message's embed footer to "epic text"\
  \n- `%prefix%preVerificationMessage embed setFooter null` Unsets the pre verification message's embed image


command.preverificationmessage.embed.setfootericon.syntax=%prefix%preVerificationMessage embed setFooterIcon [url* | attachment* | user* | null]
command.preverificationmessage.embed.setfootericon.description=Sets the embed footer icon of the PreVerificationMessage
command.preverificationmessage.embed.setfootericon.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed setFooterIcon` Shows the pre verification message's embed footer icon\
  \n- `%prefix%preVerificationMessage embed setFooterIcon ~attachment~` Sets the pre verification message's embed footer icon to the attachment\
  \n- `%prefix%preVerificationMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre verification message's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationMessage embed setFooterIcon @user` Sets the pre verification message's embed footer icon to @user's avatar\
  \n- `%prefix%preVerificationMessage embed setFooterIcon null` Unsets the pre verification message's embed footer icon


command.preverificationmessage.embed.field.syntax=%prefix%preVerificationMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.preverificationmessage.embed.field.description=Manages the embed fields of the PreVerificationMessage


command.preverificationmessage.embed.field.add.syntax=%prefix%preVerificationMessage embed field add <fieldTitle*> > <fieldValue*>
command.preverificationmessage.embed.field.add.description=Adds an embed field to the PreVerificationMessage
command.preverificationmessage.embed.field.add.help=Args:\
  \n%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed field add user > ToxicMushroom` Adds a field entry to the pre verification message's embed with "user" as title and "ToxicMushroom as value


command.preverificationmessage.embed.field.remove.syntax=%prefix%preVerificationMessage embed field remove <fieldIndex*>
command.preverificationmessage.embed.field.remove.description=Removes an embed field of the PreVerificationMessage
command.preverificationmessage.embed.field.remove.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationMessage embed field list`\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed field remove 1` Removes the pre verification message's embed field with index 1



command.preverificationmessage.embed.field.list.syntax=%prefix%preVerificationMessage embed field list
command.preverificationmessage.embed.field.list.description=Lists the embed fields of the PreVerificationMessage


command.preverificationmessage.embed.field.settitle.syntax=%prefix%preVerificationMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.preverificationmessage.embed.field.settitle.description=Sets the embed field title of the PreVerificationMessage
command.preverificationmessage.embed.field.settitle.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationMessage embed field list`\
  \n%help.arg.fieldtitle%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed field setTitle 1 User` Sets the pre verification message's embed field title with index 1 to "User"



command.preverificationmessage.embed.field.setvalue.syntax=%prefix%preVerificationMessage embed field setValue <fieldIndex*> <fieldValue*>
command.preverificationmessage.embed.field.setvalue.description=Sets the embed field value of the PreVerificationMessage
command.preverificationmessage.embed.field.setvalue.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationMessage response embed field list`\
  \n%help.arg.fieldtitle%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"



command.preverificationmessage.embed.field.setinline.syntax=%prefix%preVerificationMessage embed field setInline <fieldIndex> <state>
command.preverificationmessage.embed.field.setinline.description=Sets the embed field inline state of the PreVerificationMessage
command.preverificationmessage.embed.field.setinline.help=Args:\
  \n%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline\
  \nExamples:\
  \n- `%prefix%preVerificationMessage embed field setInline 1 true` Sets the selected pre verification message's embed field at index 1 to be inlined\
  \n- `%prefix%preVerificationMessage embed field setInline 1 false` Sets the selected pre verification message's embed field at index 1\nnot\nto\nbe inlined



command.preverificationmessage.attachments.syntax=%prefix%preVerificationMessage attachments <add | remove | list>
command.preverificationmessage.attachments.description=Manages the attachments of the PreVerificationMessage


command.preverificationmessage.attachments.add.syntax=%prefix%preVerificationMessage attachments add <url*> <fileName*>
command.preverificationmessage.attachments.add.description=Adds attachments to the PreVerificationMessage
command.preverificationmessage.attachments.add.help=Args:\
  \n%help.arg.url%\
  \n%help.arg.filename%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the pre verification message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.preverificationmessage.attachments.remove.syntax=%prefix%preVerificationMessage attachments remove <url*>
command.preverificationmessage.attachments.remove.description=Removes attachments from the PreVerificationMessage
command.preverificationmessage.attachments.remove.help=Args:\
  \n%help.arg.url%\
  \nExamples:\
  \n- `%prefix%preVerificationMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the pre verification message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.preverificationmessage.attachments.list.syntax=%prefix%preVerificationMessage attachments list
command.preverificationmessage.attachments.list.description=Lists the attachments from the PreVerificationMessage


command.preverificationmessage.view.syntax=%prefix%preVerificationMessage view
command.preverificationmessage.view.description=Shows a preview of the pre verification message


command.setembedstate.syntax=%prefix%setEmbedState [state*]
command.setembedstate.description=Sets the embed state of all bot messages
command.setembedstate.currentstateresponse=Embeds are currently **%disabledState%**
command.setembedstate.set.success=Embeds have successfully been **%disabledState%**
command.setembedstate.help=Args:\
  \n%help.arg.state%\
  \nExamples:\
  \n- `%prefix%setEmbedState enabled` Enables embeds for the bot\
  \n- `%prefix%setEmbedState disabled` Disables embeds for the bot


command.stats.syntax=%prefix%stats
command.stats.description=Shows the bot's, vps' and jvm's stats
command.stats.response.field1.title=Bot Stats
command.stats.response.field2.title=Server Stats
command.stats.response.field3.title=JVM Stats
command.stats.response.field1.value=\n**Shards** %shardCount%\
  \n**Unique Users** %userCount%\
  \n**Guilds** %guildCount%\
  \n**Connected VoiceChannels** %cVCCount%\
  \n**Threads** %botThreadCount%\
  \n**Uptime** %botUptime%\
  \n**Queued Tracks** %queuedTracks%\
  \n**Music Players** %musicPlayers%\n​
command.stats.response.field2.value=\n**Cores** %coreCount%\
  \n**RAM Usage** %ramUsage%\
  \n**System Uptime** %systemUptime%\n​
command.stats.response.field3.value=\n**CPU Usage** %jvmCPUUsage%\
  \n**Ram Usage** %ramUsage%\
  \n**Threads** %threadCount%


command.help.syntax=%prefix%help [list | variable | argument | command*]
command.help.description=Shows info about commands
command.help.embed.title=Quickstart
command.help.embed.description=To view a list of commands use `%prefix%help list`\
  \nWe have a website which shows limited info [here](https://melijn.com/commands)\
  \n\nSpecific command help can be requested  with `%prefix%help <command*>` ex. `%prefix%help help` or `%prefix%help help variable`\
  \nArguments are displayed with <> or [] or \\~\\~ surrounding them\
  \n <> means that they're required\
  \n [] means that they're optional\
  \n \\~\\~ means that they're special non text inputs like \\~attachment\\~\
  \n\nArguments with a * next to them have extra help, without means that they're text\
  \nThe help about an argument can be requested with `%prefix%help argument <argument*>`\
  \nA list of arguments can also be shown with `%prefix%help argument list`\
  \n\nJoin, Leave and custom command messages can contain variables in the form of `{variableName}`\
  \nYou can request the variable list and help with `%prefix%help variable list` and `%prefix%help variable <variable*>`\
  \nIf you forgot my prefix you can use %melijnMention% as prefix
command.help.cmd.title=Help of **%cmdName%**
command.help.cmd.syntax=Syntax
command.help.cmd.aliases=Aliases
command.help.cmd.description=Description
command.help.cmd.help=Help
command.help.cmd.category=Category
command.help.help=Args:\
  \n%help.arg.command%\
  \nExamples:\
  \n- `%prefix%help setEmbedState` Shows help for the SetEmbedState command\
  \n- `%prefix%help joinMessage embed setTitle` Shows help for the setTitle subcommand of the embed subcommand of the JoinMessage command


command.help.argument.syntax=%prefix%help argument <list | text*>
command.help.argument.description=Shows help about an argument
command.help.argument.embed.title=Help of argument: %argName%
command.help.argument.embed.help=Help of %argName%
command.help.argument.embed.examples=Examples
command.help.argument.missing=It seems that the argument you requested has no help, if you think this is a bug then please report it
command.help.argument.help=Args:\
  \n%help.arg.text%, this text represents the argument, use `%prefix%help argument list` for a list of possibilities\
  \nExamples:\
  \n- `%prefix%help argument user` Shows help about the user argument


command.help.argument.list.syntax=%prefix%help argument list
command.help.argument.list.description=Shows a list of possible arguments
command.help.argument.list.title=List of arguments


command.help.variable.syntax=%prefix%help variable <list | text*>
command.help.variable.description=Shows help about a variable
command.help.variable.embed.title=Help of variable: %varName%
command.help.variable.missing=It seems that the variable you requested has no help, if you think this is a bug then please report it
command.help.variable.help=Args:\
  \n%help.arg.text%, this text represents the variable, use `%prefix%help variable list` for a list of possibilities\
  \nExamples:\
  \n- `%prefix%help variable username` Shows help about the username variable


command.help.variable.list.syntax=%prefix%help variable list
command.help.variable.list.description=Shows a list of possible variables
command.help.variable.list.title=List of variables


command.help.list.syntax=%prefix%help list [commandCategory*]
command.help.list.description=Shows the list of commands
command.help.list.title=Command List
command.help.list.field1.title=Utility
command.help.list.field2.title=Administration
command.help.list.field3.title=Moderation
command.help.list.field4.title=Music
command.help.list.field5.title=Image
command.help.list.field6.title=Animal
command.help.list.field7.title=Anime
command.help.list.footer=Command count: %cmdCount%
command.help.list.help=Args:\
  \n%help.arg.command\
  \nExamples:\
  \n- `%prefix%help list` list of all commands\
  \n- `%prefix%help list music` list of all commands in the music category


command.avatar.syntax=%prefix%avatar [user*]
command.avatar.description=Shows the avatar of a user
command.avatar.title=Avatar of %user%
command.avatar.links=Links:
command.avatar.help=Args:\
  \n%help.arg.user%\
  \nExamples\
  \n- `%prefix%avatar` Shows your avatar\
  \n- `%prefix%avatar @ToxicMushroom` Shows the avatar of ToxicMushroom


command.guildinfo.syntax=%prefix%guildInfo [guildId*]
command.guildinfo.description=Shows info about the server
command.guildinfo.response1.field1.title=General Information
command.guildinfo.response1.field1.value=**Name** %guildName%\
  \n**ID** %guildId%\
  \n**Region** %region%\
  \n**VIP Region** %isVip%\
  \n**Supports Melijn** %supportsMelijn%\
  \n**Owner** %owner%\
  \n**Creation Time** %creationDate%\
  \n**Verification Level** %verificationLevel%\
  \n**Multi Factor Authentication Level** %mfa%\n​
command.guildinfo.response1.field2.title=Statistic Information
command.guildinfo.response1.field2.value=**Members** %memberCount%\
  \n**Users** %userCount% (%userPercent%% of users)\
  \n**Bots** %botCount% (%botPercent%% of Users)\
  \n**Boosts** %boostCount%\
  \n**Boost Tier** %boostTier%\
  \n**Roles** %roleCount%\
  \n**Text Channels** %textChannelCount%\
  \n**Voice Channels** %voiceChannelCount%\
  \n**Categories** %categoryCount%\n​
command.guildinfo.response1.field3.title=Images
command.guildinfo.response1.field3.value.part1=[Icon](%iconUrl%)\n
command.guildinfo.response1.field3.value.part2=[Banner](%bannerUrl%)\n
command.guildinfo.response1.field3.value.part3=[Splash](%splashUrl%)\n
command.guildinfo.response1.field3.value.part4=[Vanity](%vanityUrl%)\n


command.color.syntax=%prefix%color <color*>
command.color.description=Show information about the color
command.color.eb.hex.title=Hex info
command.color.eb.rgb.title=RGB info
command.color.eb.dec.title=Decimal info
command.color.help=Args:\
  \n%help.arg.color%\
  \nExamples:\
  \n- `%prefix%color #4d34d2` Shows color info of the color #4d34d2


command.userinfo.syntax=%prefix%userInfo [user*]
command.userinfo.description=Shows info about a user, even more if the user is also a member
command.userinfo.response1.field1.title=User Info
command.userinfo.response1.field1.value=**Name** %name%\
  \n**Discriminator** %discrim%\
  \n**ID** %userId%\
  \n**Bot** %isBot%\
  \n**Supports Melijn** %supportsMelijn%\
  \n**Avatar** [link](%avatarUrl%)\
  \n**Creation Time** %creationTime%\n​
command.userinfo.response1.field2.title=Member Info
command.userinfo.response1.field2.value=**Roles** %roleCount%\
  \n**Nickname** %nickname%\
  \n**Guild Owner** %isOwner%\
  \n**Join Time** %joinTime%\
  \n**Boost Time** %boostTime%\
  \n**Online Status** %onlineStatus%\
  \n**Voice Status** %voiceStatus%\
  \n**Can Melijn Interact** %canMelijnInteract%
command.userinfo.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%userInfo` Shows user info of yourself\
  \n- `%prefix%userInfo @ToxicMushroom` Shows user info of ToxicMushroom


command.roleinfo.syntax=%prefix%roleInfo [role*]
command.roleinfo.description=Shows info about a role
command.roleinfo.response1.field1.title=Role Info
command.roleinfo.response1.field1.value=**Name** %roleName%\
  \n**ID** %roleId%\
  \n**Creation Time** %creationTime%\
  \n**Position** %position%\
  \n**Members** %members%\
  \n**Mentionable** %isMentionable%\
  \n**Hoisted** %isHoisted%\
  \n**Managed** %isManaged%\
  \n**Color** %color%\
  \n**Can Melijn Interact** %canMelijnInteract%
command.roleinfo.help=Args:\
  \n%help.arg.role%\
  \nExamples:\
  \n- `%prefix%roleInfo @Admin` Shows role info of Admin


command.roles.syntax=%prefix%roles [guildId*]
command.roles.description=Shows the list of roles of a guild
command.roles.response1.title=**Roles List** of %guildName%


command.shards.syntax=%prefix%shards
command.shards.description=Shows a table of information about each shard
command.shards.noshardmanager=The bot is not sharding


command.unicode.syntax=%prefix%unicode <text*>
command.unicode.description=Returns the unicode of each character of the input
command.unicode.help=Args:\
  \n%help.arg.text%, max length is 100 characters\
  \nExamples:\
  \n- `%prefix%unicode 😂` returns "`\\uD83D\\uDE02`   :joy:   FACE WITH TEARS OF JOY"


command.emote.syntax=%prefix%emote <emote*>
command.emote.description=Shows info about the emote
command.emote.notanemote=**%arg%** is not an emote
command.emote.response1.part1=**ID** %id%\
\n**Name** %name%
command.emote.response1.part2=\n**Animated** %isAnimated%\
\n**URL** %url%
command.emote.response1.extra=\n**Creation Time** %creationTime%
command.emote.help=Args:\
  \n%help.arg.emote%, bot needs to be able to access the emote\
  \nExamples:\
  \n- `%prefix%emote :pog:` Shows info of the pog emote


command.info.syntax=%prefix%info
command.info.description=Show info about the bot
command.info.field1.title=About
command.info.field1.value=Melijn is an opensource discord bot written in kotlin with <3 by **%ownerTag%**. Melijn is made to support a big user base and aimed at providing moderation, administration, customization, utilities, music and more. If you have problems or suggestion then don't hesitate to report them in our support server below :)\
  \n​\n**[Support Server](%invite%)** • **[Bot Invite](%botInvite%)** • **[Website](%website%)**\n​
command.info.field2.title=Info
command.info.field2.value=**Operating System** %os%\
  \n**Coded in** Kotlin and Java\
  \n**Commands** %commandCount%\n​
command.info.field3.title=Versions
command.info.field3.value=**Java Version** %javaVersion%\
  \n**Kotlin Version** %kotlinVersion%\
  \n**LavaPlayer Version** %lavaplayerVersion%\
  \n**Weeb.java Version** %weebVersion%\
  \n**PostgreSQL Version** %dbVersion%\
  \n**PostgreSQL Connector Version** %dbConnectorVersion%


command.setmusic247.syntax=%prefix%setMusic247 <state: boolean*>
command.setmusic247.description=Configures the bot to never leave the voice channel or not
command.setmusic247.show.enabled=The 24/7 mode is currently **enabled**
command.setmusic247.show.disabled=The 24/7 mode is currently **disabled**
command.setmusic247.set.enabled=The 24/7 mode has been **enabled**
command.setmusic247.set.disabled=The 24/7 mode has been **disabled**
command.setmusic247.help=Args:\
  \n%help.arg.boolean%, state: positive states enable the mode, negative states disable the mode\
  \nExamples:\
  \n- `%prefix%setMusic247 enabled` Enables the 24/7 mode\
  \n- `%prefix%setMusic247 disabled` Disables the 24/7 mode\
  \n- `%prefix%setMusic247` Shows the state of the 24/7 mode


command.permission.syntax=%prefix%permission <user, role, channel>
command.permission.description=Manages who is able to use certain commands
command.permission.help=channel role perms override role perms\nuser perms override both role and channel role perms\nchannel user perms override all


command.permission.user.syntax=%prefix%permission user <set, view, copy, clear>
command.permission.user.description=Manages the user permissions


command.permission.user.set.syntax=%prefix%permission user set <user*> <permissionNode*> <permState*>
command.permission.user.set.description=Sets the user permissions
command.permission.user.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for **%user%**
command.permission.user.set.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.permissionnode%\
  \n%help.arg.permstate%\
  \nExamples:\
  \n- `%prefix%permission user set @ToxicMushroom setstreamurl true` Allows ToxicMushroom to use setStreamUrl


command.permission.user.view.syntax=%prefix%permission user view <user*> [permissionNode*]
command.permission.user.view.description=Sets the user permissions
command.permission.user.view.response1.title=Permissions of **%user%** that match `%permissionNode%`


command.permission.user.copy.syntax=%prefix%permission user copy <user, role, channel>
command.permission.user.copy.description=Command for copying user permissions to another entity


command.permission.user.copy.user.syntax=%prefix%permission user copy user <user*> <user*>
command.permission.user.copy.user.description=Copies user permissions to another user
command.permission.user.copy.user.response1=Copied **%permissionCount%** permission from **%user1%** to **%user2%**
command.permission.user.copy.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** to **%user2%**
command.permission.user.copy.user.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%permission user copy user @ToxicMushroom @YingHamster` Copies all of ToxicMushroom's permissions to YingHamster and overwrites duplicates


command.permission.user.copy.role.syntax=%prefix%permission user copy role <user*> <role*>
command.permission.user.copy.role.description=Copies user permissions to a role
command.permission.user.copy.role.response1=Copied **%permissionCount%** permission from **%user%** to `%role%`
command.permission.user.copy.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** to `%role%`
command.permission.user.copy.role.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.role%\
  \nExamples:\
  \n- `%prefix%permission user copy role @ToxicMushroom @Admin` Copies all of ToxicMushroom's permissions to Admin role and overwrites duplicates


command.permission.user.copy.channel.syntax=%prefix%permission user copy channel <user, role>
command.permission.user.copy.channel.description=Copies user permissions to an entity bound to a channel


command.permission.user.copy.channel.user.syntax=%prefix%permission user copy channel user <user*> <textChannel*> <user*>
command.permission.user.copy.channel.user.description=Copies user permissions to a user bound to a channel
command.permission.user.copy.channel.user.response1=Copied **%permissionCount%** permission from **%user1%** in **%channel%** to **%user2%**
command.permission.user.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** in **%channel%** to **%user2%**
command.permission.user.copy.channel.user.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%permission user copy channel user @ToxicMushroom #bots @YingHamster` Copies all of ToxicMushroom's permissions to @YingHamster bound to #bots and overwrites duplicates



command.permission.user.copy.channel.role.syntax=%prefix%permission user copy channel role <user*> <textChannel*> <role*>
command.permission.user.copy.channel.role.description=Copies user permissions to a role bound to a channel
command.permission.user.copy.channel.role.response1=Copied **%permissionCount%** permission from **%user%** in **%channel%** to `%role%`
command.permission.user.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** in **%channel%** to `%role%`
command.permission.user.copy.channel.role.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.textchannel%\
  \n%help.arg.role%\
  \nExamples:\
  \n- `%prefix%permission user copy channel role @ToxicMushroom #bots @Admin` Copies all of ToxicMushroom's permissions to Admin role bound to #bots and overwrites duplicates


command.permission.user.clear.syntax=%prefix%permission user clear <user*>
command.permission.user.clear.description=Copies the user's permissions
command.permission.user.clear.response1=Permissions for **%user%** have been cleared
command.permission.user.clear.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%permission user clear @ToxicMushroom` Clears ToxicMushroom's permissions+


command.permission.role.syntax=%prefix%permission role <set, view, copy, clear>
command.permission.role.description=Manages role permissions


command.permission.role.set.syntax=%prefix%permission role set <role*> <permissionNode*> <permState*>
command.permission.role.set.description=Sets the permission permState of roles
command.permission.role.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for `%role%`
command.permission.role.set.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.permissionnode%\
  \n%help.arg.permstate%\
  \nExamples:\
  \n- `%prefix%permission role set @Admin deniedFilters.* true` Allows users with the admin role to use all of deniedFilters' sub commands


command.permission.role.view.syntax=%prefix%permission role view <role*> [permissionNode*]
command.permission.role.view.description=Shows the role's permission states
command.permission.role.view.response1.title=Permissions of `%role%` that match `%permissionNode%`
command.permission.role.view.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.permissionnode%\
  \nExamples:\
  \n- `%prefix%permission role view @Admin` Shows all permission states of the admin role\
  \n- `%prefix%permission role view @Admin deniedFilters.*` Shows the permission states that match deniedFilters.* of the admin role


command.permission.role.copy.syntax=%prefix%permission role copy <user, role, channel>
command.permission.role.copy.description=Copies permissions from a role to another entity


command.permission.role.copy.user.syntax=%prefix%permission role copy user <role*> <user*>
command.permission.role.copy.user.description=Copies permissions from a role to a user
command.permission.role.copy.user.response1=Copied **%permissionCount%** permission from **%role%** to **%user%**
command.permission.role.copy.user.response1.multiple=Copied **%permissionCount%** permissions from **%role%** to **%user%**
command.permission.role.copy.user.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%permission role copy user @Admin @ToxicMushroom` Copies all permissions of the admin role to @ToxicMushroom and overrides existing ones


command.permission.role.copy.role.syntax=%prefix%permission role copy role <role*> <role*>
command.permission.role.copy.role.description=Copies permissions from a role to another role
command.permission.role.copy.role.response1=Copied **%permissionCount%** permission from **%role1%** to **%role2%**
command.permission.role.copy.role.response1.multiple=Copied **%permissionCount%** permissions from **%role1%** to **%role2%**
command.permission.role.copy.role.help=Args:\
  \n%help.arg.role%\
  \nExamples:\
  \n- `%prefix%permission role copy role @Moderator @Admin` Copies all permissions of the moderator role to the admin role and overrides existing ones


command.permission.role.copy.channel.syntax=%prefix%permission role copy channel <role, role>
command.permission.role.copy.channel.description=Copies permissions from a role to another role bound to a channel


command.permission.role.copy.channel.user.syntax=%prefix%permission role copy channel user <role*> <textChannel*> <user*>
command.permission.role.copy.channel.user.description=Copies permissions from a role to a user bound to a channel
command.permission.role.copy.channel.user.response1=Copied **%permissionCount%** permission from `%role%` to **%user%** in **%channel%**
command.permission.role.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from `%role%` to **%user%** in **%channel%**
command.permission.role.copy.channel.user.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%permission role copy channel user @Moderator #bots @ToxicMushroom` Copies all permissions of the moderator role to @ToxicMushroom bound to #bots and overrides existing ones


command.permission.role.copy.channel.role.syntax=%prefix%permission role copy channel role <role*> <textChannel*> <role*>
command.permission.role.copy.channel.role.description=Copies permissions from a role to a role bound to a channel
command.permission.role.copy.channel.role.response1=Copied **%permissionCount%** permission from `%role1%` to `%role2%` in **%channel%**
command.permission.role.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from `%role1%` to `%role2%` in **%channel%**
command.permission.role.copy.channel.role.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%permission role copy channel role @Moderator #bots @Admin` Copies all permissions of the moderator role to the admin role bound to #bots and overrides existing ones


command.permission.role.clear.syntax=%prefix%permission role clear <role*>
command.permission.role.clear.description=Clears all permissions of a role
command.permission.role.clear.response1=Permissions for `%role%` have been cleared


command.permission.channel.syntax=%prefix%permission channel <role, user>
command.permission.channel.description=Manages the permissions of an entity bound to a channel


command.permission.channel.role.syntax=%prefix%permission channel role <set, view, copy, clear>
command.permission.channel.role.description=Manages the permissions of a role bound to a channel


command.permission.channel.role.set.syntax=%prefix%permission channel role set <textChannel*> <role*> <permissionNode*> <permState*>
command.permission.channel.role.set.description=Sets the role bound to a channel's permissions
command.permission.channel.role.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for `%role%` in **%channel%**
command.permission.channel.role.set.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.textchannel%\
  \n%help.arg.permissionnode%\
  \n%help.arg.permstate%\
  \nExamples:\
  \n- `%prefix%permission channel role set #bots @Moderator deniedFilters.* true` Allows users with the moderator role to use all the subcommands of deniedFilters in #bots


command.permission.channel.role.view.syntax=%prefix%permission channel role view <textChannel*> <role*> [permissionNode*]
command.permission.channel.role.view.description=Shows permission info of a role bound to a channel
command.permission.channel.role.view.response1.title=Permissions of `%role%` in **%channel%** that match `%permissionNode%`
command.permission.channel.role.view.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.textchannel%\
  \n%help.arg.permissionnode%\
  \nExamples:\
  \n- `%prefix%permission role view #bots @Admin` Shows all permission states of the admin role in #bots\
  \n- `%prefix%permission role view #bots @Admin deniedFilters.*` Shows the permission states that match deniedFilters.* of the admin role in #bots


command.permission.channel.role.copy.syntax=%prefix%permission channel role copy <user, role, channel>
command.permission.channel.role.copy.description=Copies a role bound to a channel's permissions to an entity


command.permission.channel.role.copy.user.syntax=%prefix%permission channel role copy user <textChannel*> <role*> <user*>
command.permission.channel.role.copy.user.description=Copies the permissions of a role bound to a channel to a user
command.permission.channel.role.copy.user.response1=Copied **%permissionCount%** permission from `%role%` in **%channel%** to **%user%**
command.permission.channel.role.copy.user.response1.multiple=Copied **%permissionCount%** permissions from `%role%` in **%channel%** to **%user%**
command.permission.channel.role.copy.user.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.textchannel%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%permission channel role copy user #bots @Admin @ToxicMushroom` Copies the permissions of the admin role bound to #bots to @ToxicMushroom


command.permission.channel.role.copy.role.syntax=%prefix%permission role copy role <textChannel*> <role*> <role*>
command.permission.channel.role.copy.role.description=Copies the permissions of a role bound to a channel to a role
command.permission.channel.role.copy.role.response1=Copied **%permissionCount%** permission from `%role1%` in **%channel%** to `%role2%`
command.permission.channel.role.copy.role.response1.multiple=Copied **%permissionCount%** permissions from `%role1%` in **%channel%** to `%role2%`
command.permission.channel.role.copy.role.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%permission channel role copy role #bots @Admin @Moderator` Copies the permissions of the admin role bound to #bots to the moderator role


command.permission.channel.role.copy.channel.syntax=%prefix%permission channel role copy channel <role, role>
command.permission.channel.role.copy.channel.description=Copies permissions of a role bound to a channel to an entity bound to a channel


command.permission.channel.role.copy.channel.user.syntax=%prefix%permission channel role copy channel user <textChannel*> <role*> <textChannel*> <user*>
command.permission.channel.role.copy.channel.user.description=Copies permissions of a role bound to a channel to a user bound to a channel
command.permission.channel.role.copy.channel.user.response1=Copied **%permissionCount%** permission from `%role%` in **%channel1%** to **%user%** in **%channel2%**
command.permission.channel.role.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from `%role%` in **%channel1%** to **%user%** in **%channel2%**
command.permission.channel.role.copy.channel.user.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.textchannel%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%permission channel role copy channel user #admins @Admin #bots @ToxicMushroom` Copies the permissions of the admin role bound to #admins to @ToxicMushroom bound to #bots\
  \n- `%prefix%permission channel role copy channel user #mods @Mod #bots @ToxicMushroom` Copies the permissions of the admin role bound to #mods to @ToxicMushroom bound to #bots


command.permission.channel.role.copy.channel.role.syntax=%prefix%permission channel role copy channel role <channel*> <role*> <channel*> <role*>
command.permission.channel.role.copy.channel.role.description=Copies permissions of a role bound to a channel to a role bound to a channel
command.permission.channel.role.copy.channel.role.response1=Copied **%permissionCount%** permission from `%role1%` in **%channel1%** to `%role2%` in **%channel2%**
command.permission.channel.role.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from `%role1%` in **%channel1%** to `%role2%` in **%channel2%**
command.permission.channel.role.copy.channel.role.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%permission channel role copy channel role #bots @Admin #admins @Admin` Copies the permissions of the admin role bound to #bots to the admin role bound to #admins\
  \n- `%prefix%permission channel role copy channel role #bots @Admin #mods @Mod` Copies the permissions of the admin role bound to #bots to the mods role bound to #mods


command.permission.channel.role.clear.syntax=%prefix%permission channel role clear <textChannel*> <role*>
command.permission.channel.role.clear.description=Clears the permissions of a role bound to a channel
command.permission.channel.role.clear.response1=Permissions for `%role%` in **%channel%** have been cleared
command.permission.channel.role.clear.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%permission channel role clear #bots @Admin` Clears the permissions of the admin role bound to #bots


command.permission.channel.user.syntax=%prefix%permission channel user <set, view, copy, clear>
command.permission.channel.user.description=Manages the permissions of users bound to a channel


command.permission.channel.user.set.syntax=%prefix%permission channel user set <textChannel*> <user*> <permissionNode*> <permState*>
command.permission.channel.user.set.description=Sets the permissions of a user bound to a channel
command.permission.channel.user.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for **%user%** in **%channel%**
command.permission.channel.user.set.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.permissionnode%\
  \n%help.arg.permstate%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%permission channel user set #bots @ToxicMushroom deniedFilters.* true` Allows @ToxicMushroom to user all of deniedFilters' subcommands in #bots


command.permission.channel.user.view.syntax=%prefix%permission channel user view <textChannel*> <user*> [permissionNode*]
command.permission.channel.user.view.description=Shows info of a user bound to a channel
command.permission.channel.user.view.response1.title=Permissions of **%user%** in **%channel%** that match `%permissionNode%`
command.permission.channel.user.view.help=.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.textchannel%\
  \n%help.arg.permissionnode%\
  \nExamples:\
  \n- `%prefix%permission user view #bots @ToxicMushroom` Shows all permission states of @ToxicMushroom in #bots\
  \n- `%prefix%permission user view #bots @ToxicMushroom deniedFilters.*` Shows the permission states that match deniedFilters.* of @ToxicMushroom in #bots



command.permission.channel.user.copy.syntax=%prefix%permission channel user copy <user, role, channel>


command.permission.channel.user.copy.user.syntax=%prefix%permission user copy user <user*> <role*> <user*>
command.permission.channel.user.copy.user.description=Copies the permissions of a user bound to a channel to a user
command.permission.channel.user.copy.user.response1=Copied **%permissionCount%** permission from **%user1%** in **%channel%** to **%user2%**
command.permission.channel.user.copy.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** in **%channel%** to **%user2%**
command.permission.channel.user.copy.user.help=Args:\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%permission channel user copy user #bots @ToxicMushroom @YingHamster` Copies the permissions of @ToxicMushroom bound to #bots to @



command.permission.channel.user.copy.role.syntax=%prefix%permission channel user copy role <textChannel*> <user*> <role*>
command.permission.channel.user.copy.role.description=Copies the permissions of a user bound to a channel to a role
command.permission.channel.user.copy.role.response1=Copied **%permissionCount%** permission from **%user%** in **%channel%** to `%role%`
command.permission.channel.user.copy.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** in **%channel%** to `%role%`
command.permission.channel.user.copy.role.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.user%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%permission channel user copy role #bots @ToxicMushroom @Admin` Copies the permissions of @ToxicMushroom bound to #bots to the admin role


command.permission.channel.user.copy.channel.syntax=%prefix%permission channel user copy channel <role, role>
command.permission.channel.user.copy.channel.description=Copies permissions of a user bound to a channel to an entity bound to a channel


command.permission.channel.user.copy.channel.user.syntax=%prefix%permission channel user copy channel user <textChannel*> <user*> <textChannel*> <user*>
command.permission.channel.user.copy.channel.user.description=Copies permissions of a user bound to a channel to a user bound to a channel
command.permission.channel.user.copy.channel.user.response1=Copied **%permissionCount%** permission from **%user1%** in **%channel1%** to **%user2%** in **%channel2%**
command.permission.channel.user.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** in **%channel1%** to **%user2%** in **%channel2%**
command.permission.channel.user.copy.channel.user.help=Args:\
  \n%help.arg.textchannel%\
  \n%help.arg.user%\
  \nExamples:\
  \n- `%prefix%permission channel user copy channel user #bots @YingHamster #bots @ToxicMushroom` Copies the permissions of @YingHamster bound to #bots to @ToxicMushroom bound to #bots\


command.permission.channel.user.copy.channel.role.syntax=%prefix%permission channel user copy channel role <textChannel*> <user*> <textChannel*> <role*>
command.permission.channel.user.copy.channel.role.description=Copies permissions of a user bound to a channel to a role bound to a channel
command.permission.channel.user.copy.channel.role.response1=Copied **%permissionCount%** permission from **%user%** in **%channel1%** to `%role%` in **%channel2%**
command.permission.channel.user.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** in **%channel1%** to `%role%` in **%channel2%**
command.permission.channel.user.copy.channel.role.help=Args:\
  \n%help.arg.role%\
  \n%help.arg.user%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%permission channel user copy channel role #bots @ToxicMushroom #bots @Admin` Copies the permissions of @ToxicMushroom role bound to #bots to the admin role bound to #admins\


command.permission.channel.user.clear.syntax=%prefix%permission channel user clear <textChannel*> <user*>
command.permission.channel.user.clear.description=Clears the permissions of a user bound to a channel
command.permission.channel.user.clear.response1=Permissions for **%user%** in **%channel%** have been cleared
command.permission.channel.user.clear.help=Args:\
  \n%help.arg.user%\
  \n%help.arg.textchannel%\
  \nExamples:\
  \n- `%prefix%permission channel user clear #bots @ToxicMushroom` Clears the permissions of @ToxicMushroom in #bots



help.arg.permstate=`permState` Permission state can be `allow`, `deny` or `default`


help.arg.filter=`filter` A filter can be specified with text
help.arg.filter.examples=\n- `someword` (will match "someword")


help.arg.filterindex=`filterIndex` The index of a filter is a positive numeral value


help.arg.filtergroup=`filterGroup` A filtergroup is created and managed with `>filterGroup`, you can reference it by name afterwards


help.arg.timestamp=`timestamp` A timestamp declares a position of time `hh:mm:ss`
help.arg.timestamp.examples=If we want to use 1 minute and 30 seconds as timestamp:\
  \n- `1:30`\
  \n- `01:30`\
  \n- `00:01:30`\
  \n- `00:00:90`\
  \n- `00:90`\
  \n- `90`


help.arg.trackindex=`trackIndex` This is a positive numeral value which indicates the position in the queue of a track (0 is playing, higher is further in queue)
help.arg.trackindex.examples=- `0` (is the playing track)\
  \n- `1` (is the track that is next in queue to be played)\
  \n- `2` (is the track that is second in queue to be played)


help.arg.volume=`volume` Volume is a positive numeral value ranging from 0 to 1000 (100 is default)


help.arg.voicechannel=`voiceChannel` A voiceChannel can be specified by name, mention or id
help.arg.voicechannel.examples=If we want to use music as voiceChannel we can use of the following methods:\
  \n- `#music` (the actual mention format is <#id> <-> <#340081887265685505>, discord wont highlight this mention)`\
  \n- `music` (you can have multiple channels named music)`\
  \n- `340081887265685505` **recommended** (this is a voiceChannelId)


help.arg.textchannel=`textChannel` A textChannel can be specified by name, mention or id
help.arg.textchannel.examples=If we want to use #bots as channel we can use of the following methods:\
  \n- `#bots` **recommended** (the actual mention format is <#id> <-> <#456055962004881408>)`\
  \n- `bots` (You can have multiple channels named bots)`\
  \n- `456055962004881408` **recommended** (this is a channelId)


help.arg.commandnode=`commandNode` A commandNode can be specified by commandName + . + subCommandName (ect)
help.arg.commandnode.examples=- `ping` matches the PingCommand\
  \n- `play.yt` matches the youtube subcommand of the PlayCommand\
  \n- `permission.*` matches all the subCommands of the PermissionCommand\
  \n- `*` matches all the permissions


help.arg.timeperiod=`timePeriod` See examples
help.arg.timeperiod.examples=- `day` (current time minus one day until current time)\
  \n- `today` (time of start of today until current time)\
  \n- `week` (current time minus one week until current time)\
  \n- `thisweek` (time of start of week until current time)\
  \n- `month` (current time minus one month until current time)\
  \n- `thismonth` (time of start of month until current time)\
  \n- `year` (current time minus one year until current time)\
  \n- `thisyear` (time of start of year until current time)\
  \n- `all` (0 until current time)


help.arg.attachment=`attachment` An attachment is not text but has to be added in the discord client by pressing the + icon next to the message field


help.arg.song=`song` Can be specified by the title of a song


help.arg.spotifyLink=`spotifyLink` Can be specified by spotify url or uri
help.arg.spotifyLink.examples=- `https://open.spotify.com/track/6j8ZhFIEf5n2zpdsmwAhH0?si=2FVyvwyzS_ysbgbIPXRjlQ` links to track\
  \n- `spotify:track:6j8ZhFIEf5n2zpdsmwAhH0` link to track\
  \n- `https://open.spotify.com/album/63yDWANDu5uL0m3jdW761V?si=6V2pRsw-SrCr27WDgQa9OQ` link to album\
  \n- `spotify:album:63yDWANDu5uL0m3jdW761V` link to album\
  \n- `https://open.spotify.com/playlist/53ITfM1lJqDu1PK9ytY0It?si=ArXTfuyfQV-qjCxhYzR01A` link to playlist\
  \n- `spotify:playlist:53ITfM1lJqDu1PK9ytY0It` link to playlist


help.arg.url=`url` A url is can be of this format protocol://sub.domain.tld:port/location.filetype?query=value
help.arg.url.examples=- `https://melijn.com/` url to melijn's homepage (same as https://melijn.com:443/index.php)


help.arg.number=`number` sequence of figures
help.arg.number.examples=- `5` represents the number five


help.arg.int=`int` (integer) sequence of figures
help.arg.int.examples=- `5` represents the number five


help.arg.string=`string` sequence of characters
help.arg.string.examples=- `abc` is a string


help.arg.slowmodedelay=`slowModeDelay` positive number which represents the amount of seconds of delay

help.arg.boolean=`boolean` defines a state between 2 possible values (on or off | true or false)
help.arg.boolean.examples=- `true` positive state, `false` negative state\
  - `enable` positive state, `disable` negative state\
  - `enabled` positive state, `disabled` negative state\
  - `yes` positive state, `no` negative state\
  - `on` positive state, `off` negative state\
  - `positive` positive state, `negative` negative state\
  - `+` positve state, `-` negative state


help.arg.color=`color` Colors are represented by hex values with a # prefix
help.arg.color.examples=If we want to use the color white:\
  \n- `#FFFFFF`


help.arg.user=`user` A user can be specified by (nick)name, first part of their (nick)name, id or mention
help.arg.user.examples=If we want to use ToxicMushroom#2610 as user we can use one of the following methods:\
  \n- `@ToxicMushroom` **Recommended** (the actual mention format is <@id> <-> `<@231459866630291459>`)\
  \n- `ToxicMushroom#2610` **Recommended**\
  \n- `231459866630291459` **Recommended** (this is a userId)\
  \n- `ToxicMushroom` **not recommended** (this doesn't work if more then one users have this name)\
  \n- `Toxic` **not recommended** (this doesn't work if more users have toxic in their name)


help.arg.imageurl=`imageUrl` An imageUrl can be of this format protocol://sub.domain.tld:port/location.filetype?query=value with filtype as an imagetype like jpg, png, ect
help.arg.imageurl.examples=- `https://purr.objects-us-east-1.dream.io/i/bqzJ9.jpg` url to cat


help.arg.coloroffset=`colorOffset` A color offset is a value between -128 and 128 (try to see effects)


help.arg.gifquality=`gifQuality` The quality ranges from 1 to 20 with 1 being best and slowest (5 default)


help.arg.fps=`fps` The amount of frames per second the gif should display, positive numeral value


help.arg.word=`word` A word is text without spaces


help.arg.timezone=`timezone` Please use a timezone out of this list: https://melijn.com/timezones
help.arg.timezone.examples=- `GMT` Greenwich Mean Time\
  \n- `Europe/Brussels` GMT+01:00 or GMT+02:00 (depends on what day of year since it has summer and winter hours)\
  \n- `PST` GMT-07:00


help.arg.member=`member` A user can be specified by (nick)name, first part of their (nick)name, id or mention.
help.arg.member.examples=If we want to use ToxicMushroom#2610 as user we can use one of the following methods:\
  \n- `@ToxicMushroom` **Recommended** (the actual mention format is <@id> <-> <@231459866630291459>`\
  \n- `ToxicMushroom#2610` **Recommended**\
  \n- `231459866630291459` **Recommended** (this is a userId)\
  \n- `ToxicMushroom` **not recommended** (this doesn't work if more then one users have this name)\
  \n- `Toxic` **not recommended** (this doesn't work if more users have toxic in their name)


help.arg.deldays=`delDays` The amount of days that messages will be deleted 0-7


help.arg.softbanreason=`softBanReason` reason for the softban, "/" by default


help.arg.verificationcode=`verificationCode` The code that users need to type to become verified


help.arg.verificationtype=`verificationType` one of the following types: CODE, GOOGLE_RECAPTCHAV2, REACTION, NONE
help.arg.verificationtype.examples=- `CODE` Users have to verify using the verificationCode\
  \n- `GOOGLE_RECAPTCHAV2` Users have to verify using https://melijn.com/recaptcha and pasting the received code in the verification channel\
  \n- `REACTION` Users have to react with the verificationEmoteji\
  \n- `NONE` Users can't verify themselves
help.arg.emote=`emote` Something :pog: or some other custom stuff, can be identified by id or by using it
help.arg.emoji=`emoji` 😂
help.arg.ccname=`ccName` the name for a custom command, also the way the custom command is going to be executed
help.arg.pointstriggertype=`pointsTriggerType` one of the following types: FILTERED_MESSAGE, WARN, SPAM, MANY_MENTIONS, UNVERIFIED_DURATION, HOISTING
help.arg.pointstriggertype.examples=- `FILTERED_MESSAGE` Triggers when filtergroups are violated\
  \n- `WARN` Triggers when a user is warned\
  \n- `SPAM` Triggers when a user spams\
  \n- `MANY_MENTIONS` Triggers when a message contains many mentions\
  \n- `UNVERIFIED_DURATION` Triggers when the user has been unverified for set time\
  \n- `HOISTING` Triggers when the user hoists their username
help.arg.ccresponse=`ccResponse` the content of the response of a custom command (can be changed later)
help.arg.ccid=`ccId` Id of a custom command, can be viewed with `%prefix%customCommand list`
help.arg.ccalias=`ccAlias` alias to execute the custom command with


help.arg.ccaliasindex=`ccAliasIndex` alias index can be viewed with %prefix%customCommand aliases list


help.arg.ccdescription=`ccDescription` some text that explains what the custom command does


help.arg.ccchance=`ccChance` Chance that the command will be executed when multiple custom commands have the same name


help.arg.cccontent=`ccContent` the normal message of the custom commands


help.arg.embeddescription=`embedDescription` description of the embed


help.arg.embedtitle=`embedTitle` title of the embed


help.arg.embedtitleurl=`embedTitleUrl` title url of the embed


help.arg.embedauthor=`embedAuthor` author of the embed


help.arg.footertext=`footer` footer of the embed


help.arg.fieldtitle=`fieldTitle` field title of the embed


help.arg.fieldvalue=`fieldValue` field value of the embed


help.arg.fieldindex=`fieldIndex` field index of the embed


help.arg.state=`state`\nPositive states are `on`, `enable`, `enabled`, `true`, `yes`\nNegative states are `off`, `disable`, `disabled`, `false`, `no`


help.arg.filename=`fileName` filenames should be name.fileextension
help.arg.filename.examples=- `cat.jpg`


help.arg.channeltype=`channelType` ChannelType can be `JOIN`, `LEAVE`, `SELFROLE`, `PRE_VERIFICATION`, `BIRTHDAY` or `VERIFICATION`


help.arg.punishmenttype=`punishmentType` PunishmentType can be `BAN`, `MUTE`, `KICK`, `WARN` or `SOFTBAN`


help.arg.reason=`reason` reason for something, default reason is "/"


help.arg.timeduration=`timeDuration` needs to be a number followed by a timeunit, timeunits are y, M, w, d, h, m, s 
help.arg.timeduration.examples=- `5d 2h` 5 days and 2 hours\
  \n- `1M 10m` 1 Month 10 minutes\
  \n- `1 M 10 m` 1 Month 10 minutes


help.arg.logchanneltypenode=`logChannelTypeNode` logChannelTypes are: permban, tempban, softban, unban, permmute, tempmute, unmute, kick, warn, other-deleted-message, self-deleted-message, purged-message, filtered-message, verification, editited-message, reaction, attachment, music, bot
help.arg.logchanneltypenode.examples=- `ban` stands for permban, tempban, softban, unban\
  \n- `all` stands for all types\
  \n- `deleted-message` stands for other-deleted-message, self-deleted-message, purged-message, filtered-message\
  \n- `mute` stands for permmute, tempmute, unmute\
  \n- `punishment` stands for permban, tempban, softban, unban,  permmute, tempmute, unmute, kick, warn


help.arg.roletype=`roleType` roleTypes are `MUTE`, `UNVERIFIED`, `JOIN`, `BIRTHDAY`


help.arg.gaintype=`gainType` gainTypes are `BASS`, `DEFAULT`


help.arg.role=`role` A role can be specified by name, id or mention.
help.arg.role.examples=If we want to use Admin as role we can use one of the following methods:\
  \n- `@Admin` (the actual mention format is <@id> <-> <@231459866630291459>)\
  \n- `343674598216302592` (this is a roleId, can be obtained with `%prefix%roles` or `%prefix%roleInfo <role*>`)\
  \n- `Admin` **not recommended**  (this doesn't work if more then one role has this name)\
  \nIf we want to use the everyone role (everyone has this role but is invisible) we can use one of the following methods:\
  \n- `340081887265685504` (this is also the guildId)\
  \n- `everyone` **not recommended** (this doesn't work if more then one role has this name)

help.arg.prefix=`prefix` the character you put in front of the command names so it doesn't trigger responses by chatting


help.arg.milliseconds=`milliseconds` number that represents an amount of milliseconds


help.arg.commandstate=`commandState` command states are: ENABLED, DISABLED


help.arg.channelcommandstate=`channelCommandState` channel command states are: ENABLED, DISABLED, DEFAULT


help.arg.text=`text` t e x t


help.arg.command=`command` A command can be specified by a sequence of command names and their subcommand names
help.arg.command.examples=- `perm user set` <-> selects the set argument of the user argument of the perm command\
  \n- `help` <-> selects the help command


help.arg.language=`language` available languages are: EN (if you want to translate the messages or improve existing once, contact me)


help.arg.permissionnode=`permissionNode` permission node is like command.subcommand... a * represents all depth levels
help.arg.permissionnode.examples=- `*` all permissions\
  \n- `play.*` all play subcommands\
  \n- `perm.user.set` only the permission of the set subcommand of the user subcommand of the permission command


help.arg.birthday=`birthday` A date with a possible year
help.arg.birthday.examples=- `25/12/1999` this is a date


help.var.user=`{user}` shows the full user tag ex: ToxicMushroom#2610
help.var.usertag=`{userTag}` shows the full user tag ex: ToxicMushroom#2610
help.var.usermention=`{userMention}` mentions the user ex: @ToxicMushroom


help.var.userid=`{userId}` shows the userId ex: 231459866630291459


help.var.username=`{username}` shows the username ex: ToxicMushroom


help.var.voicechannelid=`{voiceChannelId}` shows the voiceChannel the user is in, ex: 344081173212823553 else null


help.var.nickname=`{nickname}` shows the nickname of the user, ex: Merlin else null


help.var.hasnickname=`{hasNickname}` shows true the if the user has a nickname, shows false otherwise


help.var.effectivename=`{effectiveName}` shows the effective name of the user nickname if the user has a nickname otherwise the username


help.var.effectiveavatarurl=`{effectiveAvatarUrl}` shows the avatar url of the user, default avatar url if user has none


help.var.avatarurl=`{avatarUrl}` shows the avatar url of the user, null otherwise


help.var.discriminator=`{discriminator}` shows the discriminator of the user, ex: 2610


help.var.guildname=`{guildName}` shows the guildName of the server


help.var.guildid=`{guildId}` shows the guildId of the server


help.var.membercount=`{memberCount}` shows the memberCount of the server


help.var.user.isbot=`{user.isBot}` shows true if the user is a bot, shows false otherwise


help.var.isuser=`{isUser}` shows true with no input, {isUser:user*} retrieves the user and checks if it exists, shows true if so else false


help.var.ismember=`{isMember}` shows true with no input, {isMember:user*} retrieves the user and checks if it is a member exists, shows true if so else false


help.var.argscount=`{argsCount}` shows the amount of args


help.var.arg=`{arg}` needs an argument, {arg:0} shows the first arg


help.var.rawArg=`{rawArg}` Shows the raw argument string


help.var.startofbirthday=`{startOfBirthday}` Shows the exact date and time when the birthday started


help.var.endofbirthday=`{endOfBirthday}` Shows the exact date and time when the birthday will end


help.var.age=`{age}` Shows the new age of this user


help.var.birthdayrole=`{birthdayRole}` Shows the role that the user has received for it's birthday


help.var.currenttimemillis=`{currentTimeMillis}` Shows the current milliseconds since epoch


help.var.currentdatetime=`{currentDateTime}` Shows the current datetime, {currentDateTime:user*} Shows the current datetime for the timezone of the specified user