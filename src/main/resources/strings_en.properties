language.name=English
language.code=en
empty=empty
yes=yes
no=no
or=or
message.botpermission.missing=🔒 You are missing the following permission: `%permission%`
message.command.usage=Correct usage: `%syntax%`
message.help.state=Positive states are `on`, `enable`, `enabled`, `true`, `yes`.\nNegative states are `off`, `disable`, `disabled`, `false`, `no`.
message.notaguildid=**%input%** is not a valid guildId
message.numbertobig=**%arg%** is to big
message.banning=Banning..

message.unknown.timeunit=**arg** is not a valid timeunit
message.unknown.permstate=**%arg%** is not a valid Permission State, states are: Allow, Default, Deny
message.unknown.user=**%arg%** is not a valid user
message.unknown.role=`%arg%` is not a valid role
message.unknown.permissionnode=**%arg%** is not a valid permission node
message.unknown.commandnode=**%arg%** is not a valid command node
message.unknown.commandstate=**%arg%** is not a valid Command State, states are: Enabled, Disabled
message.unknown.channelcommandstate=**%arg%** is not a valid Command State, states are: Enabled, Default, Disabled
message.unknown.punishmenttype=**%arg%** is not a valid punishment type
message.unknown.verificationtype=**%arg%** is not a valid verification type
message.ccremoved=The custom command which you had selected has been removed, select with `%prefix%cc select <ccId>`
message.noccselected=You don't have a custom command selected, select with `%prefix%cc select <ccId>`
message.notconfirm=The arguments do not match "confirm"


message.cooldown=You have to wait **%cooldown%** more seconds



message.punishment.kick.description=\nKick Author: %kickAuthor%\
  \nKick Author Id: %kickAuthorId%\
  \nKicked: %kicked%\
  \nKickedId: %kickedId%\
  \nReason: %reason%\
  \nTime of kick: %moment%
message.punishment.kick.author=Kicked by %user% %spaces%

message.punishment.warn.description=\nWarn Author: %warnAuthor%\
  \nWarn Author Id: %warnAuthorId%\
  \nWarned: %warned%\
  \nWarbedId: %warnedId%\
  \nReason: %reason%\
  \nTime of warn: %moment%
message.punishment.warn.author=Warned by %user% %spaces%


message.punishment.mute.description=\nMute Author: %muteAuthor%\
  \nMute Author Id: %muteAuthorId%\
  \nMuted: %muted%\
  \nMutedId: %mutedId%\
  \nReason: %reason%\
  \nDuration: %duration%\
  \nStart of mute: %startTime%\
  \nEnd of mute: %endTime%
message.punishment.mute.author=Muted by %user% %spaces%

message.punishment.unmute.description=\nMute Author: %muteAuthor%\
  \nMute Author Id: %muteAuthorId%\
  \nUnmute Author Id: %unMuteAuthorId%\
  \nUnmuted: %unMuted%\
  \nUnmutedId: %unMutedId%\
  \nMute Reason: %muteReason%\
  \nUnmute Reason: %unmuteReason%\
  \nDuration: %duration%\
  \nStart of mute: %startTime%\
  \nEnd of mute: %endTime%
message.punishment.unmute.author=Unmuted by %user% %spaces%

message.punishment.ban.description=\nBan Author: %banAuthor%\
  \nBan Author Id: %banAuthorId%\
  \nBanned: %banned%\
  \nBannedId: %bannedId%\
  \nReason: %reason%\
  \nDuration: %duration%\
  \nStart of ban: %startTime%\
  \nEnd of ban: %endTime%
message.punishment.ban.author=Banned by %user% %spaces%

message.punishment.unban.description=\nBan Author: %banAuthor%\
  \nBan Author Id: %banAuthorId%\
  \nUnban Author Id: %unBanAuthorId%\
  \nUnbanned: %unBanned%\
  \nUnbannedId: %unBannedId%\
  \nBan Reason: %banReason%\
  \nUnban Reason: %unbanReason%\
  \nDuration: %duration%\
  \nStart of ban: %startTime%\
  \nEnd of ban: %endTime%
message.punishment.unban.author=Unbanned by %user% %spaces%

message.punishment.extra.dm=\nExtra: Target had dm's disabled
message.punishment.extra.bot=\nExtra: Target is a bot
message.punishment.description.nlc=\nGuild: %guildName%\
  \nGuildId: %guildId%


command.setverificationcode.syntax=%prefix%setVerificationCode [code* | null]
command.setverificationcode.description=Sets or shows the verification code
command.setverificationcode.show.unset=The verification code is unset
command.setverificationcode.show.set=The verification code is set to:\n%code%
command.setverificationcode.unset=The verification code has been unset
command.setverificationcode.set=The verification code has been set to:\n%arg%

command.setmaxuserverificationflowrate.syntax=%prefix%setMaxUserVerificationFlowRate [users/h* | null]
command.setmaxuserverificationflowrate.description=Sets or shows the verification code
command.setmaxuserverificationflowrate.show.unset=The MaxUserVerificationFlowRate is unset
command.setmaxuserverificationflowrate.show.set=The MaxUserVerificationFlowRate is set to **%rate%** users/hour
command.setmaxuserverificationflowrate.unset=The MaxUserVerificationFlowRate has been unset
command.setmaxuserverificationflowrate.set=The MaxUserVerificationFlowRate has been set to **%rate%** users/hour

command.setverificationtype.syntax=%prefix%setVerificationType [verificationType* | null]
command.setverificationtype.description=Sets or shows the verification code
command.setverificationtype.show.unset=The verification type is unset
command.setverificationtype.show.set=The verification type is set to:\n%type%
command.setverificationtype.unset=The verification type has been unset
command.setverificationtype.set=The verification type has been set to:\n%arg%


command.setverificationemoteji.syntax=%prefix%setVerificationEmoteji [emote* | emoji* | null]
command.setverificationemoteji.description=Sets or shows the verification code
command.setverificationemoteji.show.unset=The verification emoteji is unset
command.setverificationemoteji.show.set=The verification emoteji is set to:\n%emoteji%
command.setverificationemoteji.unset=The verification emoteji has been unset
command.setverificationemoteji.set.emoji=The verification emoteji has been set to emote(name: **%emoteName%** | id: **%emoteId%**)
command.setverificationemoteji.set.emote=The verification emoteji has been set to %arg%


command.selfrole.syntax=%prefix%selfRole <add, remove, list>
command.selfrole.description=Main command for managing selfroles

command.selfrole.add.syntax=%prefix%selfRole add <emote | emoji> <role>
command.selfrole.add.success=Added the selfrole **%emoteji%** -> **%role%**
command.selfrole.add.description=Adds a selfrole

command.selfrole.remove.syntax=%prefix%selfRole remove <emote | emoji>
command.selfrole.remove.description=Removes a selfrole
command.selfrole.remove.success=Removed the selfrole **%emoteName%** -> **%role%**

command.selfrole.list.syntax=%prefix%selfRole list
command.selfrole.list.description=Shows the list of selfroles



command.customcommand.syntax=%prefix%customCommand <list, add, remove, select, aliases, setChance, setPrefixState, setDescription>
command.customcommand.description=Main command for managing custom commands

command.customcommand.list.syntax=%prefix%customCommand list
command.customcommand.list.description=Shows the list of customCommands
command.customcommand.list.title=List of custom commands:

command.customcommand.add.syntax=%prefix%customCommand add <name> > <description>
command.customcommand.add.description=Adds a custom commannd
command.customcommand.add.success=Added the custom command (name: **%ccName%** | id: **%id%**) with content:\n%content%

command.customcommand.remove.syntax=%prefix%customCommand remove <ccId>
command.customcommand.remove.description=Removes a custom command
command.customcommand.remove.success=Removed the custom command (name: **%ccName%** | id: **%id%**)

command.customcommand.select.syntax=%prefix%customCommand select <ccId>
command.customcommand.select.description=Selects a custom command
command.customcommand.select.selected=You've selected the custom command (name: **%ccName%** | id: **%id%**)

command.customcommand.aliases.syntax=%prefix%customCommand aliases <add, remove, list>
command.customcommand.aliases.description=Main command for managing aliases for the selected custom command

command.customcommand.aliases.add.syntax=%prefix%customCommand aliases add <alias>
command.customcommand.aliases.add.description=Adds an alias to the selected custom command
command.customcommand.aliases.add.success=Added **arg%** as alias for the custom command (name: **%ccName%** | id: **%id%**)

command.customcommand.aliases.remove.syntax=%prefix%customCommand aliases remove <index>
command.customcommand.aliases.remove.description=Removes the alias at the given position from the selected custom command
command.customcommand.aliases.remove.success=Removed alias (**%arg%** | position: **%position%**) from the custom command (name: **%ccName%** | id: **%id%**)

command.customcommand.aliases.list.syntax=%prefix%customCommand select <ccId>
command.customcommand.aliases.list.description=Shows the list of aliases of the selected custom command
command.customcommand.aliases.list.title=List of aliases for custom command (name: **%ccName%** | id: **%id%**):

command.customcommand.setdescription.description=Sets a description for the selected custom command
command.customcommand.setdescription.syntax=%prefix%customCommand setDescription <description>
command.customcommand.setdescription.success=I've set the description of the custom command (name: **%ccName%** | id: **%id%**) to:\n%arg%

command.customcommand.setchance.description=Sets the chance of execution for the selected custom command
command.customcommand.setchance.syntax=%prefix%customCommand setChance <chance>
command.customcommand.setchance.success=I've set the chance of the custom command (name: **%ccName%** | id: **%id%**) to:\n%arg%

command.customcommand.setprefixstate.description=Turns the prefix on or of for the selected custom command
command.customcommand.setprefixstate.syntax=%prefix%customCommand setPrefixState <state>
command.customcommand.setprefixstate.success=I've set the prefix state for the custom command (name: **%ccName%** | id: **%id%**) to:\n%arg%






message.content.set.unset=Content of **%type%** has been unset
message.content.set=Content of **%type%** has been set to:\n%arg%
message.content.show.unset=Content of **%type%** is unset
message.content.show.set=Content of **%type%** is set to:\n%content%

message.embed.description.unset=Embed description of **%type%** has been unset
message.embed.description.set=Embed description of **%type%** has been set to:\n%arg%
message.embed.description.show.unset=Embed description of **%type%** is unset
message.embed.description.show.set=Embed description of **%type%** is set to:\n%content%

message.embed.clear=Removed all embed information from the **%type%**

message.attachments.list.title=Attachments of **type**:
message.attachments.list.empty=The **%type%** has no attachments
message.attachments.add=The content of **%type%** has been set to:\n%arg%
message.attachments.remove.notanattachment=The content of **%type%** has been unset
message.attachments.remove.success=The attachment **%file%** has been removed from the **%type%**
message.attachments.add.success=The attachment '%file% - [%attachment%]' has been added to the **%type%**

message.embed.color.unset=Embed color of **%type%** has been unset
message.embed.color.set=Embed color of **%type%** has been set to %arg%
message.embed.color.show.unset=Embed color of **%type%** is unset
message.embed.color.show.set=Embed color of **%type%** is set to %color%

message.embed.title.unset=Embed title of **%type%** has been unset
message.embed.title.set=Embed title of **%type%** has been set to %arg%
message.embed.title.show.unset=Embed title of **%type%** is unset
message.embed.title.show.set=Embed title of **%type%** is set to %title%

message.embed.titleurl.unset=Embed title url of **%type%** has been unset
message.embed.titleurl.set=Embed title url of **%type%** has been set to %arg%
message.embed.titleurl.show.unset=Embed title url of **%type%** is unset
message.embed.titleurl.show.set=Embed title url of **%type%** is set to %url%

message.embed.authorurl.unset=Embed author url of **%type%** has been unset
message.embed.authorurl.set=Embed author url of **%type%** has been set to %arg%
message.embed.authorurl.show.unset=Embed author url of **%type%** is unset
message.embed.authorurl.show.set=Embed author url of **%type%** is set to %url%

message.embed.authoricon.unset=Embed author icon of **%type%** has been unset
message.embed.authoricon.set=Embed author icon of **%type%** has been set to %arg%
message.embed.authoricon.show.unset=Embed author icon of **%type%** is unset
message.embed.authoricon.show.set=Embed author icon of **%type%** is set to %url%

message.embed.authorname.unset=Embed author of **%type%** has been unset
message.embed.authorname.set=Embed author of **%type%** has been set to %arg%
message.embed.authorname.show.unset=Embed author of **%type%** is unset
message.embed.authorname.show.set=Embed author of **%type%** is set to %name%

message.embed.thumbnail.unset=Embed thumbnail of **%type%** has been unset
message.embed.thumbnail.set=Embed thumbnail of **%type%** has been set to %arg%
message.embed.thumbnail.show.unset=Embed thumbnail of **%type%** is unset
message.embed.thumbnail.show.set=Embed thumbnail of **%type%** is set to %url%

message.embed.image.unset=Embed image of **%type%** has been unset
message.embed.image.set=Embed image of **%type%** has been set to %arg%
message.embed.image.show.unset=Embed image of **%type%** is unset
message.embed.image.show.set=Embed image of **%type%** is set to %url%


message.embed.footer.unset=Embed footer of **%type%** has been unset
message.embed.footer.set=Embed footer of **%type%** has been set to %arg%
message.embed.footer.show.unset=Embed footer of **%type%** is unset
message.embed.footer.show.set=Embed footer of **%type%** is set to %title%

message.embed.footericon.unset=Embed footer icon of **%type%** has been unset
message.embed.footericon.set=Embed footer icon of **%type%** has been set to %arg%
message.embed.footericon.show.unset=Embed footer icon of **%type%** is unset
message.embed.footericon.show.set=Embed footer icon of **%type%** is set to %url%

message.embed.field.add=Embed field added to **%type%** with the following attributes:```LDIF\
  \ntitle: %title%\
  \nvalue: %value%\
  \ninline: %inline%```

message.embed.fieldtitle.set=Embed field at index **%index%** for **%type%** has had it's title changed to:\
  \n%title%
message.embed.fieldvalue.set=Embed field at index **%index%** for **%type%** has had it's value changed to:\
  \n%title%
message.embed.fieldinline.set=Embed field at index **%index%** for **%type%** has had it's inline property changed to **%inline%**
message.embed.field.removed=Embed field at index **%index%** has been removed for **%type%**
message.embed.field.list.empty=The **%type%**'s embed has no fields
message.embed.field.list.title=Fields of **%type%**:

listener.message.deletion.log.title=Message deleted in %channel%
listener.message.deletion.log.description=```LDIF\
  \nSender: %messageAuthor%\
  \nSender Id: %messageAuthorId%\
  \nContent: %messageContent%\
  \nDeleter Id: %messageDeleterId%\
  \nSent Time: %sentTime%\
  \nDeleted Time: %deletedTime%```
listener.message.deletion.log.self.description=```LDIF\
  \nSender: %messageAuthor%\
  \nSender Id: %messageAuthorId%\
  \nContent: %messageContent%\
  \nSent Time: %sentTime%\
  \nDeleted Time: %deletedTime%```
listener.message.deletion.log.footer=Deleted by: %user%
listener.message.deletion.log.purged.footer=Purged by: %user%

listener.message.update.log.title=Message updated in %channel%
listener.message.update.log.description=```LDIF\
  \nUser: %user%\
  \nUser Id: %userId%\
  \nOld Content: %oldContent%\
  \nNew Content: %newContent%\
  \nSent Time: %sentTime%\
  \nEdited Time: %editedTime%```**[Message](%link%)**

listener.message.attachment.log.title=Attachment sent in %channel%
listener.message.attachment.log.description=```LDIF\
  \nUser Id: %userId%\
  \nMessage Id: %messageId%\
  \nAttachment: %attachmentUrl%\
  \nMoment: %moment%```**[Attachment](%attachmentUrl%) • [Message](%messageUrl%)**
listener.message.attachment.log.footer=Attached by: %user%

listener.message.reaction.log.title=Reaction added in %channel%
listener.message.reaction.emote.log.description=```LDIF\
  \nUser Id: %userId%\
  \nMessage Id: %messageId%\
  \nEmote: %emoteName%\
  \nEmote Id: %emoteId%\
  \nMoment: %moment%```**[Message](%messageUrl%) • [Emote](%emoteUrl%)**
listener.message.reaction.emoji.log.description=```LDIF\
  \nUser Id: %userId%\
  \nMessage Id: %messageId%\
  \nEmoji: %emoteName%\
  \nMoment: %moment%```**[Message](%messageUrl%) • [Emoji](%emoteUrl%)**
listener.message.reaction.log.footer=Reacted by: %user%

command.setchannel.syntax=%prefix%setChannel <channelType*> <channel*>
command.setchannel.description=Sets or shows a channel by it's type
command.setchannel.set=The %channelType%Channel has been set to **%channel%**
command.setchannel.unset=The %channelType%Channel has been unset
command.setchannel.show.set=The %channelType%Channel is set to **%channel%**
command.setchannel.show.unset=The %channelType%Channel is unset

command.history.syntax=%prefix%history <punishmentType*> <user*>
command.history.description=Shows you the history of punishments of a user
command.history.nohistory=**%user%** has no %typeList% history

command.kick.syntax=%prefix%kick <user*> [reason*]
command.kick.description=Kicks the target user, dms them information of the kick
command.kick.success=Kicked **%user%**, reason: ```%reason%```
command.kick.failure=Failed to kick **%user%**, cause: ```%cause%```

command.warn.syntax=%prefix%warns <user*> [reason*]
command.warn.description=Warnss the target user, dms them information of the warn
command.warn.success=Warned **%user%**, reason: ```%reason%```

command.unban.syntax=%prefix%unban <user*> [reason*]
command.unban.description=Unbans the target user, dms them information of the unban
command.unban.success=Unbanned **%user%**, reason: ```%reason%```
command.unban.failure=Failed to unban **%user%**, cause: ```%cause%```
command.unban.notbanned=**%user%** is not banned

command.ban.syntax=%prefix%ban <user*> [reason*]
command.ban.description=Bans the target user, dms them information of the ban
command.ban.cannotban=I cannot ban **%user%** because this user has an equal or higher role position relative to me
command.ban.success=Banned **%user%** for: ```%reason%```
command.ban.success.updated=Banned **%user%** for: ```%reason%```\
  \n*Active ban has been updated*
command.ban.failure=Banning **%user%** failed, cause: ```%cause%```

command.tempban.syntax=%prefix%tempBan <user*> <timeDuration*> [greater then sign (>)] [reason*]
command.tempban.description=Temporarily bans the target user, sends them a report of the reason, times, ect.. of the bans
command.tempban.help=If you remove Melijn from your server the unbanning will also be removed, take this into thought
command.tempban.cannotban=I cannot tempban **%user%** because this user has an equal or higher role position relative to me
command.tempban.success=Temporarily banned **%user%** until %endTime% for: ```%reason%```
command.tempban.success.updated=Temporarily banned **%user%** until %endTime% for: ```%reason%```\
  \n*Active ban has been updated*
command.tempban.failure=Banning **%user%** failed, cause: ```%cause%```

command.unmute.syntax=%prefix%unmute <user*> [reason*]
command.unmute.description=Unmutes the target user, dms them information of the unmute
command.unmute.success=Unmuted **%user%**, reason: ```%reason%```
command.unmute.failure=Failed to unmute **%user%**, cause: ```%cause%```
command.unmute.nomuterole=Please configure the muterole first using `%prefix%setRole mute <role*>`
command.unmute.notmuted=**%user%** is not muted

command.mute.syntax=%prefix%mute <user*> [reason*]
command.mute.description=Mutes the target user, dms them information of the mute
command.mute.cannotmute=I cannot mute **%user%** because this user has an equal or higher role position relative to me
command.mute.success=Muted **%user%** for: ```%reason%```
command.mute.success.updated=Muted **%user%** for: ```%reason%```\
  \n*Active mute has been updated*
command.mute.failure=Muting **%user%** failed, cause: ```%cause%```

command.tempmute.syntax=%prefix%tempMute <user*> <timeDuration*> [greater then sign (>)] [reason*]
command.tempmute.description=Temporarily mutes the target user, sends them a report of the reason, times, ect.. of the mute
command.tempmute.help=If you remove Melijn from your server the unmuteing will also be removed, take this into thought
command.tempmute.cannotmute=I cannot tempmute **%user%** because this user has an equal or higher role position relative to me
command.tempmute.success=Temporarily muted **%user%** until %endTime% for: ```%reason%```
command.tempmute.success.updated=Temporarily muted **%user%** until %endTime% for: ```%reason%```\
  \n*Active mute has been updated*
command.tempmute.failure=Muteing **%user%** failed, cause: ```%cause%```


command.setlogchannel.syntax=%prefix%setLogChannel <logChannelTypeNode*> [textChannel*]
command.setlogchannel.description=Sets log channels or shows them when only the logChannelTypeNode is provided
command.setlogchannel.show.set.single=The **%logChannelType%** log channel is set to **%channel%**
command.setlogchannel.show.unset.single=The **%logChannelType%** log channel is unset
command.setlogchannel.show.multiple=Settings of the **%channelCount%** log channels that match `%logChannelTypeNode%`
command.setlogchannel.set.multiple=The **%channelCount%** log channels that match `%logChannelTypeNode%` have been set to **%channel%**
command.setlogchannel.set.single=The **%logChannelType%** log channel has been set to **%channel%**
command.setlogchannel.unset.multiple=The **%channelCount%** log channels that match `%logChannelTypeNode%` have been unset
command.setlogchannel.unset.single=The **%logChannelType%** log channel has been unset

command.setrole.syntax=%prefix%setRole <roleType*> [role*]
command.setrole.description=Sets a role or shows the configured role when only the roleType is provided
command.setrole.show.set=The %roleType%Role is set to **%role%**
command.setrole.show.unset=The %roleType%Role is unset
command.setrole.set=The %roleType%Role has been set to **%role%**
command.setrole.unset=The %roleType%Role has been unset

command.prefixes.description=Command for managing server specific prefixes
command.prefixes.syntax=%prefix%prefixes <add, remove, view>
command.prefixes.help=You can have up to 5 prefixes
command.prefixes.add.syntax=%prefix%prefixes add <prefix*>
command.prefixes.add.response1=Added %prefix% as prefix
command.prefixes.remove.syntax=%prefix%prefixes remove <prefix*>
command.prefixes.remove.response1=Removed %prefix% as prefix
command.prefixes.view.syntax=%prefix%prefixes view
command.prefixes.view.response1.title=List of prefixes

command.privateprefixes.description=Command for managing user specific prefixes
command.privateprefixes.syntax=%prefix%privatePrefixes <add, remove, view>
command.privateprefixes.help=You can have up to 5 private prefixes
command.privateprefixes.add.syntax=%prefix%privatePrefixes add <prefix*>
command.privateprefixes.add.response1=Added %prefix% to your private prefixes
command.privateprefixes.remove.syntax=%prefix%privatePrefixes remove <prefix*>
command.privateprefixes.remove.response1=Removed %prefix% from your private prefixes
command.privateprefixes.view.syntax=%prefix%privatePrefixes view
command.privateprefixes.view.response1.title=List of private prefixes

command.setcooldown.description=Command for managing command cooldowns
command.setcooldown.syntax=%prefix%setCooldown <global, channel, info>
command.setcooldown.channel.syntax=%prefix%setCooldown channel <channel*> <commandNode*> <milliseconds*>
command.setcooldown.channel.response1=Set the cooldown for **%commandCount%** command matching `%commandNode%` to **%cooldown%ms** in **%channel%**
command.setcooldown.channel.response1.multiple=Set the cooldown for **%commandCount%** commands matching `%commandNode%` to **%cooldown%ms** in **%channel%**
command.setcooldown.global.syntax=%prefix%setCooldown global <commandNode*> <milliseconds*>
command.setcooldown.global.response1=Set the cooldown for **%commandCount%** command matching `%commandNode%` to **%cooldown%ms**²
command.setcooldown.global.response1.multiple=Set the cooldown for **%commandCount%** commands matching `%commandNode%` to **%cooldown%ms**²
command.setcooldown.info.syntax=%prefix%setCooldown info [channel*]
command.setcooldown.info.response1.title=List of cooldowns in **%channel%**
command.setcooldown.info.response2.title=List of global cooldowns

command.setcommandstate.description=Command for managing command states
command.setcommandstate.syntax=%prefix%setCommandState <global, channel, info>
command.setcommandstate.global.syntax=%prefix%setCommandState global <commandNode*> <commandState*>
command.setcommandstate.global.response1=Set **%commandCount%** command which matches `%commandNode%` to **%state%**
command.setcommandstate.global.response1.multiple=Set **%commandCount%** commands which match `%commandNode%` to **%state%**
command.setcommandstate.channel.syntax=%prefix%setCommandState channel <channel*> <commandNode*> <channelCommandState*>
command.setcommandstate.channel.response1=Set **%commandCount%** command in **%channel%** which matches `%commandNode%` to **%state%**
command.setcommandstate.channel.response1.multiple=Set **%commandCount%** commands in **%channel%** which match `%commandNode%` to **%state%**
command.setcommandstate.info.globaldisabled.response1=Disabled commands
command.setcommandstate.info.channelstate.response1=Command states in **%channel%**

command.ping.description=Shows network latency between bot and discord server
command.ping.syntax=%prefix%ping [pong] [dunste]
command.ping.response1.part1=🏓 Pong!\nGateway: %gatewayPing%ms
command.ping.response1.part2=\nRest: %restPing%ms\nSendMessage: %sendMessagePing%ms
command.ping.response1.part3=\nEditMessage: %editMessagePing%ms

command.ping.pong.response1=What are you doing in my swamp!
command.ping.pong.dunste.response1=🐓 Karlijn 🐓

command.setlanguage.description=Main command to configure my language for the server
command.setlanguage.syntax=%prefix%setLanguage [list | language* | null]
command.setlanguage.help=You can see all supported languages with `%prefix%setLanguage list`
command.setlanguage.currentlangresponse=My language is currently set to **%language%**
command.setlanguage.list.description=Shows all supported languages at this moment.\nYou can help translate the bot here: https://missing.link
command.setlanguage.list.response1=List of all supported languages:\n```INI\n%languageList%```
command.setlanguage.set.invalidarg=**%argument%** is not a valid language. Use `%prefix%setLanguage list` to see supported languages
command.setlanguage.set.success=My language has successfully been set to **%language%**
command.setlanguage.unset.success=My language has successfully been unset

command.setprivatelanguage.description=Main command to configure my language for the user
command.setprivatelanguage.syntax=%prefix%setPrivateLanguage [list | language* | null]
command.setprivatelanguage.help=You can see all supported languages with `%prefix%setPrivateLanguage list`
command.setprivatelanguage.unset.currentlangresponse=My language for you is currently unset
command.setprivatelanguage.currentlangresponse=My language for you is currently set to **%language%**
command.setprivatelanguage.set.invalidarg=**%argument%** is not a valid language. Use `%prefix%setPrivateLanguage list` to see supported languages
command.setprivatelanguage.set.success=My language for you has successfully been set to **%language%**

command.setembedstate.syntax=%prefix%setEmbedState [state*]
command.setembedstate.currentstateresponse=Embeds are currently **%disabledState%**
command.setembedstate.set.success=Embeds have successfully been **%disabledState%**

command.stats.syntax=%prefix%stats
command.stats.description=Shows the bot's, vps' and jvm's stats
command.stats.response.field1.title=Bot Stats
command.stats.response.field2.title=Server Stats
command.stats.response.field3.title=JVM Stats
command.stats.response.field1.value=\n**Shards** %shardCount%\
  \n**Unique Users** %userCount%\
  \n**Guilds** %guildCount%\
  \n**Connected VoiceChannels** %cVCCount%\
  \n**Threads** %botThreadCount%\
  \n**Uptime** %botUptime%\n​
command.stats.response.field2.value=\n**Cores** %coreCount%\
  \n**RAM Usage** %ramUsage%\
  \n**System Uptime** %systemUptime%\n​
command.stats.response.field3.value=\n**CPU Usage** %jvmCPUUsage%\
  \n**Ram Usage** %ramUsage%\
  \n**Threads** %threadCount%

command.help.syntax=%prefix%help [list | commmand*]
command.help.description=Shows info about commands
command.help.response1.server=https://melijn.com/server/%guildId%/commands or `%prefix%help list`
command.help.response1.pm=https://melijn.com/commands or `%prefix%help list`
command.help.response3.line1=Help off **%cmdName%**
command.help.response3.line2=\n**Syntax:** `%cmdSyntax%`
command.help.response3.line3=\n**Aliases:** `%cmdAliases%`
command.help.response3.line4=\n**Description:** %cmdDescription%
command.help.response3.line5=\n**Help:** %cmdHelp%
command.help.response3.line6=\n**Category:** %cmdCategory%

command.help.list.syntax=%prefix%help list
command.help.list.description=Shows the list of commands
command.help.list.title=Command List
command.help.list.field1.title=Utility
command.help.list.field2.title=Administration
command.help.list.field3.title=Moderation
command.help.list.field4.title=Music
command.help.list.field5.title=Image
command.help.list.field6.title=Animal
command.help.list.field7.title=Anime
command.help.list.field8.title=Supporter
command.help.list.footer=Command count: %cmdCount%

command.guildinfo.syntax=%prefix%guildInfo [guildId*]
command.guildinfo.description=Shows info about the server
command.guildinfo.response1.field1.title=General Information
command.guildinfo.response1.field1.value=**Name** %guildName%\
  \n**ID** %guildId%\
  \n**Region** %region%\
  \n**VIP Region** %isVip%\
  \n**Owner** %owner%\
  \n**Creation Time** %creationDate%\
  \n**Verification Level** %verificationLevel%\
  \n**Multi Factor Authentication Level** %mfa%\n​
command.guildinfo.response1.field2.title=Statistic Information
command.guildinfo.response1.field2.value=**Members** %memberCount%\
  \n**Users** %userCount% (%userPercent%% of users)\
  \n**Bots** %botCount% (%botPercent%% of Users)\
  \n**Boosts** %boostCount%\
  \n**Boost Tier** %boostTier%\
  \n**Roles** %roleCount%\
  \n**Text Channels** %textChannelCount%\
  \n**Voice Channels** %voiceChannelCount%\
  \n**Categories** %categoryCount%\n​
command.guildinfo.response1.field3.title=Images
command.guildinfo.response1.field3.value.part1=[Icon](%iconUrl%)\n
command.guildinfo.response1.field3.value.part2=[Banner](%bannerUrl%)\n
command.guildinfo.response1.field3.value.part3=[Splash](%splashUrl%)\n
command.guildinfo.response1.field3.value.part4=[Vanity](%vanityUrl%)\n

command.userinfo.syntax=%prefix%userInfo [user*]
command.userinfo.description=Shows info about a user, even more if the user is also a member
command.userinfo.response1.field1.title=User Info
command.userinfo.response1.field1.value=**Name** %name%\
  \n**Discriminator** %discrim%\
  \n**Bot** %isBot%\
  \n**Avatar** [link](%avatarUrl%)\
  \n**Creation Time** %creationTime%\n​
command.userinfo.response1.field2.title=Member Info
command.userinfo.response1.field2.value=**Roles** %roleCount%\
  \n**Nickname** %nickname%\
  \n**Guild Owner** %isOwner%\
  \n**Join Time** %joinTime%\
  \n**Boost Time** %boostTime%\
  \n**Activities** %activities%\
  \n**Online Status** %onlineStatus%\
  \n**Voice Status** %voiceStatus%

command.roleinfo.syntax=%prefix%roleInfo [role*]
command.roleinfo.description=Shows info about a role
command.roleinfo.response1.field1.title=Role Info
command.roleinfo.response1.field1.value=**Name** %roleName%\
  \n**ID** %roleId%\
  \n**Creation Time** %creationTime%\
  \n**Position** %position%\
  \n**Members** %members%\
  \n**Mentionable** %isMentionable%\
  \n**Hoisted** %isHoisted%\
  \n**Managed** %isManaged%\
  \n**Color** %color%

command.roles.syntax=%prefix%roles [guildId*]
command.roles.description=Shows the list of roles of a guild
command.roles.response1.title=**Roles List** of %guildName%

command.shards.syntax=%prefix%shards
command.shards.description=Shows a table of information about each shard
command.shards.noshardmanager=The bot is not sharding

command.unicode.syntax=.unicode <text*>
command.unicode.description=Returns the unicode of each character of the input

command.emote.syntax=%prefix%emote <emote*>
command.emote.description=Shows info about the emote
command.emote.notanemote=**%arg%** is not an emote
command.emote.response1.part1=**ID** %id%\
\n**Name** %name%
command.emote.response1.part2=\n**Animated** %isAnimated%\
\n**URL** %url%
command.emote.response1.extra=\n**Creation Time** %creationTime%

command.info.syntax=%prefix%info
command.info.description=Show info about the bot
command.info.field1.title=About
command.info.field1.value=Melijn is an opensource discord bot written in kotlin with <3 by **%ownerTag%**. Melijn is made to support a big user base and aimed at providing moderation, administration, customization, utilities, music and more. If you have problems or suggestion then don't hesitate to report them in our support server below :)\
  \n​\n**[Support Server](%invite%)** • **[Bot Invite](%botInvite%)** • **[Website](%website%)**\n​
command.info.field2.title=Info
command.info.field2.value=**Operating System** %os%\
  \n**Coded in** Kotlin and Java\
  \n**Commands** %commandCount%\n​
command.info.field3.title=Versions
command.info.field3.value=**Java Version** %javaVersion%\
  \n**Kotlin Version** %kotlinVersion%\
  \n**LavaPlayer Version** %lavaplayerVersion%\
  \n**Weeb.java Version** %weebVersion%\
  \n**MySQL Version** %mysqlVersion%\
  \n**MySQL Connector Version** %mysqlConnectorVersion%

command.permission.syntax=%prefix%permission <user, roles, channel>
command.permission.description=Command for managing who is able to use certain commands
command.permission.user.syntax=%prefix%permission user <set, view, copy, clear>
command.permission.user.set.syntax=%prefix%permission user set <user*> <permissionNode*> <state*>
command.permission.user.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for **%user%**
command.permission.user.view.syntax=%prefix%permission user view <user*> [permissionNode*]
command.permission.user.view.response1.title=Permissions of **%user%** that match `%permissionNode%`
command.permission.user.copy.syntax=%prefix%permission user copy <user, role, channel>
command.permission.user.copy.user.syntax=%prefix%permission user copy user <user*> <user*>
command.permission.user.copy.user.response1=Copied **%permissionCount%** permission from **%user1%** to **%user2%**
command.permission.user.copy.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** to **%user2%**
command.permission.user.copy.role.syntax=%prefix%permission user copy role <user*> <role*>
command.permission.user.copy.role.response1=Copied **%permissionCount%** permission from **%user%** to `%role%`
command.permission.user.copy.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** to `%role%`
command.permission.user.copy.channel.syntax=%prefix%permission user copy channel <user, role>
command.permission.user.copy.channel.user.syntax=%prefix%permission user copy channel user <user*> <channel*> <user*>
command.permission.user.copy.channel.user.response1=Copied **%permissionCount%** permission from **%user1%** in **%channel%** to **%user2%**
command.permission.user.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** in **%channel%** to **%user2%**
command.permission.user.copy.channel.role.syntax=%prefix%permission user copy channel role <user*> <channel*> <role*>
command.permission.user.copy.channel.role.response1=Copied **%permissionCount%** permission from **%user%** in **%channel%** to `%role%`
command.permission.user.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** in **%channel%** to `%role%`
command.permission.user.clear.syntax=%prefix%permission user clear <user*>
command.permission.user.clear.response1=Permissions for **%user%** have been cleared

command.permission.role.syntax=%prefix%permission role <set, view, copy, clear>
command.permission.role.set.syntax=%prefix%permission role set <role*> <permissionNode*> <state*>
command.permission.role.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for `%role%`
command.permission.role.view.syntax=%prefix%permission role view <role*> [permissionNode*]
command.permission.role.view.response1.title=Permissions of `%role%` that match `%permissionNode%`
command.permission.role.copy.syntax=%prefix%permission role copy <user, role, channel>
command.permission.role.copy.user.syntax=%prefix%permission role copy user <role*> <user*>
command.permission.role.copy.user.response1=Copied **%permissionCount%** permission from **%role%** to **%user%**
command.permission.role.copy.user.response1.multiple=Copied **%permissionCount%** permissions from **%role%** to **%user%**
command.permission.role.copy.role.syntax=%prefix%permission role copy role <role*> <role*>
command.permission.role.copy.role.response1=Copied **%permissionCount%** permission from **%role1%** to **%role2%**
command.permission.role.copy.role.response1.multiple=Copied **%permissionCount%** permissions from **%role1%** to **%role2%**
command.permission.role.copy.channel.syntax=%prefix%permission role copy channel <role, role>
command.permission.role.copy.channel.user.syntax=%prefix%permission role copy channel user <role*> <channel*> <user*>
command.permission.role.copy.channel.user.response1=Copied **%permissionCount%** permission from `%role%` in **%channel%** to **%user%**
command.permission.role.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from `%role%` in **%channel%** to **%user%**
command.permission.role.copy.channel.role.syntax=%prefix%permission role copy channel role <role*> <channel*> <role*>
command.permission.role.copy.channel.role.response1=Copied **%permissionCount%** permission from `%role1%` in **%channel%** to `%role2%`
command.permission.role.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from `%role1%` in **%channel%** to `%role2%`
command.permission.role.clear.syntax=%prefix%permission role clear <role*>
command.permission.role.clear.response1=Permissions for `%role%` have been cleared

command.permission.channel.syntax=%prefix%permission channel <role, user>
command.permission.channel.role.syntax=%prefix%permission channel role <set, view, copy, clear>
command.permission.channel.role.set.syntax=%prefix%permission channel role set <channel*> <role*> <permissionNode*> <state*>
command.permission.channel.role.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for `%role%` in **%channel%**
command.permission.channel.role.view.syntax=%prefix%permission channel role view <channel*> <role*> [permissionNode*]
command.permission.channel.role.view.response1.title=Permissions of `%role%` in **%channel%** that match `%permissionNode%`
command.permission.channel.role.copy.syntax=%prefix%permission channel role copy <user, role, channel>
command.permission.channel.role.copy.user.syntax=%prefix%permission role copy user <channel*> <role*> <user*>
command.permission.channel.role.copy.user.response1=Copied **%permissionCount%** permission from `%role%` in **%channel%** to **%user%**
command.permission.channel.role.copy.user.response1.multiple=Copied **%permissionCount%** permissions from `%role%` in **%channel%** to **%user%**
command.permission.channel.role.copy.role.syntax=%prefix%permission role copy role <channel*> <role*> <role*>
command.permission.channel.role.copy.role.response1=Copied **%permissionCount%** permission from `%role1%` in **%channel%** to `%role2%`
command.permission.channel.role.copy.role.response1.multiple=Copied **%permissionCount%** permissions from `%role1%` in **%channel%** to `%role2%`
command.permission.channel.role.copy.channel.syntax=%prefix%permission channel role copy channel <role, role>
command.permission.channel.role.copy.channel.user.syntax=%prefix%permission channel role copy channel user <channel*> <role*> <channel*> <user*>
command.permission.channel.role.copy.channel.user.response1=Copied **%permissionCount%** permission from `%role%` in **%channel1%** to **%user%** in **%channel2%**
command.permission.channel.role.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from `%role%` in **%channel1%** to **%user%** in **%channel2%**
command.permission.channel.role.copy.channel.role.syntax=%prefix%permission channel role copy channel role <channel*> <role*> <channel*> <role*>
command.permission.channel.role.copy.channel.role.response1=Copied **%permissionCount%** permission from `%role1%` in **%channel1%** to `%role2%` in **%channel2%**
command.permission.channel.role.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from `%role1%` in **%channel1%** to `%role2%` in **%channel2%**
command.permission.channel.role.clear.syntax=%prefix%permission channel role clear <channel*> <role*>
command.permission.channel.role.clear.response1=Permissions for `%role%` in **%channel%** have been cleared

command.permission.channel.user.syntax=%prefix%permission channel user <set, view, copy, clear>
command.permission.channel.user.set.syntax=%prefix%permission channel user set <channel*> <user*> <permissionNode*> <state*>
command.permission.channel.user.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for **%user%** in **%channel%**
command.permission.channel.user.view.syntax=%prefix%permission channel user view <channel*> <user*> [permissionNode*]
command.permission.channel.user.view.response1.title=Permissions of **%user%** in **%channel%** that match `%permissionNode%`
command.permission.channel.user.copy.syntax=%prefix%permission channel user copy <user, role, channel>
command.permission.channel.user.copy.user.syntax=%prefix%permission user copy user <user*> <role*> <user*>
command.permission.channel.user.copy.user.response1=Copied **%permissionCount%** permission from **%user1%** in **%channel%** to **%user2%**
command.permission.channel.user.copy.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** in **%channel%** to **%user2%**
command.permission.channel.user.copy.role.syntax=%prefix%permission user copy role <user*> <role*> <role*>
command.permission.channel.user.copy.role.response1=Copied **%permissionCount%** permission from **%user%** in **%channel%** to `%role%`
command.permission.channel.user.copy.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** in **%channel%** to `%role%`
command.permission.channel.user.copy.channel.syntax=%prefix%permission channel user copy channel <role, role>
command.permission.channel.user.copy.channel.user.syntax=%prefix%permission channel user copy channel user <channel*> <user*> <channel*> <user*>
command.permission.channel.user.copy.channel.user.response1=Copied **%permissionCount%** permission from **%user1%** in **%channel1%** to **%user2%** in **%channel2%**
command.permission.channel.user.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** in **%channel1%** to **%user2%** in **%channel2%**
command.permission.channel.user.copy.channel.role.syntax=%prefix%permission channel user copy channel role <channel*> <user*> <channel*> <role*>
command.permission.channel.user.copy.channel.role.response1=Copied **%permissionCount%** permission from **%user%** in **%channel1%** to `%role%` in **%channel2%**
command.permission.channel.user.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** in **%channel1%** to `%role%` in **%channel2%**
command.permission.channel.user.clear.syntax=%prefix%permission channel user clear <channel*> <user*>
command.permission.channel.user.clear.response1=Permissions for **%user%** in **%channel%** have been cleared